Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/3c9e417a25304c1c976fc3dd4094ef0d-pulp.mps -sec 18000 -timeMode elapsed -branch -printingOptions all -solution /tmp/3c9e417a25304c1c976fc3dd4094ef0d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 7873 COLUMNS
At line 54500 RHS
At line 62369 BOUNDS
At line 64681 ENDATA
Problem MODEL has 7868 rows, 2311 columns and 39429 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 18000
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.321052 - 0.06 seconds
Cgl0002I 1008 variables fixed
Cgl0003I 100 fixed, 0 tightened bounds, 1177 strengthened rows, 640 substitutions
Cgl0003I 62 fixed, 0 tightened bounds, 23 strengthened rows, 34 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 485 strengthened rows, 26 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 912 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 730 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 616 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 576 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 552 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 523 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 471 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 373 strengthened rows, 0 substitutions
Cgl0004I processed model has 1336 rows, 651 columns (651 integer (650 of which binary)) and 13400 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 651 objects (651 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 165 integers unsatisfied sum - 35.6195
Cbc0038I Pass   1: suminf.   14.30769 (42) obj. 7.46154 iterations 557
Cbc0038I Pass   2: suminf.    6.39744 (26) obj. 7.38462 iterations 121
Cbc0038I Pass   3: suminf.    5.55128 (24) obj. 7.38462 iterations 77
Cbc0038I Pass   4: suminf.    5.45944 (28) obj. 7.4201 iterations 18
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 10 iterations 372
Cbc0038I Solution found of 10
Cbc0038I Cleaned solution of 10
Cbc0038I Before mini branch and bound, 464 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1336 rows 651 columns, reduced to 707 rows 143 columns
Cbc0038I Mini branch and bound improved solution from 10 to 7 (2.88 seconds)
Cbc0038I Round again with cutoff of 5.68783
Cbc0038I Pass   6: suminf.   18.10716 (62) obj. 5 iterations 93
Cbc0038I Pass   7: suminf.    9.94120 (50) obj. 5.68783 iterations 274
Cbc0038I Pass   8: suminf.    9.36959 (56) obj. 5.68783 iterations 66
Cbc0038I Pass   9: suminf.    9.08326 (52) obj. 5.68783 iterations 72
Cbc0038I Pass  10: suminf.    8.29515 (49) obj. 5.68783 iterations 52
Cbc0038I Pass  11: suminf.    8.24731 (49) obj. 5.68783 iterations 112
Cbc0038I Pass  12: suminf.    7.40139 (45) obj. 5.68783 iterations 102
Cbc0038I Pass  13: suminf.    8.17853 (50) obj. 5.68783 iterations 72
Cbc0038I Pass  14: suminf.    6.92739 (69) obj. 5.68783 iterations 76
Cbc0038I Pass  15: suminf.    6.53672 (42) obj. 5.68783 iterations 17
Cbc0038I Pass  16: suminf.    8.33398 (44) obj. 5.68783 iterations 77
Cbc0038I Pass  17: suminf.    7.30814 (81) obj. 5.68783 iterations 78
Cbc0038I Pass  18: suminf.    7.30051 (74) obj. 5.68783 iterations 14
Cbc0038I Pass  19: suminf.    7.46214 (42) obj. 5.68783 iterations 53
Cbc0038I Pass  20: suminf.    6.53672 (42) obj. 5.68783 iterations 35
Cbc0038I Pass  21: suminf.    8.32464 (50) obj. 5.68783 iterations 51
Cbc0038I Pass  22: suminf.    7.30814 (81) obj. 5.68783 iterations 46
Cbc0038I Pass  23: suminf.    7.30051 (74) obj. 5.68783 iterations 12
Cbc0038I Pass  24: suminf.    6.70413 (42) obj. 5.68783 iterations 35
Cbc0038I Pass  25: suminf.    6.53672 (42) obj. 5.68783 iterations 13
Cbc0038I Pass  26: suminf.    8.93282 (45) obj. 5.68783 iterations 82
Cbc0038I Pass  27: suminf.   14.62767 (76) obj. 5.68783 iterations 215
Cbc0038I Pass  28: suminf.   10.14848 (55) obj. 5.68783 iterations 153
Cbc0038I Pass  29: suminf.    9.62251 (47) obj. 5.68783 iterations 39
Cbc0038I Pass  30: suminf.    9.39371 (45) obj. 5.68783 iterations 52
Cbc0038I Pass  31: suminf.    8.97341 (50) obj. 5.68783 iterations 56
Cbc0038I Pass  32: suminf.    8.72738 (45) obj. 5.68783 iterations 34
Cbc0038I Pass  33: suminf.    8.30082 (45) obj. 5.68783 iterations 32
Cbc0038I Pass  34: suminf.    7.82225 (46) obj. 5.68783 iterations 47
Cbc0038I Pass  35: suminf.    7.82152 (46) obj. 5.68783 iterations 13
Cbc0038I Pass  36: suminf.    8.61886 (49) obj. 5.68783 iterations 95
Cbc0038I Pass  37: suminf.    7.92164 (49) obj. 5.68783 iterations 56
Cbc0038I Pass  38: suminf.    8.29672 (57) obj. 5.68783 iterations 74
Cbc0038I Pass  39: suminf.    8.02207 (48) obj. 5.68783 iterations 36
Cbc0038I Pass  40: suminf.    9.32327 (51) obj. 5.68783 iterations 75
Cbc0038I Pass  41: suminf.    8.37774 (48) obj. 5.68783 iterations 61
Cbc0038I Pass  42: suminf.    8.66142 (56) obj. 5.68783 iterations 66
Cbc0038I Pass  43: suminf.   15.97853 (64) obj. 5.68783 iterations 264
Cbc0038I Pass  44: suminf.    9.25153 (54) obj. 5.68783 iterations 175
Cbc0038I Pass  45: suminf.    8.21981 (55) obj. 5.68783 iterations 137
Cbc0038I Pass  46: suminf.    8.21981 (55) obj. 5.68783 iterations 14
Cbc0038I Pass  47: suminf.   11.87469 (48) obj. 5.68783 iterations 100
Cbc0038I Pass  48: suminf.    8.31664 (59) obj. 5.68783 iterations 90
Cbc0038I Pass  49: suminf.    8.00250 (54) obj. 5.68783 iterations 63
Cbc0038I Pass  50: suminf.    8.00250 (54) obj. 5.68783 iterations 3
Cbc0038I Pass  51: suminf.   10.45049 (49) obj. 5.68783 iterations 173
Cbc0038I Pass  52: suminf.    8.96017 (51) obj. 5.68783 iterations 72
Cbc0038I Pass  53: suminf.    8.52567 (50) obj. 5.68783 iterations 22
Cbc0038I Pass  54: suminf.   10.86752 (50) obj. 5.68783 iterations 117
Cbc0038I Pass  55: suminf.    8.75437 (60) obj. 5.68783 iterations 105
Cbc0038I Pass  56: suminf.    8.75021 (50) obj. 5.68783 iterations 34
Cbc0038I Pass  57: suminf.    9.81876 (51) obj. 5.68783 iterations 106
Cbc0038I Pass  58: suminf.    8.33946 (50) obj. 5.68783 iterations 120
Cbc0038I Pass  59: suminf.    7.94756 (50) obj. 5.68783 iterations 18
Cbc0038I Pass  60: suminf.    9.59457 (55) obj. 5.68783 iterations 131
Cbc0038I Pass  61: suminf.    8.01964 (56) obj. 5.68783 iterations 106
Cbc0038I Pass  62: suminf.    9.30459 (47) obj. 5.68783 iterations 99
Cbc0038I Pass  63: suminf.    8.37774 (48) obj. 5.68783 iterations 107
Cbc0038I Pass  64: suminf.    8.82727 (57) obj. 5.68783 iterations 78
Cbc0038I Pass  65: suminf.    8.22570 (47) obj. 5.68783 iterations 70
Cbc0038I Pass  66: suminf.    8.17740 (52) obj. 5.68783 iterations 32
Cbc0038I Pass  67: suminf.    8.37581 (56) obj. 5.68783 iterations 102
Cbc0038I Pass  68: suminf.    8.15248 (52) obj. 5.68783 iterations 80
Cbc0038I Pass  69: suminf.    8.28563 (52) obj. 5.68783 iterations 68
Cbc0038I Pass  70: suminf.    8.26143 (47) obj. 5.68783 iterations 62
Cbc0038I Pass  71: suminf.    8.09194 (51) obj. 5.68783 iterations 67
Cbc0038I Pass  72: suminf.    8.03702 (54) obj. 5.68783 iterations 41
Cbc0038I Pass  73: suminf.    9.46986 (48) obj. 5.68783 iterations 136
Cbc0038I Pass  74: suminf.    8.51201 (48) obj. 5.68783 iterations 108
Cbc0038I Pass  75: suminf.   10.80705 (50) obj. 5.68783 iterations 133
Cbc0038I Pass  76: suminf.    9.11360 (60) obj. 5.68783 iterations 75
Cbc0038I Pass  77: suminf.    9.11190 (59) obj. 5.68783 iterations 17
Cbc0038I Pass  78: suminf.   10.05238 (50) obj. 5.68783 iterations 53
Cbc0038I Pass  79: suminf.    8.73655 (49) obj. 5.68783 iterations 89
Cbc0038I Pass  80: suminf.    8.69344 (49) obj. 5.68783 iterations 15
Cbc0038I Pass  81: suminf.    8.14378 (47) obj. 5.68783 iterations 60
Cbc0038I Pass  82: suminf.    7.86917 (52) obj. 5.68783 iterations 28
Cbc0038I Pass  83: suminf.    9.12585 (48) obj. 5.68783 iterations 146
Cbc0038I Pass  84: suminf.    8.32354 (47) obj. 5.68783 iterations 59
Cbc0038I Pass  85: suminf.    8.05242 (53) obj. 5.68783 iterations 22
Cbc0038I Pass  86: suminf.    8.59833 (54) obj. 5.68783 iterations 115
Cbc0038I Pass  87: suminf.    7.91989 (56) obj. 5.68783 iterations 57
Cbc0038I Pass  88: suminf.   10.13786 (51) obj. 5.68783 iterations 179
Cbc0038I Pass  89: suminf.    8.43493 (50) obj. 5.68783 iterations 95
Cbc0038I Pass  90: suminf.    7.85543 (42) obj. 5.68783 iterations 57
Cbc0038I Pass  91: suminf.    7.54239 (44) obj. 5.68783 iterations 33
Cbc0038I Pass  92: suminf.   11.26206 (48) obj. 5.68783 iterations 124
Cbc0038I Pass  93: suminf.    8.31585 (44) obj. 5.68783 iterations 109
Cbc0038I Pass  94: suminf.    8.21981 (55) obj. 5.68783 iterations 46
Cbc0038I Pass  95: suminf.    9.62865 (50) obj. 5.68783 iterations 95
Cbc0038I Pass  96: suminf.    8.05659 (57) obj. 5.68783 iterations 87
Cbc0038I Pass  97: suminf.   11.32754 (45) obj. 5.68783 iterations 99
Cbc0038I Pass  98: suminf.    9.33937 (50) obj. 5.68783 iterations 45
Cbc0038I Pass  99: suminf.    9.21826 (49) obj. 5.68783 iterations 1
Cbc0038I Pass 100: suminf.    9.24132 (42) obj. 5.68783 iterations 110
Cbc0038I Pass 101: suminf.    8.06633 (49) obj. 5.68783 iterations 73
Cbc0038I Pass 102: suminf.    7.96162 (44) obj. 5.68783 iterations 22
Cbc0038I Pass 103: suminf.    7.72671 (48) obj. 5.68783 iterations 10
Cbc0038I Pass 104: suminf.    9.41512 (48) obj. 5.68783 iterations 95
Cbc0038I Pass 105: suminf.   11.90093 (70) obj. 5.68783 iterations 224
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 401 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1336 rows 651 columns, reduced to 831 rows 221 columns - 11 fixed gives 402, 96 - ok now
Cbc0038I Mini branch and bound did not improve solution (4.11 seconds)
Cbc0038I After 4.11 seconds - Feasibility pump exiting with objective of 7 - took 2.06 seconds
Cbc0012I Integer solution of 7 found by feasibility pump after 0 iterations and 0 nodes (4.11 seconds)
Cbc0038I Full problem 1336 rows 651 columns, reduced to 643 rows 121 columns
Cbc0031I 3 added rows had average density of 37
Cbc0013I At root node, 275 cuts changed objective from 2.8774434 to 17.877891 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 149 row cuts average 11.5 elements, 6 column cuts (6 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 119 row cuts average 154.1 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 3 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective 7, took 658 iterations and 0 nodes (4.52 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2.87744 to 17.8779
Probing was tried 1 times and created 155 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 1 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 1 times and created 119 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
ZeroHalf was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                7.00000000
Enumerated nodes:               0
Total iterations:               658
Time (CPU seconds):             4.51
Time (Wallclock seconds):       4.59

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.54   (Wallclock seconds):       4.64

end constraints done
general activity object constraints done
duration constraints done
resource constraints done

Time slot  0
record claim  on object  0 ( claim )  with  -
record claim  on object  0 ( claim )  with  Wanda
record claim  on object  2 ( claim )  with  -
record claim  on object  2 ( claim )  with  Emil

Time slot  1
record claim  on object  1 ( claim )  with  -
record claim  on object  1 ( claim )  with  Willy
question claim (request assessment)  on object  0 ( claim )  with  -
question claim (request assessment)  on object  0 ( claim )  with  Wanda
question claim (request assessment)  on object  2 ( claim )  with  -
question claim (request assessment)  on object  2 ( claim )  with  Emil
question claim (request assessment)  on object  3 ( assessment )  with  -
question claim (request assessment)  on object  3 ( assessment )  with  Emil
question claim (request assessment)  on object  4 ( assessment )  with  -
question claim (request assessment)  on object  4 ( assessment )  with  Wanda

Time slot  2
assess claim  on object  3 ( assessment )  with  -
assess claim  on object  3 ( assessment )  with  Emil
question claim (request assessment)  on object  1 ( claim )  with  -
question claim (request assessment)  on object  1 ( claim )  with  Wanda
question claim (request assessment)  on object  5 ( assessment )  with  -
question claim (request assessment)  on object  5 ( assessment )  with  Wanda

Time slot  3
assess claim  on object  5 ( assessment )  with  -
assess claim  on object  5 ( assessment )  with  Erika

Time slot  4
assess claim  on object  4 ( assessment )  with  -
assess claim  on object  4 ( assessment )  with  Emil
decide claim (with assessment)  on object  1 ( claim )  with  -
decide claim (with assessment)  on object  1 ( claim )  with  Wanda
decide claim (with assessment)  on object  1 ( claim )  with  Willy
decide claim (with assessment)  on object  3 ( assessment )  with  -
decide claim (with assessment)  on object  3 ( assessment )  with  Wanda
decide claim (with assessment)  on object  3 ( assessment )  with  Willy

Time slot  5
decide claim (with assessment)  on object  2 ( claim )  with  -
decide claim (with assessment)  on object  2 ( claim )  with  Wanda
decide claim (with assessment)  on object  2 ( claim )  with  Willy
decide claim (with assessment)  on object  5 ( assessment )  with  -
decide claim (with assessment)  on object  5 ( assessment )  with  Wanda
decide claim (with assessment)  on object  5 ( assessment )  with  Willy

Time slot  6
decide claim (with assessment)  on object  0 ( claim )  with  -
decide claim (with assessment)  on object  0 ( claim )  with  Willy
decide claim (with assessment)  on object  0 ( claim )  with  Emil
decide claim (with assessment)  on object  4 ( assessment )  with  -
decide claim (with assessment)  on object  4 ( assessment )  with  Willy
decide claim (with assessment)  on object  4 ( assessment )  with  Emil

Time slot  7
finish  on object  0 ( claim )  with  -
finish  on object  1 ( claim )  with  -
finish  on object  2 ( claim )  with  -
finish  on object  3 ( assessment )  with  -
finish  on object  4 ( assessment )  with  -
finish  on object  5 ( assessment )  with  -

Time slot  8

Time slot  9

Time slot  10
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ef93365d37e6423f93071eea6a429cd8-pulp.mps -sec 18000 -timeMode elapsed -branch -printingOptions all -solution /tmp/ef93365d37e6423f93071eea6a429cd8-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 7873 COLUMNS
At line 54500 RHS
At line 62369 BOUNDS
At line 64681 ENDATA
Problem MODEL has 7868 rows, 2311 columns and 39429 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 18000
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.321052 - 0.06 seconds
Cgl0002I 1008 variables fixed
Cgl0003I 100 fixed, 0 tightened bounds, 1177 strengthened rows, 640 substitutions
Cgl0003I 62 fixed, 0 tightened bounds, 23 strengthened rows, 34 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 485 strengthened rows, 26 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 912 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 730 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 616 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 576 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 552 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 523 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 471 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 373 strengthened rows, 0 substitutions
Cgl0004I processed model has 1336 rows, 651 columns (651 integer (650 of which binary)) and 13400 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 651 objects (651 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 165 integers unsatisfied sum - 35.6195
Cbc0038I Pass   1: suminf.   14.30769 (42) obj. 7.46154 iterations 557
Cbc0038I Pass   2: suminf.    6.39744 (26) obj. 7.38462 iterations 121
Cbc0038I Pass   3: suminf.    5.55128 (24) obj. 7.38462 iterations 77
Cbc0038I Pass   4: suminf.    5.45944 (28) obj. 7.4201 iterations 18
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 10 iterations 372
Cbc0038I Solution found of 10
Cbc0038I Cleaned solution of 10
Cbc0038I Before mini branch and bound, 464 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1336 rows 651 columns, reduced to 707 rows 143 columns
Cbc0038I Mini branch and bound improved solution from 10 to 7 (2.87 seconds)
Cbc0038I Round again with cutoff of 5.68783
Cbc0038I Pass   6: suminf.   18.10716 (62) obj. 5 iterations 93
Cbc0038I Pass   7: suminf.    9.94120 (50) obj. 5.68783 iterations 274
Cbc0038I Pass   8: suminf.    9.36959 (56) obj. 5.68783 iterations 66
Cbc0038I Pass   9: suminf.    9.08326 (52) obj. 5.68783 iterations 72
Cbc0038I Pass  10: suminf.    8.29515 (49) obj. 5.68783 iterations 52
Cbc0038I Pass  11: suminf.    8.24731 (49) obj. 5.68783 iterations 112
Cbc0038I Pass  12: suminf.    7.40139 (45) obj. 5.68783 iterations 102
Cbc0038I Pass  13: suminf.    8.17853 (50) obj. 5.68783 iterations 72
Cbc0038I Pass  14: suminf.    6.92739 (69) obj. 5.68783 iterations 76
Cbc0038I Pass  15: suminf.    6.53672 (42) obj. 5.68783 iterations 17
Cbc0038I Pass  16: suminf.    8.33398 (44) obj. 5.68783 iterations 77
Cbc0038I Pass  17: suminf.    7.30814 (81) obj. 5.68783 iterations 78
Cbc0038I Pass  18: suminf.    7.30051 (74) obj. 5.68783 iterations 14
Cbc0038I Pass  19: suminf.    7.46214 (42) obj. 5.68783 iterations 53
Cbc0038I Pass  20: suminf.    6.53672 (42) obj. 5.68783 iterations 35
Cbc0038I Pass  21: suminf.    8.32464 (50) obj. 5.68783 iterations 51
Cbc0038I Pass  22: suminf.    7.30814 (81) obj. 5.68783 iterations 46
Cbc0038I Pass  23: suminf.    7.30051 (74) obj. 5.68783 iterations 12
Cbc0038I Pass  24: suminf.    6.70413 (42) obj. 5.68783 iterations 35
Cbc0038I Pass  25: suminf.    6.53672 (42) obj. 5.68783 iterations 13
Cbc0038I Pass  26: suminf.    8.93282 (45) obj. 5.68783 iterations 82
Cbc0038I Pass  27: suminf.   14.62767 (76) obj. 5.68783 iterations 215
Cbc0038I Pass  28: suminf.   10.14848 (55) obj. 5.68783 iterations 153
Cbc0038I Pass  29: suminf.    9.62251 (47) obj. 5.68783 iterations 39
Cbc0038I Pass  30: suminf.    9.39371 (45) obj. 5.68783 iterations 52
Cbc0038I Pass  31: suminf.    8.97341 (50) obj. 5.68783 iterations 56
Cbc0038I Pass  32: suminf.    8.72738 (45) obj. 5.68783 iterations 34
Cbc0038I Pass  33: suminf.    8.30082 (45) obj. 5.68783 iterations 32
Cbc0038I Pass  34: suminf.    7.82225 (46) obj. 5.68783 iterations 47
Cbc0038I Pass  35: suminf.    7.82152 (46) obj. 5.68783 iterations 13
Cbc0038I Pass  36: suminf.    8.61886 (49) obj. 5.68783 iterations 95
Cbc0038I Pass  37: suminf.    7.92164 (49) obj. 5.68783 iterations 56
Cbc0038I Pass  38: suminf.    8.29672 (57) obj. 5.68783 iterations 74
Cbc0038I Pass  39: suminf.    8.02207 (48) obj. 5.68783 iterations 36
Cbc0038I Pass  40: suminf.    9.32327 (51) obj. 5.68783 iterations 75
Cbc0038I Pass  41: suminf.    8.37774 (48) obj. 5.68783 iterations 61
Cbc0038I Pass  42: suminf.    8.66142 (56) obj. 5.68783 iterations 66
Cbc0038I Pass  43: suminf.   15.97853 (64) obj. 5.68783 iterations 264
Cbc0038I Pass  44: suminf.    9.25153 (54) obj. 5.68783 iterations 175
Cbc0038I Pass  45: suminf.    8.21981 (55) obj. 5.68783 iterations 137
Cbc0038I Pass  46: suminf.    8.21981 (55) obj. 5.68783 iterations 14
Cbc0038I Pass  47: suminf.   11.87469 (48) obj. 5.68783 iterations 100
Cbc0038I Pass  48: suminf.    8.31664 (59) obj. 5.68783 iterations 90
Cbc0038I Pass  49: suminf.    8.00250 (54) obj. 5.68783 iterations 63
Cbc0038I Pass  50: suminf.    8.00250 (54) obj. 5.68783 iterations 3
Cbc0038I Pass  51: suminf.   10.45049 (49) obj. 5.68783 iterations 173
Cbc0038I Pass  52: suminf.    8.96017 (51) obj. 5.68783 iterations 72
Cbc0038I Pass  53: suminf.    8.52567 (50) obj. 5.68783 iterations 22
Cbc0038I Pass  54: suminf.   10.86752 (50) obj. 5.68783 iterations 117
Cbc0038I Pass  55: suminf.    8.75437 (60) obj. 5.68783 iterations 105
Cbc0038I Pass  56: suminf.    8.75021 (50) obj. 5.68783 iterations 34
Cbc0038I Pass  57: suminf.    9.81876 (51) obj. 5.68783 iterations 106
Cbc0038I Pass  58: suminf.    8.33946 (50) obj. 5.68783 iterations 120
Cbc0038I Pass  59: suminf.    7.94756 (50) obj. 5.68783 iterations 18
Cbc0038I Pass  60: suminf.    9.59457 (55) obj. 5.68783 iterations 131
Cbc0038I Pass  61: suminf.    8.01964 (56) obj. 5.68783 iterations 106
Cbc0038I Pass  62: suminf.    9.30459 (47) obj. 5.68783 iterations 99
Cbc0038I Pass  63: suminf.    8.37774 (48) obj. 5.68783 iterations 107
Cbc0038I Pass  64: suminf.    8.82727 (57) obj. 5.68783 iterations 78
Cbc0038I Pass  65: suminf.    8.22570 (47) obj. 5.68783 iterations 70
Cbc0038I Pass  66: suminf.    8.17740 (52) obj. 5.68783 iterations 32
Cbc0038I Pass  67: suminf.    8.37581 (56) obj. 5.68783 iterations 102
Cbc0038I Pass  68: suminf.    8.15248 (52) obj. 5.68783 iterations 80
Cbc0038I Pass  69: suminf.    8.28563 (52) obj. 5.68783 iterations 68
Cbc0038I Pass  70: suminf.    8.26143 (47) obj. 5.68783 iterations 62
Cbc0038I Pass  71: suminf.    8.09194 (51) obj. 5.68783 iterations 67
Cbc0038I Pass  72: suminf.    8.03702 (54) obj. 5.68783 iterations 41
Cbc0038I Pass  73: suminf.    9.46986 (48) obj. 5.68783 iterations 136
Cbc0038I Pass  74: suminf.    8.51201 (48) obj. 5.68783 iterations 108
Cbc0038I Pass  75: suminf.   10.80705 (50) obj. 5.68783 iterations 133
Cbc0038I Pass  76: suminf.    9.11360 (60) obj. 5.68783 iterations 75
Cbc0038I Pass  77: suminf.    9.11190 (59) obj. 5.68783 iterations 17
Cbc0038I Pass  78: suminf.   10.05238 (50) obj. 5.68783 iterations 53
Cbc0038I Pass  79: suminf.    8.73655 (49) obj. 5.68783 iterations 89
Cbc0038I Pass  80: suminf.    8.69344 (49) obj. 5.68783 iterations 15
Cbc0038I Pass  81: suminf.    8.14378 (47) obj. 5.68783 iterations 60
Cbc0038I Pass  82: suminf.    7.86917 (52) obj. 5.68783 iterations 28
Cbc0038I Pass  83: suminf.    9.12585 (48) obj. 5.68783 iterations 146
Cbc0038I Pass  84: suminf.    8.32354 (47) obj. 5.68783 iterations 59
Cbc0038I Pass  85: suminf.    8.05242 (53) obj. 5.68783 iterations 22
Cbc0038I Pass  86: suminf.    8.59833 (54) obj. 5.68783 iterations 115
Cbc0038I Pass  87: suminf.    7.91989 (56) obj. 5.68783 iterations 57
Cbc0038I Pass  88: suminf.   10.13786 (51) obj. 5.68783 iterations 179
Cbc0038I Pass  89: suminf.    8.43493 (50) obj. 5.68783 iterations 95
Cbc0038I Pass  90: suminf.    7.85543 (42) obj. 5.68783 iterations 57
Cbc0038I Pass  91: suminf.    7.54239 (44) obj. 5.68783 iterations 33
Cbc0038I Pass  92: suminf.   11.26206 (48) obj. 5.68783 iterations 124
Cbc0038I Pass  93: suminf.    8.31585 (44) obj. 5.68783 iterations 109
Cbc0038I Pass  94: suminf.    8.21981 (55) obj. 5.68783 iterations 46
Cbc0038I Pass  95: suminf.    9.62865 (50) obj. 5.68783 iterations 95
Cbc0038I Pass  96: suminf.    8.05659 (57) obj. 5.68783 iterations 87
Cbc0038I Pass  97: suminf.   11.32754 (45) obj. 5.68783 iterations 99
Cbc0038I Pass  98: suminf.    9.33937 (50) obj. 5.68783 iterations 45
Cbc0038I Pass  99: suminf.    9.21826 (49) obj. 5.68783 iterations 1
Cbc0038I Pass 100: suminf.    9.24132 (42) obj. 5.68783 iterations 110
Cbc0038I Pass 101: suminf.    8.06633 (49) obj. 5.68783 iterations 73
Cbc0038I Pass 102: suminf.    7.96162 (44) obj. 5.68783 iterations 22
Cbc0038I Pass 103: suminf.    7.72671 (48) obj. 5.68783 iterations 10
Cbc0038I Pass 104: suminf.    9.41512 (48) obj. 5.68783 iterations 95
Cbc0038I Pass 105: suminf.   11.90093 (70) obj. 5.68783 iterations 224
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 401 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1336 rows 651 columns, reduced to 831 rows 221 columns - 11 fixed gives 402, 96 - ok now
Cbc0038I Mini branch and bound did not improve solution (4.10 seconds)
Cbc0038I After 4.10 seconds - Feasibility pump exiting with objective of 7 - took 2.04 seconds
Cbc0012I Integer solution of 7 found by feasibility pump after 0 iterations and 0 nodes (4.10 seconds)
Cbc0038I Full problem 1336 rows 651 columns, reduced to 643 rows 121 columns
Cbc0031I 3 added rows had average density of 37
Cbc0013I At root node, 275 cuts changed objective from 2.8774434 to 17.877891 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 149 row cuts average 11.5 elements, 6 column cuts (6 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 119 row cuts average 154.1 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 3 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective 7, took 658 iterations and 0 nodes (4.51 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2.87744 to 17.8779
Probing was tried 1 times and created 155 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 1 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 1 times and created 119 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
ZeroHalf was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                7.00000000
Enumerated nodes:               0
Total iterations:               658
Time (CPU seconds):             4.47
Time (Wallclock seconds):       4.58

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.52   (Wallclock seconds):       4.63

end constraints done
general activity object constraints done
duration constraints done
resource constraints done

Time slot  0
record claim  on object  0 ( claim )  with  -
record claim  on object  0 ( claim )  with  Wanda
record claim  on object  2 ( claim )  with  -
record claim  on object  2 ( claim )  with  Emil

Time slot  1
record claim  on object  1 ( claim )  with  -
record claim  on object  1 ( claim )  with  Willy
question claim (request assessment)  on object  0 ( claim )  with  -
question claim (request assessment)  on object  0 ( claim )  with  Wanda
question claim (request assessment)  on object  2 ( claim )  with  -
question claim (request assessment)  on object  2 ( claim )  with  Emil
question claim (request assessment)  on object  3 ( assessment )  with  -
question claim (request assessment)  on object  3 ( assessment )  with  Emil
question claim (request assessment)  on object  4 ( assessment )  with  -
question claim (request assessment)  on object  4 ( assessment )  with  Wanda

Time slot  2
assess claim  on object  3 ( assessment )  with  -
assess claim  on object  3 ( assessment )  with  Emil
question claim (request assessment)  on object  1 ( claim )  with  -
question claim (request assessment)  on object  1 ( claim )  with  Wanda
question claim (request assessment)  on object  5 ( assessment )  with  -
question claim (request assessment)  on object  5 ( assessment )  with  Wanda

Time slot  3
assess claim  on object  5 ( assessment )  with  -
assess claim  on object  5 ( assessment )  with  Erika

Time slot  4
assess claim  on object  4 ( assessment )  with  -
assess claim  on object  4 ( assessment )  with  Emil
decide claim (with assessment)  on object  1 ( claim )  with  -
decide claim (with assessment)  on object  1 ( claim )  with  Wanda
decide claim (with assessment)  on object  1 ( claim )  with  Willy
decide claim (with assessment)  on object  3 ( assessment )  with  -
decide claim (with assessment)  on object  3 ( assessment )  with  Wanda
decide claim (with assessment)  on object  3 ( assessment )  with  Willy

Time slot  5
decide claim (with assessment)  on object  2 ( claim )  with  -
decide claim (with assessment)  on object  2 ( claim )  with  Wanda
decide claim (with assessment)  on object  2 ( claim )  with  Willy
decide claim (with assessment)  on object  5 ( assessment )  with  -
decide claim (with assessment)  on object  5 ( assessment )  with  Wanda
decide claim (with assessment)  on object  5 ( assessment )  with  Willy

Time slot  6
decide claim (with assessment)  on object  0 ( claim )  with  -
decide claim (with assessment)  on object  0 ( claim )  with  Willy
decide claim (with assessment)  on object  0 ( claim )  with  Emil
decide claim (with assessment)  on object  4 ( assessment )  with  -
decide claim (with assessment)  on object  4 ( assessment )  with  Willy
decide claim (with assessment)  on object  4 ( assessment )  with  Emil

Time slot  7
finish  on object  0 ( claim )  with  -
finish  on object  1 ( claim )  with  -
finish  on object  2 ( claim )  with  -
finish  on object  3 ( assessment )  with  -
finish  on object  4 ( assessment )  with  -
finish  on object  5 ( assessment )  with  -

Time slot  8

Time slot  9

Time slot  10
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/1719a8c1d03646c6bf3815949c18531e-pulp.mps -sec 18000 -timeMode elapsed -branch -printingOptions all -solution /tmp/1719a8c1d03646c6bf3815949c18531e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 7873 COLUMNS
At line 54500 RHS
At line 62369 BOUNDS
At line 64681 ENDATA
Problem MODEL has 7868 rows, 2311 columns and 39429 elements
Coin0008I MODEL read with 0 errors
seconds was changed from 1e+100 to 18000
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.321052 - 0.06 seconds
Cgl0002I 1008 variables fixed
Cgl0003I 100 fixed, 0 tightened bounds, 1177 strengthened rows, 640 substitutions
Cgl0003I 62 fixed, 0 tightened bounds, 23 strengthened rows, 34 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 485 strengthened rows, 26 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 912 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 730 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 616 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 576 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 552 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 523 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 471 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 373 strengthened rows, 0 substitutions
Cgl0004I processed model has 1336 rows, 651 columns (651 integer (650 of which binary)) and 13400 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 651 objects (651 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 165 integers unsatisfied sum - 35.6195
Cbc0038I Pass   1: suminf.   14.30769 (42) obj. 7.46154 iterations 557
Cbc0038I Pass   2: suminf.    6.39744 (26) obj. 7.38462 iterations 121
Cbc0038I Pass   3: suminf.    5.55128 (24) obj. 7.38462 iterations 77
Cbc0038I Pass   4: suminf.    5.45944 (28) obj. 7.4201 iterations 18
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 10 iterations 372
Cbc0038I Solution found of 10
Cbc0038I Cleaned solution of 10
Cbc0038I Before mini branch and bound, 464 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1336 rows 651 columns, reduced to 707 rows 143 columns
Cbc0038I Mini branch and bound improved solution from 10 to 7 (2.89 seconds)
Cbc0038I Round again with cutoff of 5.68783
Cbc0038I Pass   6: suminf.   18.10716 (62) obj. 5 iterations 93
Cbc0038I Pass   7: suminf.    9.94120 (50) obj. 5.68783 iterations 274
Cbc0038I Pass   8: suminf.    9.36959 (56) obj. 5.68783 iterations 66
Cbc0038I Pass   9: suminf.    9.08326 (52) obj. 5.68783 iterations 72
Cbc0038I Pass  10: suminf.    8.29515 (49) obj. 5.68783 iterations 52
Cbc0038I Pass  11: suminf.    8.24731 (49) obj. 5.68783 iterations 112
Cbc0038I Pass  12: suminf.    7.40139 (45) obj. 5.68783 iterations 102
Cbc0038I Pass  13: suminf.    8.17853 (50) obj. 5.68783 iterations 72
Cbc0038I Pass  14: suminf.    6.92739 (69) obj. 5.68783 iterations 76
Cbc0038I Pass  15: suminf.    6.53672 (42) obj. 5.68783 iterations 17
Cbc0038I Pass  16: suminf.    8.33398 (44) obj. 5.68783 iterations 77
Cbc0038I Pass  17: suminf.    7.30814 (81) obj. 5.68783 iterations 78
Cbc0038I Pass  18: suminf.    7.30051 (74) obj. 5.68783 iterations 14
Cbc0038I Pass  19: suminf.    7.46214 (42) obj. 5.68783 iterations 53
Cbc0038I Pass  20: suminf.    6.53672 (42) obj. 5.68783 iterations 35
Cbc0038I Pass  21: suminf.    8.32464 (50) obj. 5.68783 iterations 51
Cbc0038I Pass  22: suminf.    7.30814 (81) obj. 5.68783 iterations 46
Cbc0038I Pass  23: suminf.    7.30051 (74) obj. 5.68783 iterations 12
Cbc0038I Pass  24: suminf.    6.70413 (42) obj. 5.68783 iterations 35
Cbc0038I Pass  25: suminf.    6.53672 (42) obj. 5.68783 iterations 13
Cbc0038I Pass  26: suminf.    8.93282 (45) obj. 5.68783 iterations 82
Cbc0038I Pass  27: suminf.   14.62767 (76) obj. 5.68783 iterations 215
Cbc0038I Pass  28: suminf.   10.14848 (55) obj. 5.68783 iterations 153
Cbc0038I Pass  29: suminf.    9.62251 (47) obj. 5.68783 iterations 39
Cbc0038I Pass  30: suminf.    9.39371 (45) obj. 5.68783 iterations 52
Cbc0038I Pass  31: suminf.    8.97341 (50) obj. 5.68783 iterations 56
Cbc0038I Pass  32: suminf.    8.72738 (45) obj. 5.68783 iterations 34
Cbc0038I Pass  33: suminf.    8.30082 (45) obj. 5.68783 iterations 32
Cbc0038I Pass  34: suminf.    7.82225 (46) obj. 5.68783 iterations 47
Cbc0038I Pass  35: suminf.    7.82152 (46) obj. 5.68783 iterations 13
Cbc0038I Pass  36: suminf.    8.61886 (49) obj. 5.68783 iterations 95
Cbc0038I Pass  37: suminf.    7.92164 (49) obj. 5.68783 iterations 56
Cbc0038I Pass  38: suminf.    8.29672 (57) obj. 5.68783 iterations 74
Cbc0038I Pass  39: suminf.    8.02207 (48) obj. 5.68783 iterations 36
Cbc0038I Pass  40: suminf.    9.32327 (51) obj. 5.68783 iterations 75
Cbc0038I Pass  41: suminf.    8.37774 (48) obj. 5.68783 iterations 61
Cbc0038I Pass  42: suminf.    8.66142 (56) obj. 5.68783 iterations 66
Cbc0038I Pass  43: suminf.   15.97853 (64) obj. 5.68783 iterations 264
Cbc0038I Pass  44: suminf.    9.25153 (54) obj. 5.68783 iterations 175
Cbc0038I Pass  45: suminf.    8.21981 (55) obj. 5.68783 iterations 137
Cbc0038I Pass  46: suminf.    8.21981 (55) obj. 5.68783 iterations 14
Cbc0038I Pass  47: suminf.   11.87469 (48) obj. 5.68783 iterations 100
Cbc0038I Pass  48: suminf.    8.31664 (59) obj. 5.68783 iterations 90
Cbc0038I Pass  49: suminf.    8.00250 (54) obj. 5.68783 iterations 63
Cbc0038I Pass  50: suminf.    8.00250 (54) obj. 5.68783 iterations 3
Cbc0038I Pass  51: suminf.   10.45049 (49) obj. 5.68783 iterations 173
Cbc0038I Pass  52: suminf.    8.96017 (51) obj. 5.68783 iterations 72
Cbc0038I Pass  53: suminf.    8.52567 (50) obj. 5.68783 iterations 22
Cbc0038I Pass  54: suminf.   10.86752 (50) obj. 5.68783 iterations 117
Cbc0038I Pass  55: suminf.    8.75437 (60) obj. 5.68783 iterations 105
Cbc0038I Pass  56: suminf.    8.75021 (50) obj. 5.68783 iterations 34
Cbc0038I Pass  57: suminf.    9.81876 (51) obj. 5.68783 iterations 106
Cbc0038I Pass  58: suminf.    8.33946 (50) obj. 5.68783 iterations 120
Cbc0038I Pass  59: suminf.    7.94756 (50) obj. 5.68783 iterations 18
Cbc0038I Pass  60: suminf.    9.59457 (55) obj. 5.68783 iterations 131
Cbc0038I Pass  61: suminf.    8.01964 (56) obj. 5.68783 iterations 106
Cbc0038I Pass  62: suminf.    9.30459 (47) obj. 5.68783 iterations 99
Cbc0038I Pass  63: suminf.    8.37774 (48) obj. 5.68783 iterations 107
Cbc0038I Pass  64: suminf.    8.82727 (57) obj. 5.68783 iterations 78
Cbc0038I Pass  65: suminf.    8.22570 (47) obj. 5.68783 iterations 70
Cbc0038I Pass  66: suminf.    8.17740 (52) obj. 5.68783 iterations 32
Cbc0038I Pass  67: suminf.    8.37581 (56) obj. 5.68783 iterations 102
Cbc0038I Pass  68: suminf.    8.15248 (52) obj. 5.68783 iterations 80
Cbc0038I Pass  69: suminf.    8.28563 (52) obj. 5.68783 iterations 68
Cbc0038I Pass  70: suminf.    8.26143 (47) obj. 5.68783 iterations 62
Cbc0038I Pass  71: suminf.    8.09194 (51) obj. 5.68783 iterations 67
Cbc0038I Pass  72: suminf.    8.03702 (54) obj. 5.68783 iterations 41
Cbc0038I Pass  73: suminf.    9.46986 (48) obj. 5.68783 iterations 136
Cbc0038I Pass  74: suminf.    8.51201 (48) obj. 5.68783 iterations 108
Cbc0038I Pass  75: suminf.   10.80705 (50) obj. 5.68783 iterations 133
Cbc0038I Pass  76: suminf.    9.11360 (60) obj. 5.68783 iterations 75
Cbc0038I Pass  77: suminf.    9.11190 (59) obj. 5.68783 iterations 17
Cbc0038I Pass  78: suminf.   10.05238 (50) obj. 5.68783 iterations 53
Cbc0038I Pass  79: suminf.    8.73655 (49) obj. 5.68783 iterations 89
Cbc0038I Pass  80: suminf.    8.69344 (49) obj. 5.68783 iterations 15
Cbc0038I Pass  81: suminf.    8.14378 (47) obj. 5.68783 iterations 60
Cbc0038I Pass  82: suminf.    7.86917 (52) obj. 5.68783 iterations 28
Cbc0038I Pass  83: suminf.    9.12585 (48) obj. 5.68783 iterations 146
Cbc0038I Pass  84: suminf.    8.32354 (47) obj. 5.68783 iterations 59
Cbc0038I Pass  85: suminf.    8.05242 (53) obj. 5.68783 iterations 22
Cbc0038I Pass  86: suminf.    8.59833 (54) obj. 5.68783 iterations 115
Cbc0038I Pass  87: suminf.    7.91989 (56) obj. 5.68783 iterations 57
Cbc0038I Pass  88: suminf.   10.13786 (51) obj. 5.68783 iterations 179
Cbc0038I Pass  89: suminf.    8.43493 (50) obj. 5.68783 iterations 95
Cbc0038I Pass  90: suminf.    7.85543 (42) obj. 5.68783 iterations 57
Cbc0038I Pass  91: suminf.    7.54239 (44) obj. 5.68783 iterations 33
Cbc0038I Pass  92: suminf.   11.26206 (48) obj. 5.68783 iterations 124
Cbc0038I Pass  93: suminf.    8.31585 (44) obj. 5.68783 iterations 109
Cbc0038I Pass  94: suminf.    8.21981 (55) obj. 5.68783 iterations 46
Cbc0038I Pass  95: suminf.    9.62865 (50) obj. 5.68783 iterations 95
Cbc0038I Pass  96: suminf.    8.05659 (57) obj. 5.68783 iterations 87
Cbc0038I Pass  97: suminf.   11.32754 (45) obj. 5.68783 iterations 99
Cbc0038I Pass  98: suminf.    9.33937 (50) obj. 5.68783 iterations 45
Cbc0038I Pass  99: suminf.    9.21826 (49) obj. 5.68783 iterations 1
Cbc0038I Pass 100: suminf.    9.24132 (42) obj. 5.68783 iterations 110
Cbc0038I Pass 101: suminf.    8.06633 (49) obj. 5.68783 iterations 73
Cbc0038I Pass 102: suminf.    7.96162 (44) obj. 5.68783 iterations 22
Cbc0038I Pass 103: suminf.    7.72671 (48) obj. 5.68783 iterations 10
Cbc0038I Pass 104: suminf.    9.41512 (48) obj. 5.68783 iterations 95
Cbc0038I Pass 105: suminf.   11.90093 (70) obj. 5.68783 iterations 224
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 401 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1336 rows 651 columns, reduced to 831 rows 221 columns - 11 fixed gives 402, 96 - ok now
Cbc0038I Mini branch and bound did not improve solution (4.12 seconds)
Cbc0038I After 4.12 seconds - Feasibility pump exiting with objective of 7 - took 2.04 seconds
Cbc0012I Integer solution of 7 found by feasibility pump after 0 iterations and 0 nodes (4.12 seconds)
Cbc0038I Full problem 1336 rows 651 columns, reduced to 643 rows 121 columns
Cbc0031I 3 added rows had average density of 37
Cbc0013I At root node, 275 cuts changed objective from 2.8774434 to 17.877891 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 149 row cuts average 11.5 elements, 6 column cuts (6 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 119 row cuts average 154.1 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 3 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective 7, took 658 iterations and 0 nodes (4.54 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2.87744 to 17.8779
Probing was tried 1 times and created 155 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 1 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 1 times and created 119 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
ZeroHalf was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                7.00000000
Enumerated nodes:               0
Total iterations:               658
Time (CPU seconds):             4.51
Time (Wallclock seconds):       4.61

Option for printingOptions changed from normal to all
Total time (CPU seconds):       4.55   (Wallclock seconds):       4.66

end constraints done
general activity object constraints done
duration constraints done
resource constraints done

Time slot  0
record claim  on object  0 ( claim )  with  -
record claim  on object  0 ( claim )  with  Wanda
record claim  on object  2 ( claim )  with  -
record claim  on object  2 ( claim )  with  Emil

Time slot  1
record claim  on object  1 ( claim )  with  -
record claim  on object  1 ( claim )  with  Willy
question claim (request assessment)  on object  0 ( claim )  with  -
question claim (request assessment)  on object  0 ( claim )  with  Wanda
question claim (request assessment)  on object  2 ( claim )  with  -
question claim (request assessment)  on object  2 ( claim )  with  Emil
question claim (request assessment)  on object  3 ( assessment )  with  -
question claim (request assessment)  on object  3 ( assessment )  with  Emil
question claim (request assessment)  on object  4 ( assessment )  with  -
question claim (request assessment)  on object  4 ( assessment )  with  Wanda

Time slot  2
assess claim  on object  3 ( assessment )  with  -
assess claim  on object  3 ( assessment )  with  Emil
question claim (request assessment)  on object  1 ( claim )  with  -
question claim (request assessment)  on object  1 ( claim )  with  Wanda
question claim (request assessment)  on object  5 ( assessment )  with  -
question claim (request assessment)  on object  5 ( assessment )  with  Wanda

Time slot  3
assess claim  on object  5 ( assessment )  with  -
assess claim  on object  5 ( assessment )  with  Erika

Time slot  4
assess claim  on object  4 ( assessment )  with  -
assess claim  on object  4 ( assessment )  with  Emil
decide claim (with assessment)  on object  1 ( claim )  with  -
decide claim (with assessment)  on object  1 ( claim )  with  Wanda
decide claim (with assessment)  on object  1 ( claim )  with  Willy
decide claim (with assessment)  on object  3 ( assessment )  with  -
decide claim (with assessment)  on object  3 ( assessment )  with  Wanda
decide claim (with assessment)  on object  3 ( assessment )  with  Willy

Time slot  5
decide claim (with assessment)  on object  2 ( claim )  with  -
decide claim (with assessment)  on object  2 ( claim )  with  Wanda
decide claim (with assessment)  on object  2 ( claim )  with  Willy
decide claim (with assessment)  on object  5 ( assessment )  with  -
decide claim (with assessment)  on object  5 ( assessment )  with  Wanda
decide claim (with assessment)  on object  5 ( assessment )  with  Willy

Time slot  6
decide claim (with assessment)  on object  0 ( claim )  with  -
decide claim (with assessment)  on object  0 ( claim )  with  Willy
decide claim (with assessment)  on object  0 ( claim )  with  Emil
decide claim (with assessment)  on object  4 ( assessment )  with  -
decide claim (with assessment)  on object  4 ( assessment )  with  Willy
decide claim (with assessment)  on object  4 ( assessment )  with  Emil

Time slot  7
finish  on object  0 ( claim )  with  -
finish  on object  1 ( claim )  with  -
finish  on object  2 ( claim )  with  -
finish  on object  3 ( assessment )  with  -
finish  on object  4 ( assessment )  with  -
finish  on object  5 ( assessment )  with  -

Time slot  8

Time slot  9

Time slot  10
