Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/acda544594bd41f1900cd2a3ddeffa11-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/acda544594bd41f1900cd2a3ddeffa11-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 8783 COLUMNS
At line 90171 RHS
At line 98950 BOUNDS
At line 101724 ENDATA
Problem MODEL has 8778 rows, 2773 columns and 72870 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.04 seconds
Cgl0003I 55 fixed, 0 tightened bounds, 2391 strengthened rows, 673 substitutions
Cgl0003I 5 fixed, 0 tightened bounds, 1696 strengthened rows, 34 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1566 strengthened rows, 32 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2092 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1942 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1874 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1822 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1755 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1609 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1477 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1251 strengthened rows, 0 substitutions
Cgl0004I processed model has 2205 rows, 464 columns (464 integer (463 of which binary)) and 28875 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 464 objects (464 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 158 integers unsatisfied sum - 15.2902
Cbc0038I Pass   1: suminf.    2.66667 (16) obj. 8 iterations 432
Cbc0038I Pass   2: suminf.    1.64444 (10) obj. 8 iterations 65
Cbc0038I Pass   3: suminf.    0.84444 (6) obj. 8 iterations 49
Cbc0038I Pass   4: suminf.    0.84444 (6) obj. 8 iterations 17
Cbc0038I Pass   5: suminf.    1.20000 (6) obj. 8 iterations 38
Cbc0038I Pass   6: suminf.    4.02521 (21) obj. 8.40336 iterations 171
Cbc0038I Pass   7: suminf.    1.02222 (6) obj. 8 iterations 111
Cbc0038I Pass   8: suminf.    0.40000 (2) obj. 8 iterations 26
Cbc0038I Pass   9: suminf.    0.40000 (2) obj. 8 iterations 7
Cbc0038I Pass  10: suminf.    0.40000 (2) obj. 8 iterations 5
Cbc0038I Pass  11: suminf.    1.40000 (14) obj. 9 iterations 133
Cbc0038I Pass  12: suminf.    0.90000 (9) obj. 9 iterations 97
Cbc0038I Solution found of 9
Cbc0038I Cleaned solution of 9
Cbc0038I Before mini branch and bound, 277 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1332 rows 149 columns - 6 fixed gives 206, 43 - ok now
Cbc0038I Full problem 2205 rows 464 columns, reduced to 161 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (3.53 seconds)
Cbc0038I Round again with cutoff of 7.27566
Cbc0038I Pass  13: suminf.    4.58333 (18) obj. 7 iterations 3
Cbc0038I Pass  14: suminf.    2.85772 (13) obj. 7.27566 iterations 147
Cbc0038I Pass  15: suminf.    2.19907 (10) obj. 7.27566 iterations 44
Cbc0038I Pass  16: suminf.    1.76799 (9) obj. 7.27566 iterations 4
Cbc0038I Pass  17: suminf.    2.19907 (10) obj. 7.27566 iterations 38
Cbc0038I Pass  18: suminf.    1.76799 (9) obj. 7.27566 iterations 13
Cbc0038I Pass  19: suminf.    2.29345 (11) obj. 7.27566 iterations 40
Cbc0038I Pass  20: suminf.    2.29345 (11) obj. 7.27566 iterations 5
Cbc0038I Pass  21: suminf.    2.19907 (10) obj. 7.27566 iterations 39
Cbc0038I Pass  22: suminf.    1.76799 (9) obj. 7.27566 iterations 8
Cbc0038I Pass  23: suminf.    3.06667 (10) obj. 6 iterations 50
Cbc0038I Pass  24: suminf.    7.73482 (19) obj. 7.27566 iterations 154
Cbc0038I Pass  25: suminf.    3.15406 (15) obj. 7.27566 iterations 97
Cbc0038I Pass  26: suminf.    2.80185 (13) obj. 7 iterations 15
Cbc0038I Pass  27: suminf.    2.29853 (9) obj. 7.27566 iterations 87
Cbc0038I Pass  28: suminf.    1.39531 (5) obj. 7.27566 iterations 8
Cbc0038I Pass  29: suminf.    1.26667 (4) obj. 7 iterations 23
Cbc0038I Pass  30: suminf.    1.39531 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  31: suminf.    1.26667 (4) obj. 7 iterations 17
Cbc0038I Pass  32: suminf.    6.38593 (22) obj. 7.27566 iterations 164
Cbc0038I Pass  33: suminf.    2.22757 (13) obj. 7.27566 iterations 115
Cbc0038I Pass  34: suminf.    3.38433 (9) obj. 7.27566 iterations 62
Cbc0038I Pass  35: suminf.    2.61075 (9) obj. 7.27566 iterations 30
Cbc0038I Pass  36: suminf.    1.04444 (4) obj. 7 iterations 34
Cbc0038I Pass  37: suminf.    1.20372 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  38: suminf.    1.04444 (4) obj. 7 iterations 26
Cbc0038I Pass  39: suminf.    1.20372 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  40: suminf.    5.04770 (23) obj. 7.27566 iterations 131
Cbc0038I Pass  41: suminf.    1.78000 (11) obj. 7.27566 iterations 102
Cbc0038I Pass  42: suminf.    1.26667 (4) obj. 7 iterations 42
Cbc0038I Pass  43: suminf.    1.20372 (5) obj. 7.27566 iterations 20
Cbc0038I Pass  44: suminf.    1.04444 (4) obj. 7 iterations 14
Cbc0038I Pass  45: suminf.    1.20372 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  46: suminf.    1.04444 (4) obj. 7 iterations 14
Cbc0038I Pass  47: suminf.    5.70299 (23) obj. 7.01198 iterations 187
Cbc0038I Pass  48: suminf.    1.95745 (9) obj. 7.27566 iterations 119
Cbc0038I Pass  49: suminf.    1.23444 (7) obj. 7.27566 iterations 37
Cbc0038I Pass  50: suminf.    1.11026 (5) obj. 7.27566 iterations 4
Cbc0038I Pass  51: suminf.    1.26667 (4) obj. 7 iterations 34
Cbc0038I Pass  52: suminf.    1.39531 (5) obj. 7.27566 iterations 12
Cbc0038I Pass  53: suminf.    1.26667 (4) obj. 7 iterations 24
Cbc0038I Pass  54: suminf.    1.39531 (5) obj. 7.27566 iterations 8
Cbc0038I Pass  55: suminf.    4.27243 (19) obj. 7.27566 iterations 177
Cbc0038I Pass  56: suminf.    1.06198 (5) obj. 7.27566 iterations 113
Cbc0038I Pass  57: suminf.    1.29762 (7) obj. 7 iterations 41
Cbc0038I Pass  58: suminf.    1.45432 (8) obj. 7.27566 iterations 11
Cbc0038I Pass  59: suminf.    1.41111 (5) obj. 7 iterations 27
Cbc0038I Pass  60: suminf.    1.62858 (7) obj. 7.27566 iterations 4
Cbc0038I Pass  61: suminf.    0.76833 (3) obj. 7.27566 iterations 12
Cbc0038I Pass  62: suminf.    0.76833 (3) obj. 7.27566 iterations 2
Cbc0038I Pass  63: suminf.    0.75000 (2) obj. 7 iterations 12
Cbc0038I Pass  64: suminf.    0.95675 (3) obj. 7.27566 iterations 14
Cbc0038I Pass  65: suminf.    1.57123 (8) obj. 7.27566 iterations 169
Cbc0038I Pass  66: suminf.    1.13977 (8) obj. 7.27566 iterations 96
Cbc0038I Pass  67: suminf.    1.29545 (4) obj. 7 iterations 38
Cbc0038I Pass  68: suminf.    1.45208 (5) obj. 7.27566 iterations 20
Cbc0038I Pass  69: suminf.    1.60000 (5) obj. 7 iterations 19
Cbc0038I Pass  70: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  71: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  72: suminf.    1.60000 (5) obj. 7 iterations 11
Cbc0038I Pass  73: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  74: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  75: suminf.    1.60000 (5) obj. 7 iterations 22
Cbc0038I Pass  76: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  77: suminf.    1.06198 (5) obj. 7.27566 iterations 2
Cbc0038I Pass  78: suminf.    1.60000 (5) obj. 7 iterations 16
Cbc0038I Pass  79: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  80: suminf.    1.06198 (5) obj. 7.27566 iterations 2
Cbc0038I Pass  81: suminf.    1.60000 (5) obj. 7 iterations 19
Cbc0038I Pass  82: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  83: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  84: suminf.    1.60000 (5) obj. 7 iterations 18
Cbc0038I Pass  85: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  86: suminf.    1.06198 (5) obj. 7.27566 iterations 3
Cbc0038I Pass  87: suminf.    1.60000 (5) obj. 7 iterations 22
Cbc0038I Pass  88: suminf.    1.06198 (5) obj. 7.27566 iterations 5
Cbc0038I Pass  89: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  90: suminf.    1.60000 (5) obj. 7 iterations 12
Cbc0038I Pass  91: suminf.    1.06198 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  92: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  93: suminf.    1.60000 (5) obj. 7 iterations 19
Cbc0038I Pass  94: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  95: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  96: suminf.    1.60000 (5) obj. 7 iterations 18
Cbc0038I Pass  97: suminf.    1.06198 (5) obj. 7.27566 iterations 8
Cbc0038I Pass  98: suminf.    1.06198 (5) obj. 7.27566 iterations 3
Cbc0038I Pass  99: suminf.    1.60000 (5) obj. 7 iterations 25
Cbc0038I Pass 100: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass 101: suminf.    1.06198 (5) obj. 7.27566 iterations 3
Cbc0038I Pass 102: suminf.    1.60000 (5) obj. 7 iterations 27
Cbc0038I Pass 103: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass 104: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass 105: suminf.    1.60000 (5) obj. 7 iterations 23
Cbc0038I Pass 106: suminf.    1.06198 (5) obj. 7.27566 iterations 5
Cbc0038I Pass 107: suminf.    1.06198 (5) obj. 7.27566 iterations 2
Cbc0038I Pass 108: suminf.    1.60000 (5) obj. 7 iterations 15
Cbc0038I Pass 109: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass 110: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass 111: suminf.    1.60000 (5) obj. 7 iterations 20
Cbc0038I Pass 112: suminf.    2.66667 (8) obj. 7 iterations 135
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 231 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1557 rows 195 columns - 1 fixed gives 1423, 175 - still too large
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1423 rows 175 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4.38 seconds)
Cbc0038I After 4.38 seconds - Feasibility pump exiting with objective of 9 - took 1.21 seconds
Cbc0012I Integer solution of 9 found by feasibility pump after 0 iterations and 0 nodes (4.38 seconds)
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1179 rows 127 columns - 16 fixed gives 0, 0 - ok now
Cbc0031I 73 added rows had average density of 12.205479
Cbc0013I At root node, 73 cuts changed objective from 0.7557156 to 3.1307327 in 54 passes
Cbc0014I Cut generator 0 (Probing) - 3938 row cuts average 5.9 elements, 4 column cuts (4 active)  in 1.160 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 82 row cuts average 44.5 elements, 0 column cuts (0 active)  in 0.287 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1312 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 432 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.603 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 9 best solution, best possible 4 (9.98 seconds)
Cbc0012I Integer solution of 5 found by rounding after 11224 iterations and 12 nodes (10.90 seconds)
Cbc0001I Search completed - best objective 5, took 11224 iterations and 12 nodes (10.90 seconds)
Cbc0032I Strong branching done 128 times (2522 iterations), fathomed 1 nodes and fixed 12 variables
Cbc0035I Maximum depth 3, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.755716 to 4
Probing was tried 72 times and created 4140 cuts of which 0 were active after adding rounds of cuts (1.189 seconds)
Gomory was tried 71 times and created 91 cuts of which 0 were active after adding rounds of cuts (0.303 seconds)
Knapsack was tried 54 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.081 seconds)
Clique was tried 54 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.068 seconds)
MixedIntegerRounding2 was tried 54 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.163 seconds)
FlowCover was tried 54 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.068 seconds)
TwoMirCuts was tried 71 times and created 1434 cuts of which 0 were active after adding rounds of cuts (0.180 seconds)
ZeroHalf was tried 71 times and created 556 cuts of which 0 were active after adding rounds of cuts (0.702 seconds)
ImplicationCuts was tried 17 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                5.00000000
Enumerated nodes:               12
Total iterations:               11224
Time (CPU seconds):             10.90
Time (Wallclock seconds):       11.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       10.97   (Wallclock seconds):       11.15

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  4 ( room )  with  -
build_room  on object  4 ( room )  with  Bill

Time slot  1
build_room  on object  3 ( room )  with  -
build_room  on object  3 ( room )  with  Bob
install_shower_b  on object  4 ( room )  with  -
install_shower_b  on object  4 ( room )  with  Sandy

Time slot  2
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bill
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob

Time slot  3
build_room  on object  5 ( room )  with  -
build_room  on object  5 ( room )  with  Bob
install_kitchen  on object  2 ( room )  with  -
install_kitchen  on object  2 ( room )  with  Sandy
install_kitchen  on object  2 ( room )  with  Kay

Time slot  4
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
install_toilet_s  on object  4 ( room )  with  -
install_toilet_s  on object  4 ( room )  with  Tina

Time slot  5
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -
finish  on object  3 ( room )  with  -
finish  on object  4 ( room )  with  -
finish  on object  5 ( room )  with  -

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/a3aaf19a76a04d34a5e56ff4fa0aacfd-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/a3aaf19a76a04d34a5e56ff4fa0aacfd-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 8783 COLUMNS
At line 90171 RHS
At line 98950 BOUNDS
At line 101724 ENDATA
Problem MODEL has 8778 rows, 2773 columns and 72870 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.04 seconds
Cgl0003I 55 fixed, 0 tightened bounds, 2391 strengthened rows, 673 substitutions
Cgl0003I 5 fixed, 0 tightened bounds, 1696 strengthened rows, 34 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1566 strengthened rows, 32 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2092 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1942 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1874 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1822 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1755 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1609 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1477 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1251 strengthened rows, 0 substitutions
Cgl0004I processed model has 2205 rows, 464 columns (464 integer (463 of which binary)) and 28875 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 464 objects (464 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 158 integers unsatisfied sum - 15.2902
Cbc0038I Pass   1: suminf.    2.66667 (16) obj. 8 iterations 432
Cbc0038I Pass   2: suminf.    1.64444 (10) obj. 8 iterations 65
Cbc0038I Pass   3: suminf.    0.84444 (6) obj. 8 iterations 49
Cbc0038I Pass   4: suminf.    0.84444 (6) obj. 8 iterations 17
Cbc0038I Pass   5: suminf.    1.20000 (6) obj. 8 iterations 38
Cbc0038I Pass   6: suminf.    4.02521 (21) obj. 8.40336 iterations 171
Cbc0038I Pass   7: suminf.    1.02222 (6) obj. 8 iterations 111
Cbc0038I Pass   8: suminf.    0.40000 (2) obj. 8 iterations 26
Cbc0038I Pass   9: suminf.    0.40000 (2) obj. 8 iterations 7
Cbc0038I Pass  10: suminf.    0.40000 (2) obj. 8 iterations 5
Cbc0038I Pass  11: suminf.    1.40000 (14) obj. 9 iterations 133
Cbc0038I Pass  12: suminf.    0.90000 (9) obj. 9 iterations 97
Cbc0038I Solution found of 9
Cbc0038I Cleaned solution of 9
Cbc0038I Before mini branch and bound, 277 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1332 rows 149 columns - 6 fixed gives 206, 43 - ok now
Cbc0038I Full problem 2205 rows 464 columns, reduced to 161 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (3.51 seconds)
Cbc0038I Round again with cutoff of 7.27566
Cbc0038I Pass  13: suminf.    4.58333 (18) obj. 7 iterations 3
Cbc0038I Pass  14: suminf.    2.85772 (13) obj. 7.27566 iterations 147
Cbc0038I Pass  15: suminf.    2.19907 (10) obj. 7.27566 iterations 44
Cbc0038I Pass  16: suminf.    1.76799 (9) obj. 7.27566 iterations 4
Cbc0038I Pass  17: suminf.    2.19907 (10) obj. 7.27566 iterations 38
Cbc0038I Pass  18: suminf.    1.76799 (9) obj. 7.27566 iterations 13
Cbc0038I Pass  19: suminf.    2.29345 (11) obj. 7.27566 iterations 40
Cbc0038I Pass  20: suminf.    2.29345 (11) obj. 7.27566 iterations 5
Cbc0038I Pass  21: suminf.    2.19907 (10) obj. 7.27566 iterations 39
Cbc0038I Pass  22: suminf.    1.76799 (9) obj. 7.27566 iterations 8
Cbc0038I Pass  23: suminf.    3.06667 (10) obj. 6 iterations 50
Cbc0038I Pass  24: suminf.    7.73482 (19) obj. 7.27566 iterations 154
Cbc0038I Pass  25: suminf.    3.15406 (15) obj. 7.27566 iterations 97
Cbc0038I Pass  26: suminf.    2.80185 (13) obj. 7 iterations 15
Cbc0038I Pass  27: suminf.    2.29853 (9) obj. 7.27566 iterations 87
Cbc0038I Pass  28: suminf.    1.39531 (5) obj. 7.27566 iterations 8
Cbc0038I Pass  29: suminf.    1.26667 (4) obj. 7 iterations 23
Cbc0038I Pass  30: suminf.    1.39531 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  31: suminf.    1.26667 (4) obj. 7 iterations 17
Cbc0038I Pass  32: suminf.    6.38593 (22) obj. 7.27566 iterations 164
Cbc0038I Pass  33: suminf.    2.22757 (13) obj. 7.27566 iterations 115
Cbc0038I Pass  34: suminf.    3.38433 (9) obj. 7.27566 iterations 62
Cbc0038I Pass  35: suminf.    2.61075 (9) obj. 7.27566 iterations 30
Cbc0038I Pass  36: suminf.    1.04444 (4) obj. 7 iterations 34
Cbc0038I Pass  37: suminf.    1.20372 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  38: suminf.    1.04444 (4) obj. 7 iterations 26
Cbc0038I Pass  39: suminf.    1.20372 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  40: suminf.    5.04770 (23) obj. 7.27566 iterations 131
Cbc0038I Pass  41: suminf.    1.78000 (11) obj. 7.27566 iterations 102
Cbc0038I Pass  42: suminf.    1.26667 (4) obj. 7 iterations 42
Cbc0038I Pass  43: suminf.    1.20372 (5) obj. 7.27566 iterations 20
Cbc0038I Pass  44: suminf.    1.04444 (4) obj. 7 iterations 14
Cbc0038I Pass  45: suminf.    1.20372 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  46: suminf.    1.04444 (4) obj. 7 iterations 14
Cbc0038I Pass  47: suminf.    5.70299 (23) obj. 7.01198 iterations 187
Cbc0038I Pass  48: suminf.    1.95745 (9) obj. 7.27566 iterations 119
Cbc0038I Pass  49: suminf.    1.23444 (7) obj. 7.27566 iterations 37
Cbc0038I Pass  50: suminf.    1.11026 (5) obj. 7.27566 iterations 4
Cbc0038I Pass  51: suminf.    1.26667 (4) obj. 7 iterations 34
Cbc0038I Pass  52: suminf.    1.39531 (5) obj. 7.27566 iterations 12
Cbc0038I Pass  53: suminf.    1.26667 (4) obj. 7 iterations 24
Cbc0038I Pass  54: suminf.    1.39531 (5) obj. 7.27566 iterations 8
Cbc0038I Pass  55: suminf.    4.27243 (19) obj. 7.27566 iterations 177
Cbc0038I Pass  56: suminf.    1.06198 (5) obj. 7.27566 iterations 113
Cbc0038I Pass  57: suminf.    1.29762 (7) obj. 7 iterations 41
Cbc0038I Pass  58: suminf.    1.45432 (8) obj. 7.27566 iterations 11
Cbc0038I Pass  59: suminf.    1.41111 (5) obj. 7 iterations 27
Cbc0038I Pass  60: suminf.    1.62858 (7) obj. 7.27566 iterations 4
Cbc0038I Pass  61: suminf.    0.76833 (3) obj. 7.27566 iterations 12
Cbc0038I Pass  62: suminf.    0.76833 (3) obj. 7.27566 iterations 2
Cbc0038I Pass  63: suminf.    0.75000 (2) obj. 7 iterations 12
Cbc0038I Pass  64: suminf.    0.95675 (3) obj. 7.27566 iterations 14
Cbc0038I Pass  65: suminf.    1.57123 (8) obj. 7.27566 iterations 169
Cbc0038I Pass  66: suminf.    1.13977 (8) obj. 7.27566 iterations 96
Cbc0038I Pass  67: suminf.    1.29545 (4) obj. 7 iterations 38
Cbc0038I Pass  68: suminf.    1.45208 (5) obj. 7.27566 iterations 20
Cbc0038I Pass  69: suminf.    1.60000 (5) obj. 7 iterations 19
Cbc0038I Pass  70: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  71: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  72: suminf.    1.60000 (5) obj. 7 iterations 11
Cbc0038I Pass  73: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  74: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  75: suminf.    1.60000 (5) obj. 7 iterations 22
Cbc0038I Pass  76: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  77: suminf.    1.06198 (5) obj. 7.27566 iterations 2
Cbc0038I Pass  78: suminf.    1.60000 (5) obj. 7 iterations 16
Cbc0038I Pass  79: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  80: suminf.    1.06198 (5) obj. 7.27566 iterations 2
Cbc0038I Pass  81: suminf.    1.60000 (5) obj. 7 iterations 19
Cbc0038I Pass  82: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  83: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  84: suminf.    1.60000 (5) obj. 7 iterations 18
Cbc0038I Pass  85: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  86: suminf.    1.06198 (5) obj. 7.27566 iterations 3
Cbc0038I Pass  87: suminf.    1.60000 (5) obj. 7 iterations 22
Cbc0038I Pass  88: suminf.    1.06198 (5) obj. 7.27566 iterations 5
Cbc0038I Pass  89: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  90: suminf.    1.60000 (5) obj. 7 iterations 12
Cbc0038I Pass  91: suminf.    1.06198 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  92: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  93: suminf.    1.60000 (5) obj. 7 iterations 19
Cbc0038I Pass  94: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  95: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  96: suminf.    1.60000 (5) obj. 7 iterations 18
Cbc0038I Pass  97: suminf.    1.06198 (5) obj. 7.27566 iterations 8
Cbc0038I Pass  98: suminf.    1.06198 (5) obj. 7.27566 iterations 3
Cbc0038I Pass  99: suminf.    1.60000 (5) obj. 7 iterations 25
Cbc0038I Pass 100: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass 101: suminf.    1.06198 (5) obj. 7.27566 iterations 3
Cbc0038I Pass 102: suminf.    1.60000 (5) obj. 7 iterations 27
Cbc0038I Pass 103: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass 104: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass 105: suminf.    1.60000 (5) obj. 7 iterations 23
Cbc0038I Pass 106: suminf.    1.06198 (5) obj. 7.27566 iterations 5
Cbc0038I Pass 107: suminf.    1.06198 (5) obj. 7.27566 iterations 2
Cbc0038I Pass 108: suminf.    1.60000 (5) obj. 7 iterations 15
Cbc0038I Pass 109: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass 110: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass 111: suminf.    1.60000 (5) obj. 7 iterations 20
Cbc0038I Pass 112: suminf.    2.66667 (8) obj. 7 iterations 135
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 231 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1557 rows 195 columns - 1 fixed gives 1423, 175 - still too large
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1423 rows 175 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4.38 seconds)
Cbc0038I After 4.38 seconds - Feasibility pump exiting with objective of 9 - took 1.23 seconds
Cbc0012I Integer solution of 9 found by feasibility pump after 0 iterations and 0 nodes (4.38 seconds)
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1179 rows 127 columns - 16 fixed gives 0, 0 - ok now
Cbc0031I 73 added rows had average density of 12.205479
Cbc0013I At root node, 73 cuts changed objective from 0.7557156 to 3.1307327 in 54 passes
Cbc0014I Cut generator 0 (Probing) - 3938 row cuts average 5.9 elements, 4 column cuts (4 active)  in 1.159 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 82 row cuts average 44.5 elements, 0 column cuts (0 active)  in 0.287 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1312 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 432 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.602 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 9 best solution, best possible 4 (9.99 seconds)
Cbc0012I Integer solution of 5 found by rounding after 11224 iterations and 12 nodes (10.91 seconds)
Cbc0001I Search completed - best objective 5, took 11224 iterations and 12 nodes (10.91 seconds)
Cbc0032I Strong branching done 128 times (2522 iterations), fathomed 1 nodes and fixed 12 variables
Cbc0035I Maximum depth 3, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.755716 to 4
Probing was tried 72 times and created 4140 cuts of which 0 were active after adding rounds of cuts (1.188 seconds)
Gomory was tried 71 times and created 91 cuts of which 0 were active after adding rounds of cuts (0.303 seconds)
Knapsack was tried 54 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.080 seconds)
Clique was tried 54 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.068 seconds)
MixedIntegerRounding2 was tried 54 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.161 seconds)
FlowCover was tried 54 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.069 seconds)
TwoMirCuts was tried 71 times and created 1434 cuts of which 0 were active after adding rounds of cuts (0.182 seconds)
ZeroHalf was tried 71 times and created 556 cuts of which 0 were active after adding rounds of cuts (0.700 seconds)
ImplicationCuts was tried 17 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                5.00000000
Enumerated nodes:               12
Total iterations:               11224
Time (CPU seconds):             10.90
Time (Wallclock seconds):       11.08

Option for printingOptions changed from normal to all
Total time (CPU seconds):       10.95   (Wallclock seconds):       11.15

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  4 ( room )  with  -
build_room  on object  4 ( room )  with  Bill

Time slot  1
build_room  on object  3 ( room )  with  -
build_room  on object  3 ( room )  with  Bob
install_shower_b  on object  4 ( room )  with  -
install_shower_b  on object  4 ( room )  with  Sandy

Time slot  2
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bill
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob

Time slot  3
build_room  on object  5 ( room )  with  -
build_room  on object  5 ( room )  with  Bob
install_kitchen  on object  2 ( room )  with  -
install_kitchen  on object  2 ( room )  with  Sandy
install_kitchen  on object  2 ( room )  with  Kay

Time slot  4
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
install_toilet_s  on object  4 ( room )  with  -
install_toilet_s  on object  4 ( room )  with  Tina

Time slot  5
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -
finish  on object  3 ( room )  with  -
finish  on object  4 ( room )  with  -
finish  on object  5 ( room )  with  -

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/9af53ffc0bec43adb1298a6c28c70559-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/9af53ffc0bec43adb1298a6c28c70559-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 8783 COLUMNS
At line 90171 RHS
At line 98950 BOUNDS
At line 101724 ENDATA
Problem MODEL has 8778 rows, 2773 columns and 72870 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.04 seconds
Cgl0003I 55 fixed, 0 tightened bounds, 2391 strengthened rows, 673 substitutions
Cgl0003I 5 fixed, 0 tightened bounds, 1696 strengthened rows, 34 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1566 strengthened rows, 32 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2092 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1942 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1874 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1822 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1755 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1609 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1477 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1251 strengthened rows, 0 substitutions
Cgl0004I processed model has 2205 rows, 464 columns (464 integer (463 of which binary)) and 28875 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 464 objects (464 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 158 integers unsatisfied sum - 15.2902
Cbc0038I Pass   1: suminf.    2.66667 (16) obj. 8 iterations 432
Cbc0038I Pass   2: suminf.    1.64444 (10) obj. 8 iterations 65
Cbc0038I Pass   3: suminf.    0.84444 (6) obj. 8 iterations 49
Cbc0038I Pass   4: suminf.    0.84444 (6) obj. 8 iterations 17
Cbc0038I Pass   5: suminf.    1.20000 (6) obj. 8 iterations 38
Cbc0038I Pass   6: suminf.    4.02521 (21) obj. 8.40336 iterations 171
Cbc0038I Pass   7: suminf.    1.02222 (6) obj. 8 iterations 111
Cbc0038I Pass   8: suminf.    0.40000 (2) obj. 8 iterations 26
Cbc0038I Pass   9: suminf.    0.40000 (2) obj. 8 iterations 7
Cbc0038I Pass  10: suminf.    0.40000 (2) obj. 8 iterations 5
Cbc0038I Pass  11: suminf.    1.40000 (14) obj. 9 iterations 133
Cbc0038I Pass  12: suminf.    0.90000 (9) obj. 9 iterations 97
Cbc0038I Solution found of 9
Cbc0038I Cleaned solution of 9
Cbc0038I Before mini branch and bound, 277 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1332 rows 149 columns - 6 fixed gives 206, 43 - ok now
Cbc0038I Full problem 2205 rows 464 columns, reduced to 161 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (3.62 seconds)
Cbc0038I Round again with cutoff of 7.27566
Cbc0038I Pass  13: suminf.    4.58333 (18) obj. 7 iterations 3
Cbc0038I Pass  14: suminf.    2.85772 (13) obj. 7.27566 iterations 147
Cbc0038I Pass  15: suminf.    2.19907 (10) obj. 7.27566 iterations 44
Cbc0038I Pass  16: suminf.    1.76799 (9) obj. 7.27566 iterations 4
Cbc0038I Pass  17: suminf.    2.19907 (10) obj. 7.27566 iterations 38
Cbc0038I Pass  18: suminf.    1.76799 (9) obj. 7.27566 iterations 13
Cbc0038I Pass  19: suminf.    2.29345 (11) obj. 7.27566 iterations 40
Cbc0038I Pass  20: suminf.    2.29345 (11) obj. 7.27566 iterations 5
Cbc0038I Pass  21: suminf.    2.19907 (10) obj. 7.27566 iterations 39
Cbc0038I Pass  22: suminf.    1.76799 (9) obj. 7.27566 iterations 8
Cbc0038I Pass  23: suminf.    3.06667 (10) obj. 6 iterations 50
Cbc0038I Pass  24: suminf.    7.73482 (19) obj. 7.27566 iterations 154
Cbc0038I Pass  25: suminf.    3.15406 (15) obj. 7.27566 iterations 97
Cbc0038I Pass  26: suminf.    2.80185 (13) obj. 7 iterations 15
Cbc0038I Pass  27: suminf.    2.29853 (9) obj. 7.27566 iterations 87
Cbc0038I Pass  28: suminf.    1.39531 (5) obj. 7.27566 iterations 8
Cbc0038I Pass  29: suminf.    1.26667 (4) obj. 7 iterations 23
Cbc0038I Pass  30: suminf.    1.39531 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  31: suminf.    1.26667 (4) obj. 7 iterations 17
Cbc0038I Pass  32: suminf.    6.38593 (22) obj. 7.27566 iterations 164
Cbc0038I Pass  33: suminf.    2.22757 (13) obj. 7.27566 iterations 115
Cbc0038I Pass  34: suminf.    3.38433 (9) obj. 7.27566 iterations 62
Cbc0038I Pass  35: suminf.    2.61075 (9) obj. 7.27566 iterations 30
Cbc0038I Pass  36: suminf.    1.04444 (4) obj. 7 iterations 34
Cbc0038I Pass  37: suminf.    1.20372 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  38: suminf.    1.04444 (4) obj. 7 iterations 26
Cbc0038I Pass  39: suminf.    1.20372 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  40: suminf.    5.04770 (23) obj. 7.27566 iterations 131
Cbc0038I Pass  41: suminf.    1.78000 (11) obj. 7.27566 iterations 102
Cbc0038I Pass  42: suminf.    1.26667 (4) obj. 7 iterations 42
Cbc0038I Pass  43: suminf.    1.20372 (5) obj. 7.27566 iterations 20
Cbc0038I Pass  44: suminf.    1.04444 (4) obj. 7 iterations 14
Cbc0038I Pass  45: suminf.    1.20372 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  46: suminf.    1.04444 (4) obj. 7 iterations 14
Cbc0038I Pass  47: suminf.    5.70299 (23) obj. 7.01198 iterations 187
Cbc0038I Pass  48: suminf.    1.95745 (9) obj. 7.27566 iterations 119
Cbc0038I Pass  49: suminf.    1.23444 (7) obj. 7.27566 iterations 37
Cbc0038I Pass  50: suminf.    1.11026 (5) obj. 7.27566 iterations 4
Cbc0038I Pass  51: suminf.    1.26667 (4) obj. 7 iterations 34
Cbc0038I Pass  52: suminf.    1.39531 (5) obj. 7.27566 iterations 12
Cbc0038I Pass  53: suminf.    1.26667 (4) obj. 7 iterations 24
Cbc0038I Pass  54: suminf.    1.39531 (5) obj. 7.27566 iterations 8
Cbc0038I Pass  55: suminf.    4.27243 (19) obj. 7.27566 iterations 177
Cbc0038I Pass  56: suminf.    1.06198 (5) obj. 7.27566 iterations 113
Cbc0038I Pass  57: suminf.    1.29762 (7) obj. 7 iterations 41
Cbc0038I Pass  58: suminf.    1.45432 (8) obj. 7.27566 iterations 11
Cbc0038I Pass  59: suminf.    1.41111 (5) obj. 7 iterations 27
Cbc0038I Pass  60: suminf.    1.62858 (7) obj. 7.27566 iterations 4
Cbc0038I Pass  61: suminf.    0.76833 (3) obj. 7.27566 iterations 12
Cbc0038I Pass  62: suminf.    0.76833 (3) obj. 7.27566 iterations 2
Cbc0038I Pass  63: suminf.    0.75000 (2) obj. 7 iterations 12
Cbc0038I Pass  64: suminf.    0.95675 (3) obj. 7.27566 iterations 14
Cbc0038I Pass  65: suminf.    1.57123 (8) obj. 7.27566 iterations 169
Cbc0038I Pass  66: suminf.    1.13977 (8) obj. 7.27566 iterations 96
Cbc0038I Pass  67: suminf.    1.29545 (4) obj. 7 iterations 38
Cbc0038I Pass  68: suminf.    1.45208 (5) obj. 7.27566 iterations 20
Cbc0038I Pass  69: suminf.    1.60000 (5) obj. 7 iterations 19
Cbc0038I Pass  70: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  71: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  72: suminf.    1.60000 (5) obj. 7 iterations 11
Cbc0038I Pass  73: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  74: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  75: suminf.    1.60000 (5) obj. 7 iterations 22
Cbc0038I Pass  76: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  77: suminf.    1.06198 (5) obj. 7.27566 iterations 2
Cbc0038I Pass  78: suminf.    1.60000 (5) obj. 7 iterations 16
Cbc0038I Pass  79: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  80: suminf.    1.06198 (5) obj. 7.27566 iterations 2
Cbc0038I Pass  81: suminf.    1.60000 (5) obj. 7 iterations 19
Cbc0038I Pass  82: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  83: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  84: suminf.    1.60000 (5) obj. 7 iterations 18
Cbc0038I Pass  85: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass  86: suminf.    1.06198 (5) obj. 7.27566 iterations 3
Cbc0038I Pass  87: suminf.    1.60000 (5) obj. 7 iterations 22
Cbc0038I Pass  88: suminf.    1.06198 (5) obj. 7.27566 iterations 5
Cbc0038I Pass  89: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  90: suminf.    1.60000 (5) obj. 7 iterations 12
Cbc0038I Pass  91: suminf.    1.06198 (5) obj. 7.27566 iterations 9
Cbc0038I Pass  92: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  93: suminf.    1.60000 (5) obj. 7 iterations 19
Cbc0038I Pass  94: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass  95: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass  96: suminf.    1.60000 (5) obj. 7 iterations 18
Cbc0038I Pass  97: suminf.    1.06198 (5) obj. 7.27566 iterations 8
Cbc0038I Pass  98: suminf.    1.06198 (5) obj. 7.27566 iterations 3
Cbc0038I Pass  99: suminf.    1.60000 (5) obj. 7 iterations 25
Cbc0038I Pass 100: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass 101: suminf.    1.06198 (5) obj. 7.27566 iterations 3
Cbc0038I Pass 102: suminf.    1.60000 (5) obj. 7 iterations 27
Cbc0038I Pass 103: suminf.    1.06198 (5) obj. 7.27566 iterations 6
Cbc0038I Pass 104: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass 105: suminf.    1.60000 (5) obj. 7 iterations 23
Cbc0038I Pass 106: suminf.    1.06198 (5) obj. 7.27566 iterations 5
Cbc0038I Pass 107: suminf.    1.06198 (5) obj. 7.27566 iterations 2
Cbc0038I Pass 108: suminf.    1.60000 (5) obj. 7 iterations 15
Cbc0038I Pass 109: suminf.    1.06198 (5) obj. 7.27566 iterations 7
Cbc0038I Pass 110: suminf.    1.06198 (5) obj. 7.27566 iterations 1
Cbc0038I Pass 111: suminf.    1.60000 (5) obj. 7 iterations 20
Cbc0038I Pass 112: suminf.    2.66667 (8) obj. 7 iterations 135
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 231 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1557 rows 195 columns - 1 fixed gives 1423, 175 - still too large
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1423 rows 175 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4.46 seconds)
Cbc0038I After 4.46 seconds - Feasibility pump exiting with objective of 9 - took 1.21 seconds
Cbc0012I Integer solution of 9 found by feasibility pump after 0 iterations and 0 nodes (4.46 seconds)
Cbc0038I Full problem 2205 rows 464 columns, reduced to 1179 rows 127 columns - 16 fixed gives 0, 0 - ok now
Cbc0031I 73 added rows had average density of 12.205479
Cbc0013I At root node, 73 cuts changed objective from 0.7557156 to 3.1307327 in 54 passes
Cbc0014I Cut generator 0 (Probing) - 3938 row cuts average 5.9 elements, 4 column cuts (4 active)  in 1.216 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 82 row cuts average 44.5 elements, 0 column cuts (0 active)  in 0.302 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1312 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 432 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.637 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 9 best solution, best possible 4 (10.32 seconds)
Cbc0012I Integer solution of 5 found by rounding after 11224 iterations and 12 nodes (11.29 seconds)
Cbc0001I Search completed - best objective 5, took 11224 iterations and 12 nodes (11.29 seconds)
Cbc0032I Strong branching done 128 times (2522 iterations), fathomed 1 nodes and fixed 12 variables
Cbc0035I Maximum depth 3, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.755716 to 4
Probing was tried 72 times and created 4140 cuts of which 0 were active after adding rounds of cuts (1.246 seconds)
Gomory was tried 71 times and created 91 cuts of which 0 were active after adding rounds of cuts (0.318 seconds)
Knapsack was tried 54 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.084 seconds)
Clique was tried 54 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.071 seconds)
MixedIntegerRounding2 was tried 54 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.170 seconds)
FlowCover was tried 54 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.072 seconds)
TwoMirCuts was tried 71 times and created 1434 cuts of which 0 were active after adding rounds of cuts (0.189 seconds)
ZeroHalf was tried 71 times and created 556 cuts of which 0 were active after adding rounds of cuts (0.739 seconds)
ImplicationCuts was tried 17 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                5.00000000
Enumerated nodes:               12
Total iterations:               11224
Time (CPU seconds):             11.29
Time (Wallclock seconds):       11.47

Option for printingOptions changed from normal to all
Total time (CPU seconds):       11.35   (Wallclock seconds):       11.54

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  4 ( room )  with  -
build_room  on object  4 ( room )  with  Bill

Time slot  1
build_room  on object  3 ( room )  with  -
build_room  on object  3 ( room )  with  Bob
install_shower_b  on object  4 ( room )  with  -
install_shower_b  on object  4 ( room )  with  Sandy

Time slot  2
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bill
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob

Time slot  3
build_room  on object  5 ( room )  with  -
build_room  on object  5 ( room )  with  Bob
install_kitchen  on object  2 ( room )  with  -
install_kitchen  on object  2 ( room )  with  Sandy
install_kitchen  on object  2 ( room )  with  Kay

Time slot  4
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
install_toilet_s  on object  4 ( room )  with  -
install_toilet_s  on object  4 ( room )  with  Tina

Time slot  5
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -
finish  on object  3 ( room )  with  -
finish  on object  4 ( room )  with  -
finish  on object  5 ( room )  with  -

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
