Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/4e3675872b31425c85eeaf2be4a3b582-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/4e3675872b31425c85eeaf2be4a3b582-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 8027 COLUMNS
At line 65223 RHS
At line 73246 BOUNDS
At line 76020 ENDATA
Problem MODEL has 8022 rows, 2773 columns and 48678 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.07 seconds
Cgl0003I 54 fixed, 0 tightened bounds, 1415 strengthened rows, 676 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1003 strengthened rows, 42 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1325 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1204 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1133 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1105 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1071 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1014 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 964 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 903 strengthened rows, 0 substitutions
Cgl0004I processed model has 1571 rows, 468 columns (468 integer (467 of which binary)) and 19116 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 468 objects (468 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 161 integers unsatisfied sum - 19.6628
Cbc0038I Pass   1: suminf.   14.73762 (80) obj. 1.87134 iterations 673
Cbc0038I Pass   2: suminf.    9.01153 (39) obj. 3 iterations 148
Cbc0038I Pass   3: suminf.    6.22222 (17) obj. 5 iterations 66
Cbc0038I Pass   4: suminf.    0.78462 (22) obj. 8.95014 iterations 151
Cbc0038I Pass   5: suminf.    0.59178 (14) obj. 9 iterations 119
Cbc0038I Pass   6: suminf.    0.40000 (4) obj. 9 iterations 185
Cbc0038I Pass   7: suminf.    0.40000 (4) obj. 9 iterations 36
Cbc0038I Pass   8: suminf.    0.40000 (4) obj. 9 iterations 77
Cbc0038I Pass   9: suminf.    0.40000 (4) obj. 9 iterations 95
Cbc0038I Pass  10: suminf.    0.40000 (4) obj. 9 iterations 81
Cbc0038I Pass  11: suminf.    0.40000 (4) obj. 9 iterations 32
Cbc0038I Pass  12: suminf.    7.50334 (23) obj. 9 iterations 297
Cbc0038I Pass  13: suminf.    2.20468 (10) obj. 9 iterations 165
Cbc0038I Pass  14: suminf.    1.32478 (9) obj. 9 iterations 7
Cbc0038I Pass  15: suminf.    0.40000 (4) obj. 9 iterations 41
Cbc0038I Pass  16: suminf.    0.40000 (4) obj. 9 iterations 28
Cbc0038I Pass  17: suminf.    3.21127 (31) obj. 9 iterations 187
Cbc0038I Pass  18: suminf.    0.40000 (4) obj. 9 iterations 196
Cbc0038I Pass  19: suminf.    0.40000 (4) obj. 9 iterations 60
Cbc0038I Pass  20: suminf.    0.20000 (2) obj. 9 iterations 21
Cbc0038I Pass  21: suminf.    0.20000 (2) obj. 9 iterations 11
Cbc0038I Pass  22: suminf.    0.20000 (2) obj. 9 iterations 16
Cbc0038I Pass  23: suminf.    6.97719 (30) obj. 7.9646 iterations 254
Cbc0038I Pass  24: suminf.    0.53514 (13) obj. 9 iterations 399
Cbc0038I Pass  25: suminf.    0.50811 (8) obj. 9 iterations 126
Cbc0038I Pass  26: suminf.    0.50811 (8) obj. 9 iterations 11
Cbc0038I Pass  27: suminf.    0.40000 (4) obj. 9 iterations 154
Cbc0038I Pass  28: suminf.    0.40000 (4) obj. 9 iterations 21
Cbc0038I Pass  29: suminf.    0.40000 (4) obj. 9 iterations 26
Cbc0038I Pass  30: suminf.   15.86364 (50) obj. 7.45455 iterations 254
Cbc0038I Pass  31: suminf.    2.99730 (18) obj. 6.05405 iterations 189
Cbc0038I Pass  32: suminf.    2.72126 (16) obj. 7.24409 iterations 26
Cbc0038I Pass  33: suminf.    0.40000 (4) obj. 9 iterations 162
Cbc0038I Pass  34: suminf.    0.40000 (4) obj. 9 iterations 85
Cbc0038I Pass  35: suminf.    0.40000 (4) obj. 9 iterations 44
Cbc0038I Pass  36: suminf.    0.40000 (4) obj. 9 iterations 27
Cbc0038I Pass  37: suminf.    0.40000 (4) obj. 9 iterations 25
Cbc0038I Pass  38: suminf.   10.42522 (40) obj. 8.54381 iterations 246
Cbc0038I Pass  39: suminf.    0.40000 (4) obj. 9 iterations 160
Cbc0038I Pass  40: suminf.    0.20000 (2) obj. 9 iterations 55
Cbc0038I Pass  41: suminf.    0.20000 (2) obj. 9 iterations 20
Cbc0038I Pass  42: suminf.   11.89409 (43) obj. 7.01313 iterations 242
Cbc0038I Pass  43: suminf.    2.60327 (14) obj. 7.45562 iterations 149
Cbc0038I Pass  44: suminf.    2.86154 (12) obj. 7.46154 iterations 87
Cbc0038I Pass  45: suminf.    1.99545 (9) obj. 7 iterations 40
Cbc0038I Pass  46: suminf.    1.74545 (7) obj. 7 iterations 34
Cbc0038I Pass  47: suminf.    1.74545 (7) obj. 7 iterations 4
Cbc0038I Pass  48: suminf.    1.74545 (6) obj. 7 iterations 77
Cbc0038I Pass  49: suminf.    1.74545 (6) obj. 7 iterations 27
Cbc0038I Pass  50: suminf.    1.60000 (6) obj. 7 iterations 34
Cbc0038I Pass  51: suminf.    7.70502 (33) obj. 7.99811 iterations 307
Cbc0038I Pass  52: suminf.    1.61116 (22) obj. 8.1 iterations 247
Cbc0038I Pass  53: suminf.    1.38586 (8) obj. 8 iterations 33
Cbc0038I Pass  54: suminf.    1.16364 (6) obj. 8 iterations 29
Cbc0038I Pass  55: suminf.    1.16364 (6) obj. 8 iterations 60
Cbc0038I Pass  56: suminf.   12.66301 (48) obj. 6.50394 iterations 230
Cbc0038I Pass  57: suminf.    2.02838 (25) obj. 8.90195 iterations 234
Cbc0038I Pass  58: suminf.    1.53542 (13) obj. 9 iterations 50
Cbc0038I Pass  59: suminf.    0.40000 (4) obj. 9 iterations 155
Cbc0038I Pass  60: suminf.    0.40000 (4) obj. 9 iterations 26
Cbc0038I Pass  61: suminf.    0.40000 (4) obj. 9 iterations 44
Cbc0038I Pass  62: suminf.    2.60003 (44) obj. 8.83393 iterations 241
Cbc0038I Pass  63: suminf.    0.73390 (13) obj. 9 iterations 144
Cbc0038I Pass  64: suminf.    0.40000 (4) obj. 9 iterations 109
Cbc0038I Pass  65: suminf.    0.40000 (4) obj. 9 iterations 57
Cbc0038I Pass  66: suminf.    0.40000 (4) obj. 9 iterations 19
Cbc0038I Pass  67: suminf.    0.40000 (4) obj. 9 iterations 26
Cbc0038I Pass  68: suminf.    0.40000 (4) obj. 9 iterations 35
Cbc0038I Pass  69: suminf.    0.40000 (4) obj. 9 iterations 23
Cbc0038I Pass  70: suminf.   14.41287 (60) obj. 6.74128 iterations 368
Cbc0038I Pass  71: suminf.    0.61768 (15) obj. 9 iterations 214
Cbc0038I Pass  72: suminf.    0.53589 (12) obj. 9 iterations 60
Cbc0038I Pass  73: suminf.    2.37183 (8) obj. 9 iterations 81
Cbc0038I Pass  74: suminf.    0.40000 (4) obj. 9 iterations 22
Cbc0038I Pass  75: suminf.    0.40000 (4) obj. 9 iterations 36
Cbc0038I Pass  76: suminf.   10.74521 (40) obj. 5.60625 iterations 232
Cbc0038I Pass  77: suminf.    2.21405 (10) obj. 8 iterations 176
Cbc0038I Pass  78: suminf.    0.38378 (10) obj. 9.02703 iterations 105
Cbc0038I Pass  79: suminf.    2.71429 (8) obj. 8.42857 iterations 193
Cbc0038I Pass  80: suminf.    2.71429 (8) obj. 8.42857 iterations 18
Cbc0038I Pass  81: suminf.    2.29787 (11) obj. 7.65957 iterations 49
Cbc0038I Pass  82: suminf.    2.01948 (9) obj. 7.14286 iterations 25
Cbc0038I Pass  83: suminf.    2.80084 (24) obj. 8.60162 iterations 221
Cbc0038I Pass  84: suminf.    2.60000 (12) obj. 8.6 iterations 56
Cbc0038I Pass  85: suminf.    2.46667 (11) obj. 7.55556 iterations 156
Cbc0038I Pass  86: suminf.    0.92727 (9) obj. 8 iterations 93
Cbc0038I Pass  87: suminf.    1.34545 (7) obj. 8 iterations 71
Cbc0038I Pass  88: suminf.    0.98182 (5) obj. 8 iterations 13
Cbc0038I Pass  89: suminf.    0.80000 (4) obj. 8 iterations 25
Cbc0038I Pass  90: suminf.    0.80000 (4) obj. 8 iterations 22
Cbc0038I Pass  91: suminf.   16.06625 (45) obj. 6 iterations 280
Cbc0038I Pass  92: suminf.    1.27500 (7) obj. 9 iterations 203
Cbc0038I Pass  93: suminf.    1.27500 (7) obj. 9 iterations 14
Cbc0038I Pass  94: suminf.    1.20000 (7) obj. 9 iterations 49
Cbc0038I Pass  95: suminf.    1.20000 (7) obj. 9 iterations 6
Cbc0038I Pass  96: suminf.    1.27500 (7) obj. 9 iterations 45
Cbc0038I Pass  97: suminf.    1.27500 (7) obj. 9 iterations 20
Cbc0038I Pass  98: suminf.    1.20000 (7) obj. 9 iterations 42
Cbc0038I Pass  99: suminf.    1.20000 (7) obj. 9 iterations 7
Cbc0038I Pass 100: suminf.   12.84829 (46) obj. 8.54713 iterations 227
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1571 rows 468 columns, reduced to 1366 rows 302 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4.91 seconds)
Cbc0038I After 4.91 seconds - Feasibility pump exiting - took 1.75 seconds
Cbc0031I 12 added rows had average density of 12.333333
Cbc0013I At root node, 12 cuts changed objective from 1.0900431 to 9 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7811 row cuts average 7.0 elements, 18 column cuts (18 active)  in 1.684 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1516 row cuts average 195.4 elements, 0 column cuts (0 active)  in 0.517 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 66 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 226 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 5 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1186 row cuts average 71.3 elements, 0 column cuts (0 active)  in 0.213 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 610 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.627 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 9 (17.40 seconds)
Cbc0010I After 100 nodes, 7 on tree, 1e+50 best solution, best possible 9 (33.58 seconds)
Cbc0010I After 200 nodes, 7 on tree, 1e+50 best solution, best possible 9 (39.98 seconds)
Cbc0016I Integer solution of 10 found by strong branching after 84551 iterations and 294 nodes (47.59 seconds)
Cbc0001I Search completed - best objective 10, took 84583 iterations and 294 nodes (47.60 seconds)
Cbc0032I Strong branching done 2006 times (93102 iterations), fathomed 18 nodes and fixed 23 variables
Cbc0035I Maximum depth 23, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.09004 to 9
Probing was tried 350 times and created 11741 cuts of which 0 were active after adding rounds of cuts (2.303 seconds)
Gomory was tried 350 times and created 1523 cuts of which 0 were active after adding rounds of cuts (0.869 seconds)
Knapsack was tried 350 times and created 190 cuts of which 0 were active after adding rounds of cuts (0.385 seconds)
Clique was tried 350 times and created 373 cuts of which 0 were active after adding rounds of cuts (0.151 seconds)
MixedIntegerRounding2 was tried 100 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.202 seconds)
FlowCover was tried 100 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.106 seconds)
TwoMirCuts was tried 350 times and created 1285 cuts of which 0 were active after adding rounds of cuts (0.488 seconds)
ZeroHalf was tried 350 times and created 1236 cuts of which 0 were active after adding rounds of cuts (1.781 seconds)
ImplicationCuts was tried 108 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)

Result - Optimal solution found

Objective value:                10.00000000
Enumerated nodes:               294
Total iterations:               84583
Time (CPU seconds):             47.54
Time (Wallclock seconds):       47.73

Option for printingOptions changed from normal to all
Total time (CPU seconds):       47.59   (Wallclock seconds):       47.79

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob
build_room  on object  5 ( room )  with  -
build_room  on object  5 ( room )  with  Bill

Time slot  1
build_room  on object  3 ( room )  with  -
build_room  on object  3 ( room )  with  Bob
install_kitchen  on object  2 ( room )  with  -
install_kitchen  on object  2 ( room )  with  Sandy
install_kitchen  on object  2 ( room )  with  Kay

Time slot  2
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob

Time slot  3
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob
build_room  on object  4 ( room )  with  -
build_room  on object  4 ( room )  with  Bill

Time slot  4
install_shower_b  on object  4 ( room )  with  -
install_shower_b  on object  4 ( room )  with  Sandy
install_toilet_b  on object  1 ( room )  with  -
install_toilet_b  on object  1 ( room )  with  Tina

Time slot  5
install_kitchen  on object  5 ( room )  with  -
install_kitchen  on object  5 ( room )  with  Sandy
install_kitchen  on object  5 ( room )  with  Kay

Time slot  6
install_toilet_b  on object  3 ( room )  with  -
install_toilet_b  on object  3 ( room )  with  Tina

Time slot  7
install_shower_t  on object  3 ( room )  with  -
install_shower_t  on object  3 ( room )  with  Sandy

Time slot  8
install_shower_t  on object  1 ( room )  with  -
install_shower_t  on object  1 ( room )  with  Sandy
install_toilet_s  on object  4 ( room )  with  -
install_toilet_s  on object  4 ( room )  with  Tina

Time slot  9
install_kitchen  on object  0 ( room )  with  -
install_kitchen  on object  0 ( room )  with  Sandy
install_kitchen  on object  0 ( room )  with  Kay

Time slot  10
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -
finish  on object  3 ( room )  with  -
finish  on object  4 ( room )  with  -
finish  on object  5 ( room )  with  -
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/cbbfab8806954436823e6b2f2bfb19fc-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/cbbfab8806954436823e6b2f2bfb19fc-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 8027 COLUMNS
At line 65223 RHS
At line 73246 BOUNDS
At line 76020 ENDATA
Problem MODEL has 8022 rows, 2773 columns and 48678 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.07 seconds
Cgl0003I 54 fixed, 0 tightened bounds, 1415 strengthened rows, 676 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1003 strengthened rows, 42 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1325 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1204 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1133 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1105 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1071 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1014 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 964 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 903 strengthened rows, 0 substitutions
Cgl0004I processed model has 1571 rows, 468 columns (468 integer (467 of which binary)) and 19116 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 468 objects (468 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 161 integers unsatisfied sum - 19.6628
Cbc0038I Pass   1: suminf.   14.73762 (80) obj. 1.87134 iterations 673
Cbc0038I Pass   2: suminf.    9.01153 (39) obj. 3 iterations 148
Cbc0038I Pass   3: suminf.    6.22222 (17) obj. 5 iterations 66
Cbc0038I Pass   4: suminf.    0.78462 (22) obj. 8.95014 iterations 151
Cbc0038I Pass   5: suminf.    0.59178 (14) obj. 9 iterations 119
Cbc0038I Pass   6: suminf.    0.40000 (4) obj. 9 iterations 185
Cbc0038I Pass   7: suminf.    0.40000 (4) obj. 9 iterations 36
Cbc0038I Pass   8: suminf.    0.40000 (4) obj. 9 iterations 77
Cbc0038I Pass   9: suminf.    0.40000 (4) obj. 9 iterations 95
Cbc0038I Pass  10: suminf.    0.40000 (4) obj. 9 iterations 81
Cbc0038I Pass  11: suminf.    0.40000 (4) obj. 9 iterations 32
Cbc0038I Pass  12: suminf.    7.50334 (23) obj. 9 iterations 297
Cbc0038I Pass  13: suminf.    2.20468 (10) obj. 9 iterations 165
Cbc0038I Pass  14: suminf.    1.32478 (9) obj. 9 iterations 7
Cbc0038I Pass  15: suminf.    0.40000 (4) obj. 9 iterations 41
Cbc0038I Pass  16: suminf.    0.40000 (4) obj. 9 iterations 28
Cbc0038I Pass  17: suminf.    3.21127 (31) obj. 9 iterations 187
Cbc0038I Pass  18: suminf.    0.40000 (4) obj. 9 iterations 196
Cbc0038I Pass  19: suminf.    0.40000 (4) obj. 9 iterations 60
Cbc0038I Pass  20: suminf.    0.20000 (2) obj. 9 iterations 21
Cbc0038I Pass  21: suminf.    0.20000 (2) obj. 9 iterations 11
Cbc0038I Pass  22: suminf.    0.20000 (2) obj. 9 iterations 16
Cbc0038I Pass  23: suminf.    6.97719 (30) obj. 7.9646 iterations 254
Cbc0038I Pass  24: suminf.    0.53514 (13) obj. 9 iterations 399
Cbc0038I Pass  25: suminf.    0.50811 (8) obj. 9 iterations 126
Cbc0038I Pass  26: suminf.    0.50811 (8) obj. 9 iterations 11
Cbc0038I Pass  27: suminf.    0.40000 (4) obj. 9 iterations 154
Cbc0038I Pass  28: suminf.    0.40000 (4) obj. 9 iterations 21
Cbc0038I Pass  29: suminf.    0.40000 (4) obj. 9 iterations 26
Cbc0038I Pass  30: suminf.   15.86364 (50) obj. 7.45455 iterations 254
Cbc0038I Pass  31: suminf.    2.99730 (18) obj. 6.05405 iterations 189
Cbc0038I Pass  32: suminf.    2.72126 (16) obj. 7.24409 iterations 26
Cbc0038I Pass  33: suminf.    0.40000 (4) obj. 9 iterations 162
Cbc0038I Pass  34: suminf.    0.40000 (4) obj. 9 iterations 85
Cbc0038I Pass  35: suminf.    0.40000 (4) obj. 9 iterations 44
Cbc0038I Pass  36: suminf.    0.40000 (4) obj. 9 iterations 27
Cbc0038I Pass  37: suminf.    0.40000 (4) obj. 9 iterations 25
Cbc0038I Pass  38: suminf.   10.42522 (40) obj. 8.54381 iterations 246
Cbc0038I Pass  39: suminf.    0.40000 (4) obj. 9 iterations 160
Cbc0038I Pass  40: suminf.    0.20000 (2) obj. 9 iterations 55
Cbc0038I Pass  41: suminf.    0.20000 (2) obj. 9 iterations 20
Cbc0038I Pass  42: suminf.   11.89409 (43) obj. 7.01313 iterations 242
Cbc0038I Pass  43: suminf.    2.60327 (14) obj. 7.45562 iterations 149
Cbc0038I Pass  44: suminf.    2.86154 (12) obj. 7.46154 iterations 87
Cbc0038I Pass  45: suminf.    1.99545 (9) obj. 7 iterations 40
Cbc0038I Pass  46: suminf.    1.74545 (7) obj. 7 iterations 34
Cbc0038I Pass  47: suminf.    1.74545 (7) obj. 7 iterations 4
Cbc0038I Pass  48: suminf.    1.74545 (6) obj. 7 iterations 77
Cbc0038I Pass  49: suminf.    1.74545 (6) obj. 7 iterations 27
Cbc0038I Pass  50: suminf.    1.60000 (6) obj. 7 iterations 34
Cbc0038I Pass  51: suminf.    7.70502 (33) obj. 7.99811 iterations 307
Cbc0038I Pass  52: suminf.    1.61116 (22) obj. 8.1 iterations 247
Cbc0038I Pass  53: suminf.    1.38586 (8) obj. 8 iterations 33
Cbc0038I Pass  54: suminf.    1.16364 (6) obj. 8 iterations 29
Cbc0038I Pass  55: suminf.    1.16364 (6) obj. 8 iterations 60
Cbc0038I Pass  56: suminf.   12.66301 (48) obj. 6.50394 iterations 230
Cbc0038I Pass  57: suminf.    2.02838 (25) obj. 8.90195 iterations 234
Cbc0038I Pass  58: suminf.    1.53542 (13) obj. 9 iterations 50
Cbc0038I Pass  59: suminf.    0.40000 (4) obj. 9 iterations 155
Cbc0038I Pass  60: suminf.    0.40000 (4) obj. 9 iterations 26
Cbc0038I Pass  61: suminf.    0.40000 (4) obj. 9 iterations 44
Cbc0038I Pass  62: suminf.    2.60003 (44) obj. 8.83393 iterations 241
Cbc0038I Pass  63: suminf.    0.73390 (13) obj. 9 iterations 144
Cbc0038I Pass  64: suminf.    0.40000 (4) obj. 9 iterations 109
Cbc0038I Pass  65: suminf.    0.40000 (4) obj. 9 iterations 57
Cbc0038I Pass  66: suminf.    0.40000 (4) obj. 9 iterations 19
Cbc0038I Pass  67: suminf.    0.40000 (4) obj. 9 iterations 26
Cbc0038I Pass  68: suminf.    0.40000 (4) obj. 9 iterations 35
Cbc0038I Pass  69: suminf.    0.40000 (4) obj. 9 iterations 23
Cbc0038I Pass  70: suminf.   14.41287 (60) obj. 6.74128 iterations 368
Cbc0038I Pass  71: suminf.    0.61768 (15) obj. 9 iterations 214
Cbc0038I Pass  72: suminf.    0.53589 (12) obj. 9 iterations 60
Cbc0038I Pass  73: suminf.    2.37183 (8) obj. 9 iterations 81
Cbc0038I Pass  74: suminf.    0.40000 (4) obj. 9 iterations 22
Cbc0038I Pass  75: suminf.    0.40000 (4) obj. 9 iterations 36
Cbc0038I Pass  76: suminf.   10.74521 (40) obj. 5.60625 iterations 232
Cbc0038I Pass  77: suminf.    2.21405 (10) obj. 8 iterations 176
Cbc0038I Pass  78: suminf.    0.38378 (10) obj. 9.02703 iterations 105
Cbc0038I Pass  79: suminf.    2.71429 (8) obj. 8.42857 iterations 193
Cbc0038I Pass  80: suminf.    2.71429 (8) obj. 8.42857 iterations 18
Cbc0038I Pass  81: suminf.    2.29787 (11) obj. 7.65957 iterations 49
Cbc0038I Pass  82: suminf.    2.01948 (9) obj. 7.14286 iterations 25
Cbc0038I Pass  83: suminf.    2.80084 (24) obj. 8.60162 iterations 221
Cbc0038I Pass  84: suminf.    2.60000 (12) obj. 8.6 iterations 56
Cbc0038I Pass  85: suminf.    2.46667 (11) obj. 7.55556 iterations 156
Cbc0038I Pass  86: suminf.    0.92727 (9) obj. 8 iterations 93
Cbc0038I Pass  87: suminf.    1.34545 (7) obj. 8 iterations 71
Cbc0038I Pass  88: suminf.    0.98182 (5) obj. 8 iterations 13
Cbc0038I Pass  89: suminf.    0.80000 (4) obj. 8 iterations 25
Cbc0038I Pass  90: suminf.    0.80000 (4) obj. 8 iterations 22
Cbc0038I Pass  91: suminf.   16.06625 (45) obj. 6 iterations 280
Cbc0038I Pass  92: suminf.    1.27500 (7) obj. 9 iterations 203
Cbc0038I Pass  93: suminf.    1.27500 (7) obj. 9 iterations 14
Cbc0038I Pass  94: suminf.    1.20000 (7) obj. 9 iterations 49
Cbc0038I Pass  95: suminf.    1.20000 (7) obj. 9 iterations 6
Cbc0038I Pass  96: suminf.    1.27500 (7) obj. 9 iterations 45
Cbc0038I Pass  97: suminf.    1.27500 (7) obj. 9 iterations 20
Cbc0038I Pass  98: suminf.    1.20000 (7) obj. 9 iterations 42
Cbc0038I Pass  99: suminf.    1.20000 (7) obj. 9 iterations 7
Cbc0038I Pass 100: suminf.   12.84829 (46) obj. 8.54713 iterations 227
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1571 rows 468 columns, reduced to 1366 rows 302 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4.72 seconds)
Cbc0038I After 4.72 seconds - Feasibility pump exiting - took 1.69 seconds
Cbc0031I 12 added rows had average density of 12.333333
Cbc0013I At root node, 12 cuts changed objective from 1.0900431 to 9 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7811 row cuts average 7.0 elements, 18 column cuts (18 active)  in 1.668 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1516 row cuts average 195.4 elements, 0 column cuts (0 active)  in 0.517 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 66 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 226 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.200 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 5 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1186 row cuts average 71.3 elements, 0 column cuts (0 active)  in 0.212 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 610 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.632 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 9 (17.18 seconds)
Cbc0010I After 100 nodes, 7 on tree, 1e+50 best solution, best possible 9 (33.34 seconds)
Cbc0010I After 200 nodes, 7 on tree, 1e+50 best solution, best possible 9 (39.65 seconds)
Cbc0016I Integer solution of 10 found by strong branching after 84551 iterations and 294 nodes (47.27 seconds)
Cbc0001I Search completed - best objective 10, took 84583 iterations and 294 nodes (47.28 seconds)
Cbc0032I Strong branching done 2006 times (93102 iterations), fathomed 18 nodes and fixed 23 variables
Cbc0035I Maximum depth 23, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.09004 to 9
Probing was tried 350 times and created 11741 cuts of which 0 were active after adding rounds of cuts (2.284 seconds)
Gomory was tried 350 times and created 1523 cuts of which 0 were active after adding rounds of cuts (0.866 seconds)
Knapsack was tried 350 times and created 190 cuts of which 0 were active after adding rounds of cuts (0.386 seconds)
Clique was tried 350 times and created 373 cuts of which 0 were active after adding rounds of cuts (0.150 seconds)
MixedIntegerRounding2 was tried 100 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.200 seconds)
FlowCover was tried 100 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.104 seconds)
TwoMirCuts was tried 350 times and created 1285 cuts of which 0 were active after adding rounds of cuts (0.491 seconds)
ZeroHalf was tried 350 times and created 1236 cuts of which 0 were active after adding rounds of cuts (1.787 seconds)
ImplicationCuts was tried 108 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)

Result - Optimal solution found

Objective value:                10.00000000
Enumerated nodes:               294
Total iterations:               84583
Time (CPU seconds):             47.19
Time (Wallclock seconds):       47.41

Option for printingOptions changed from normal to all
Total time (CPU seconds):       47.23   (Wallclock seconds):       47.46

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob
build_room  on object  5 ( room )  with  -
build_room  on object  5 ( room )  with  Bill

Time slot  1
build_room  on object  3 ( room )  with  -
build_room  on object  3 ( room )  with  Bob
install_kitchen  on object  2 ( room )  with  -
install_kitchen  on object  2 ( room )  with  Sandy
install_kitchen  on object  2 ( room )  with  Kay

Time slot  2
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob

Time slot  3
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob
build_room  on object  4 ( room )  with  -
build_room  on object  4 ( room )  with  Bill

Time slot  4
install_shower_b  on object  4 ( room )  with  -
install_shower_b  on object  4 ( room )  with  Sandy
install_toilet_b  on object  1 ( room )  with  -
install_toilet_b  on object  1 ( room )  with  Tina

Time slot  5
install_kitchen  on object  5 ( room )  with  -
install_kitchen  on object  5 ( room )  with  Sandy
install_kitchen  on object  5 ( room )  with  Kay

Time slot  6
install_toilet_b  on object  3 ( room )  with  -
install_toilet_b  on object  3 ( room )  with  Tina

Time slot  7
install_shower_t  on object  3 ( room )  with  -
install_shower_t  on object  3 ( room )  with  Sandy

Time slot  8
install_shower_t  on object  1 ( room )  with  -
install_shower_t  on object  1 ( room )  with  Sandy
install_toilet_s  on object  4 ( room )  with  -
install_toilet_s  on object  4 ( room )  with  Tina

Time slot  9
install_kitchen  on object  0 ( room )  with  -
install_kitchen  on object  0 ( room )  with  Sandy
install_kitchen  on object  0 ( room )  with  Kay

Time slot  10
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -
finish  on object  3 ( room )  with  -
finish  on object  4 ( room )  with  -
finish  on object  5 ( room )  with  -
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/c31a98841fd84b418acaa25512dfa2aa-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/c31a98841fd84b418acaa25512dfa2aa-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 8027 COLUMNS
At line 65223 RHS
At line 73246 BOUNDS
At line 76020 ENDATA
Problem MODEL has 8022 rows, 2773 columns and 48678 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.07 seconds
Cgl0003I 54 fixed, 0 tightened bounds, 1415 strengthened rows, 676 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1003 strengthened rows, 42 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1325 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1204 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1133 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1105 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1071 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1014 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 964 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 903 strengthened rows, 0 substitutions
Cgl0004I processed model has 1571 rows, 468 columns (468 integer (467 of which binary)) and 19116 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 468 objects (468 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 161 integers unsatisfied sum - 19.6628
Cbc0038I Pass   1: suminf.   14.73762 (80) obj. 1.87134 iterations 673
Cbc0038I Pass   2: suminf.    9.01153 (39) obj. 3 iterations 148
Cbc0038I Pass   3: suminf.    6.22222 (17) obj. 5 iterations 66
Cbc0038I Pass   4: suminf.    0.78462 (22) obj. 8.95014 iterations 151
Cbc0038I Pass   5: suminf.    0.59178 (14) obj. 9 iterations 119
Cbc0038I Pass   6: suminf.    0.40000 (4) obj. 9 iterations 185
Cbc0038I Pass   7: suminf.    0.40000 (4) obj. 9 iterations 36
Cbc0038I Pass   8: suminf.    0.40000 (4) obj. 9 iterations 77
Cbc0038I Pass   9: suminf.    0.40000 (4) obj. 9 iterations 95
Cbc0038I Pass  10: suminf.    0.40000 (4) obj. 9 iterations 81
Cbc0038I Pass  11: suminf.    0.40000 (4) obj. 9 iterations 32
Cbc0038I Pass  12: suminf.    7.50334 (23) obj. 9 iterations 297
Cbc0038I Pass  13: suminf.    2.20468 (10) obj. 9 iterations 165
Cbc0038I Pass  14: suminf.    1.32478 (9) obj. 9 iterations 7
Cbc0038I Pass  15: suminf.    0.40000 (4) obj. 9 iterations 41
Cbc0038I Pass  16: suminf.    0.40000 (4) obj. 9 iterations 28
Cbc0038I Pass  17: suminf.    3.21127 (31) obj. 9 iterations 187
Cbc0038I Pass  18: suminf.    0.40000 (4) obj. 9 iterations 196
Cbc0038I Pass  19: suminf.    0.40000 (4) obj. 9 iterations 60
Cbc0038I Pass  20: suminf.    0.20000 (2) obj. 9 iterations 21
Cbc0038I Pass  21: suminf.    0.20000 (2) obj. 9 iterations 11
Cbc0038I Pass  22: suminf.    0.20000 (2) obj. 9 iterations 16
Cbc0038I Pass  23: suminf.    6.97719 (30) obj. 7.9646 iterations 254
Cbc0038I Pass  24: suminf.    0.53514 (13) obj. 9 iterations 399
Cbc0038I Pass  25: suminf.    0.50811 (8) obj. 9 iterations 126
Cbc0038I Pass  26: suminf.    0.50811 (8) obj. 9 iterations 11
Cbc0038I Pass  27: suminf.    0.40000 (4) obj. 9 iterations 154
Cbc0038I Pass  28: suminf.    0.40000 (4) obj. 9 iterations 21
Cbc0038I Pass  29: suminf.    0.40000 (4) obj. 9 iterations 26
Cbc0038I Pass  30: suminf.   15.86364 (50) obj. 7.45455 iterations 254
Cbc0038I Pass  31: suminf.    2.99730 (18) obj. 6.05405 iterations 189
Cbc0038I Pass  32: suminf.    2.72126 (16) obj. 7.24409 iterations 26
Cbc0038I Pass  33: suminf.    0.40000 (4) obj. 9 iterations 162
Cbc0038I Pass  34: suminf.    0.40000 (4) obj. 9 iterations 85
Cbc0038I Pass  35: suminf.    0.40000 (4) obj. 9 iterations 44
Cbc0038I Pass  36: suminf.    0.40000 (4) obj. 9 iterations 27
Cbc0038I Pass  37: suminf.    0.40000 (4) obj. 9 iterations 25
Cbc0038I Pass  38: suminf.   10.42522 (40) obj. 8.54381 iterations 246
Cbc0038I Pass  39: suminf.    0.40000 (4) obj. 9 iterations 160
Cbc0038I Pass  40: suminf.    0.20000 (2) obj. 9 iterations 55
Cbc0038I Pass  41: suminf.    0.20000 (2) obj. 9 iterations 20
Cbc0038I Pass  42: suminf.   11.89409 (43) obj. 7.01313 iterations 242
Cbc0038I Pass  43: suminf.    2.60327 (14) obj. 7.45562 iterations 149
Cbc0038I Pass  44: suminf.    2.86154 (12) obj. 7.46154 iterations 87
Cbc0038I Pass  45: suminf.    1.99545 (9) obj. 7 iterations 40
Cbc0038I Pass  46: suminf.    1.74545 (7) obj. 7 iterations 34
Cbc0038I Pass  47: suminf.    1.74545 (7) obj. 7 iterations 4
Cbc0038I Pass  48: suminf.    1.74545 (6) obj. 7 iterations 77
Cbc0038I Pass  49: suminf.    1.74545 (6) obj. 7 iterations 27
Cbc0038I Pass  50: suminf.    1.60000 (6) obj. 7 iterations 34
Cbc0038I Pass  51: suminf.    7.70502 (33) obj. 7.99811 iterations 307
Cbc0038I Pass  52: suminf.    1.61116 (22) obj. 8.1 iterations 247
Cbc0038I Pass  53: suminf.    1.38586 (8) obj. 8 iterations 33
Cbc0038I Pass  54: suminf.    1.16364 (6) obj. 8 iterations 29
Cbc0038I Pass  55: suminf.    1.16364 (6) obj. 8 iterations 60
Cbc0038I Pass  56: suminf.   12.66301 (48) obj. 6.50394 iterations 230
Cbc0038I Pass  57: suminf.    2.02838 (25) obj. 8.90195 iterations 234
Cbc0038I Pass  58: suminf.    1.53542 (13) obj. 9 iterations 50
Cbc0038I Pass  59: suminf.    0.40000 (4) obj. 9 iterations 155
Cbc0038I Pass  60: suminf.    0.40000 (4) obj. 9 iterations 26
Cbc0038I Pass  61: suminf.    0.40000 (4) obj. 9 iterations 44
Cbc0038I Pass  62: suminf.    2.60003 (44) obj. 8.83393 iterations 241
Cbc0038I Pass  63: suminf.    0.73390 (13) obj. 9 iterations 144
Cbc0038I Pass  64: suminf.    0.40000 (4) obj. 9 iterations 109
Cbc0038I Pass  65: suminf.    0.40000 (4) obj. 9 iterations 57
Cbc0038I Pass  66: suminf.    0.40000 (4) obj. 9 iterations 19
Cbc0038I Pass  67: suminf.    0.40000 (4) obj. 9 iterations 26
Cbc0038I Pass  68: suminf.    0.40000 (4) obj. 9 iterations 35
Cbc0038I Pass  69: suminf.    0.40000 (4) obj. 9 iterations 23
Cbc0038I Pass  70: suminf.   14.41287 (60) obj. 6.74128 iterations 368
Cbc0038I Pass  71: suminf.    0.61768 (15) obj. 9 iterations 214
Cbc0038I Pass  72: suminf.    0.53589 (12) obj. 9 iterations 60
Cbc0038I Pass  73: suminf.    2.37183 (8) obj. 9 iterations 81
Cbc0038I Pass  74: suminf.    0.40000 (4) obj. 9 iterations 22
Cbc0038I Pass  75: suminf.    0.40000 (4) obj. 9 iterations 36
Cbc0038I Pass  76: suminf.   10.74521 (40) obj. 5.60625 iterations 232
Cbc0038I Pass  77: suminf.    2.21405 (10) obj. 8 iterations 176
Cbc0038I Pass  78: suminf.    0.38378 (10) obj. 9.02703 iterations 105
Cbc0038I Pass  79: suminf.    2.71429 (8) obj. 8.42857 iterations 193
Cbc0038I Pass  80: suminf.    2.71429 (8) obj. 8.42857 iterations 18
Cbc0038I Pass  81: suminf.    2.29787 (11) obj. 7.65957 iterations 49
Cbc0038I Pass  82: suminf.    2.01948 (9) obj. 7.14286 iterations 25
Cbc0038I Pass  83: suminf.    2.80084 (24) obj. 8.60162 iterations 221
Cbc0038I Pass  84: suminf.    2.60000 (12) obj. 8.6 iterations 56
Cbc0038I Pass  85: suminf.    2.46667 (11) obj. 7.55556 iterations 156
Cbc0038I Pass  86: suminf.    0.92727 (9) obj. 8 iterations 93
Cbc0038I Pass  87: suminf.    1.34545 (7) obj. 8 iterations 71
Cbc0038I Pass  88: suminf.    0.98182 (5) obj. 8 iterations 13
Cbc0038I Pass  89: suminf.    0.80000 (4) obj. 8 iterations 25
Cbc0038I Pass  90: suminf.    0.80000 (4) obj. 8 iterations 22
Cbc0038I Pass  91: suminf.   16.06625 (45) obj. 6 iterations 280
Cbc0038I Pass  92: suminf.    1.27500 (7) obj. 9 iterations 203
Cbc0038I Pass  93: suminf.    1.27500 (7) obj. 9 iterations 14
Cbc0038I Pass  94: suminf.    1.20000 (7) obj. 9 iterations 49
Cbc0038I Pass  95: suminf.    1.20000 (7) obj. 9 iterations 6
Cbc0038I Pass  96: suminf.    1.27500 (7) obj. 9 iterations 45
Cbc0038I Pass  97: suminf.    1.27500 (7) obj. 9 iterations 20
Cbc0038I Pass  98: suminf.    1.20000 (7) obj. 9 iterations 42
Cbc0038I Pass  99: suminf.    1.20000 (7) obj. 9 iterations 7
Cbc0038I Pass 100: suminf.   12.84829 (46) obj. 8.54713 iterations 227
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1571 rows 468 columns, reduced to 1366 rows 302 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4.78 seconds)
Cbc0038I After 4.78 seconds - Feasibility pump exiting - took 1.74 seconds
Cbc0031I 12 added rows had average density of 12.333333
Cbc0013I At root node, 12 cuts changed objective from 1.0900431 to 9 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7811 row cuts average 7.0 elements, 18 column cuts (18 active)  in 1.684 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1516 row cuts average 195.4 elements, 0 column cuts (0 active)  in 0.516 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 66 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 226 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 5 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1186 row cuts average 71.3 elements, 0 column cuts (0 active)  in 0.213 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 610 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.633 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 9 (17.30 seconds)
Cbc0010I After 100 nodes, 7 on tree, 1e+50 best solution, best possible 9 (33.95 seconds)
Cbc0010I After 200 nodes, 7 on tree, 1e+50 best solution, best possible 9 (40.27 seconds)
Cbc0016I Integer solution of 10 found by strong branching after 84551 iterations and 294 nodes (47.91 seconds)
Cbc0001I Search completed - best objective 10, took 84583 iterations and 294 nodes (47.91 seconds)
Cbc0032I Strong branching done 2006 times (93102 iterations), fathomed 18 nodes and fixed 23 variables
Cbc0035I Maximum depth 23, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.09004 to 9
Probing was tried 350 times and created 11741 cuts of which 0 were active after adding rounds of cuts (2.305 seconds)
Gomory was tried 350 times and created 1523 cuts of which 0 were active after adding rounds of cuts (0.869 seconds)
Knapsack was tried 350 times and created 190 cuts of which 0 were active after adding rounds of cuts (0.387 seconds)
Clique was tried 350 times and created 373 cuts of which 0 were active after adding rounds of cuts (0.153 seconds)
MixedIntegerRounding2 was tried 100 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.205 seconds)
FlowCover was tried 100 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.106 seconds)
TwoMirCuts was tried 350 times and created 1285 cuts of which 0 were active after adding rounds of cuts (0.493 seconds)
ZeroHalf was tried 350 times and created 1236 cuts of which 0 were active after adding rounds of cuts (1.799 seconds)
ImplicationCuts was tried 108 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)

Result - Optimal solution found

Objective value:                10.00000000
Enumerated nodes:               294
Total iterations:               84583
Time (CPU seconds):             47.88
Time (Wallclock seconds):       48.04

Option for printingOptions changed from normal to all
Total time (CPU seconds):       47.93   (Wallclock seconds):       48.09

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob
build_room  on object  5 ( room )  with  -
build_room  on object  5 ( room )  with  Bill

Time slot  1
build_room  on object  3 ( room )  with  -
build_room  on object  3 ( room )  with  Bob
install_kitchen  on object  2 ( room )  with  -
install_kitchen  on object  2 ( room )  with  Sandy
install_kitchen  on object  2 ( room )  with  Kay

Time slot  2
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob

Time slot  3
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob
build_room  on object  4 ( room )  with  -
build_room  on object  4 ( room )  with  Bill

Time slot  4
install_shower_b  on object  4 ( room )  with  -
install_shower_b  on object  4 ( room )  with  Sandy
install_toilet_b  on object  1 ( room )  with  -
install_toilet_b  on object  1 ( room )  with  Tina

Time slot  5
install_kitchen  on object  5 ( room )  with  -
install_kitchen  on object  5 ( room )  with  Sandy
install_kitchen  on object  5 ( room )  with  Kay

Time slot  6
install_toilet_b  on object  3 ( room )  with  -
install_toilet_b  on object  3 ( room )  with  Tina

Time slot  7
install_shower_t  on object  3 ( room )  with  -
install_shower_t  on object  3 ( room )  with  Sandy

Time slot  8
install_shower_t  on object  1 ( room )  with  -
install_shower_t  on object  1 ( room )  with  Sandy
install_toilet_s  on object  4 ( room )  with  -
install_toilet_s  on object  4 ( room )  with  Tina

Time slot  9
install_kitchen  on object  0 ( room )  with  -
install_kitchen  on object  0 ( room )  with  Sandy
install_kitchen  on object  0 ( room )  with  Kay

Time slot  10
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -
finish  on object  3 ( room )  with  -
finish  on object  4 ( room )  with  -
finish  on object  5 ( room )  with  -
