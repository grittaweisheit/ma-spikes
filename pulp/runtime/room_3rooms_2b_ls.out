Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/fc9651cf45504eecaf792d69797515a4-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/fc9651cf45504eecaf792d69797515a4-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 4991 COLUMNS
At line 37188 RHS
At line 42175 BOUNDS
At line 43563 ENDATA
Problem MODEL has 4986 rows, 1387 columns and 27936 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.02 seconds
Cgl0003I 30 fixed, 0 tightened bounds, 1276 strengthened rows, 235 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 907 strengthened rows, 14 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1120 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1046 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1013 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1003 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 963 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 912 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 862 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 763 strengthened rows, 0 substitutions
Cgl0004I processed model has 1198 rows, 235 columns (235 integer (234 of which binary)) and 14040 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 235 objects (234 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 110 integers unsatisfied sum - 9.77717
Cbc0038I Pass   1: suminf.    1.10000 (6) obj. 7 iterations 385
Cbc0038I Pass   2: suminf.    0.40000 (2) obj. 8 iterations 52
Cbc0038I Pass   3: suminf.    0.40000 (2) obj. 8 iterations 49
Cbc0038I Pass   4: suminf.    3.86364 (11) obj. 7.27273 iterations 151
Cbc0038I Pass   5: suminf.    0.60000 (2) obj. 7 iterations 98
Cbc0038I Pass   6: suminf.    0.60000 (2) obj. 7 iterations 12
Cbc0038I Pass   7: suminf.    0.60000 (2) obj. 7 iterations 44
Cbc0038I Pass   8: suminf.    0.60000 (2) obj. 7 iterations 18
Cbc0038I Pass   9: suminf.    1.63333 (5) obj. 7 iterations 126
Cbc0038I Pass  10: suminf.    0.74444 (3) obj. 7 iterations 63
Cbc0038I Pass  11: suminf.    0.44444 (2) obj. 7 iterations 19
Cbc0038I Pass  12: suminf.    0.44444 (2) obj. 7 iterations 44
Cbc0038I Pass  13: suminf.    3.50000 (12) obj. 7.75 iterations 122
Cbc0038I Pass  14: suminf.    0.42500 (2) obj. 7 iterations 73
Cbc0038I Pass  15: suminf.    0.25000 (2) obj. 7 iterations 9
Cbc0038I Pass  16: suminf.    0.25000 (2) obj. 7 iterations 2
Cbc0038I Pass  17: suminf.    0.60000 (2) obj. 7 iterations 12
Cbc0038I Pass  18: suminf.    3.41667 (16) obj. 7.125 iterations 93
Cbc0038I Pass  19: suminf.    1.29444 (6) obj. 7 iterations 61
Cbc0038I Pass  20: suminf.    0.60000 (2) obj. 7 iterations 34
Cbc0038I Pass  21: suminf.    0.60000 (2) obj. 7 iterations 26
Cbc0038I Pass  22: suminf.    2.06667 (16) obj. 8 iterations 171
Cbc0038I Pass  23: suminf.    0.20000 (1) obj. 8 iterations 77
Cbc0038I Solution found of 8
Cbc0038I Cleaned solution of 8
Cbc0038I Rounding solution of 7 is better than previous of 8

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1198 rows 235 columns, reduced to 966 rows 117 columns - 1 fixed gives 539, 77 - ok now
Cbc0038I Full problem 1198 rows 235 columns, reduced to 538 rows 77 columns
Cbc0038I Mini branch and bound did not improve solution (1.66 seconds)
Cbc0038I Round again with cutoff of 5.48247
Cbc0038I Pass  24: suminf.    3.00714 (10) obj. 5 iterations 2
Cbc0038I Pass  25: suminf.    2.83824 (11) obj. 5.48247 iterations 27
Cbc0038I Pass  26: suminf.    2.83824 (11) obj. 5.48247 iterations 3
Cbc0038I Pass  27: suminf.    3.04429 (13) obj. 5.48247 iterations 63
Cbc0038I Pass  28: suminf.    2.52559 (8) obj. 5.48247 iterations 25
Cbc0038I Pass  29: suminf.    1.94446 (7) obj. 5.48247 iterations 43
Cbc0038I Pass  30: suminf.    1.69810 (7) obj. 5.48247 iterations 4
Cbc0038I Pass  31: suminf.    3.26855 (9) obj. 5.48247 iterations 42
Cbc0038I Pass  32: suminf.    2.66492 (10) obj. 5.48247 iterations 36
Cbc0038I Pass  33: suminf.    2.39033 (10) obj. 5.48247 iterations 3
Cbc0038I Pass  34: suminf.    3.01261 (13) obj. 5.48247 iterations 51
Cbc0038I Pass  35: suminf.    2.19299 (10) obj. 5.48247 iterations 23
Cbc0038I Pass  36: suminf.    3.15739 (8) obj. 5.48247 iterations 28
Cbc0038I Pass  37: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  38: suminf.    3.26855 (9) obj. 5.48247 iterations 40
Cbc0038I Pass  39: suminf.    2.66492 (10) obj. 5.48247 iterations 50
Cbc0038I Pass  40: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  41: suminf.    3.01261 (13) obj. 5.48247 iterations 64
Cbc0038I Pass  42: suminf.    2.19299 (10) obj. 5.48247 iterations 37
Cbc0038I Pass  43: suminf.    3.15739 (8) obj. 5.48247 iterations 27
Cbc0038I Pass  44: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  45: suminf.    3.26855 (9) obj. 5.48247 iterations 40
Cbc0038I Pass  46: suminf.    2.66492 (10) obj. 5.48247 iterations 41
Cbc0038I Pass  47: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  48: suminf.    3.01261 (13) obj. 5.48247 iterations 62
Cbc0038I Pass  49: suminf.    2.19299 (10) obj. 5.48247 iterations 27
Cbc0038I Pass  50: suminf.    3.15739 (8) obj. 5.48247 iterations 29
Cbc0038I Pass  51: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  52: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass  53: suminf.    2.66492 (10) obj. 5.48247 iterations 44
Cbc0038I Pass  54: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  55: suminf.    3.01261 (13) obj. 5.48247 iterations 48
Cbc0038I Pass  56: suminf.    2.19299 (10) obj. 5.48247 iterations 26
Cbc0038I Pass  57: suminf.    3.15739 (8) obj. 5.48247 iterations 28
Cbc0038I Pass  58: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  59: suminf.    3.26855 (9) obj. 5.48247 iterations 28
Cbc0038I Pass  60: suminf.    2.66492 (10) obj. 5.48247 iterations 36
Cbc0038I Pass  61: suminf.    2.39033 (10) obj. 5.48247 iterations 3
Cbc0038I Pass  62: suminf.    3.01261 (13) obj. 5.48247 iterations 42
Cbc0038I Pass  63: suminf.    2.19299 (10) obj. 5.48247 iterations 29
Cbc0038I Pass  64: suminf.    3.15739 (8) obj. 5.48247 iterations 27
Cbc0038I Pass  65: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  66: suminf.    3.26855 (9) obj. 5.48247 iterations 27
Cbc0038I Pass  67: suminf.    2.66492 (10) obj. 5.48247 iterations 27
Cbc0038I Pass  68: suminf.    2.39033 (10) obj. 5.48247 iterations 3
Cbc0038I Pass  69: suminf.    3.01261 (13) obj. 5.48247 iterations 49
Cbc0038I Pass  70: suminf.    2.19299 (10) obj. 5.48247 iterations 25
Cbc0038I Pass  71: suminf.    3.15739 (8) obj. 5.48247 iterations 25
Cbc0038I Pass  72: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  73: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass  74: suminf.    2.66492 (10) obj. 5.48247 iterations 41
Cbc0038I Pass  75: suminf.    2.39033 (10) obj. 5.48247 iterations 2
Cbc0038I Pass  76: suminf.    3.01261 (13) obj. 5.48247 iterations 62
Cbc0038I Pass  77: suminf.    2.19299 (10) obj. 5.48247 iterations 21
Cbc0038I Pass  78: suminf.    3.15739 (8) obj. 5.48247 iterations 22
Cbc0038I Pass  79: suminf.    2.30727 (7) obj. 5.48247 iterations 7
Cbc0038I Pass  80: suminf.    3.26855 (9) obj. 5.48247 iterations 29
Cbc0038I Pass  81: suminf.    2.66492 (10) obj. 5.48247 iterations 20
Cbc0038I Pass  82: suminf.    2.39033 (10) obj. 5.48247 iterations 2
Cbc0038I Pass  83: suminf.    3.01261 (13) obj. 5.48247 iterations 48
Cbc0038I Pass  84: suminf.    2.19299 (10) obj. 5.48247 iterations 14
Cbc0038I Pass  85: suminf.    3.15739 (8) obj. 5.48247 iterations 23
Cbc0038I Pass  86: suminf.    2.30727 (7) obj. 5.48247 iterations 9
Cbc0038I Pass  87: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass  88: suminf.    2.66492 (10) obj. 5.48247 iterations 31
Cbc0038I Pass  89: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  90: suminf.    3.01261 (13) obj. 5.48247 iterations 52
Cbc0038I Pass  91: suminf.    2.19299 (10) obj. 5.48247 iterations 12
Cbc0038I Pass  92: suminf.    3.15739 (8) obj. 5.48247 iterations 22
Cbc0038I Pass  93: suminf.    2.30727 (7) obj. 5.48247 iterations 7
Cbc0038I Pass  94: suminf.    3.26855 (9) obj. 5.48247 iterations 32
Cbc0038I Pass  95: suminf.    2.66492 (10) obj. 5.48247 iterations 28
Cbc0038I Pass  96: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  97: suminf.    3.01261 (13) obj. 5.48247 iterations 61
Cbc0038I Pass  98: suminf.    2.19299 (10) obj. 5.48247 iterations 30
Cbc0038I Pass  99: suminf.    3.15739 (8) obj. 5.48247 iterations 25
Cbc0038I Pass 100: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 101: suminf.    3.26855 (9) obj. 5.48247 iterations 36
Cbc0038I Pass 102: suminf.    2.66492 (10) obj. 5.48247 iterations 52
Cbc0038I Pass 103: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass 104: suminf.    3.01261 (13) obj. 5.48247 iterations 56
Cbc0038I Pass 105: suminf.    2.19299 (10) obj. 5.48247 iterations 37
Cbc0038I Pass 106: suminf.    3.15739 (8) obj. 5.48247 iterations 26
Cbc0038I Pass 107: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 108: suminf.    3.26855 (9) obj. 5.48247 iterations 41
Cbc0038I Pass 109: suminf.    2.66492 (10) obj. 5.48247 iterations 42
Cbc0038I Pass 110: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass 111: suminf.    3.01261 (13) obj. 5.48247 iterations 48
Cbc0038I Pass 112: suminf.    2.19299 (10) obj. 5.48247 iterations 25
Cbc0038I Pass 113: suminf.    3.15739 (8) obj. 5.48247 iterations 25
Cbc0038I Pass 114: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 115: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass 116: suminf.    2.66492 (10) obj. 5.48247 iterations 35
Cbc0038I Pass 117: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass 118: suminf.    3.01261 (13) obj. 5.48247 iterations 51
Cbc0038I Pass 119: suminf.    2.19299 (10) obj. 5.48247 iterations 20
Cbc0038I Pass 120: suminf.    3.15739 (8) obj. 5.48247 iterations 28
Cbc0038I Pass 121: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 122: suminf.    3.26855 (9) obj. 5.48247 iterations 32
Cbc0038I Pass 123: suminf.    7.13785 (21) obj. 5.48247 iterations 104
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 110 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1198 rows 235 columns, reduced to 940 rows 109 columns - 1 fixed gives 784, 93 - still too large
Cbc0038I Full problem 1198 rows 235 columns, reduced to 784 rows 93 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.61 seconds)
Cbc0038I After 2.61 seconds - Feasibility pump exiting with objective of 7 - took 1.22 seconds
Cbc0012I Integer solution of 7 found by feasibility pump after 0 iterations and 0 nodes (2.61 seconds)
Cbc0038I Full problem 1198 rows 235 columns, reduced to 915 rows 100 columns - 2 fixed gives 799, 84 - still too large
Cbc0038I Full problem 1198 rows 235 columns, reduced to 777 rows 84 columns - too large
Cbc0012I Integer solution of 6 found by DiveCoefficient after 3314 iterations and 0 nodes (3.83 seconds)
Cbc0031I 25 added rows had average density of 11.48
Cbc0013I At root node, 25 cuts changed objective from 0.82375526 to 3.7191283 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 2223 row cuts average 8.8 elements, 4 column cuts (4 active)  in 0.194 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 30 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 448 row cuts average 64.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 122 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 6 best solution, best possible 4 (3.87 seconds)
Cbc0012I Integer solution of 5 found by DiveCoefficient after 3875 iterations and 2 nodes (3.92 seconds)
Cbc0001I Search completed - best objective 5, took 3876 iterations and 2 nodes (3.92 seconds)
Cbc0032I Strong branching done 2 times (61 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Cuts at root node changed objective from 0.823755 to 4
Probing was tried 29 times and created 2245 cuts of which 0 were active after adding rounds of cuts (0.195 seconds)
Gomory was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
Knapsack was tried 27 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Clique was tried 28 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
MixedIntegerRounding2 was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
FlowCover was tried 27 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 28 times and created 463 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
ZeroHalf was tried 28 times and created 145 cuts of which 0 were active after adding rounds of cuts (0.115 seconds)
ImplicationCuts was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                5.00000000
Enumerated nodes:               2
Total iterations:               3876
Time (CPU seconds):             3.88
Time (Wallclock seconds):       3.99

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.91   (Wallclock seconds):       4.02

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bill

Time slot  1
install_toilet_b  on object  0 ( room )  with  -
install_toilet_b  on object  0 ( room )  with  Tina
install_kitchen  on object  2 ( room )  with  -
install_kitchen  on object  2 ( room )  with  Sandy
install_kitchen  on object  2 ( room )  with  Kay

Time slot  2

Time slot  3
install_shower_t  on object  0 ( room )  with  -
install_shower_t  on object  0 ( room )  with  Sandy

Time slot  4
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob

Time slot  5
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/2e99b649c3b14dd49aba7c5aa18d1d2a-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/2e99b649c3b14dd49aba7c5aa18d1d2a-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 4991 COLUMNS
At line 37188 RHS
At line 42175 BOUNDS
At line 43563 ENDATA
Problem MODEL has 4986 rows, 1387 columns and 27936 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.02 seconds
Cgl0003I 30 fixed, 0 tightened bounds, 1276 strengthened rows, 235 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 907 strengthened rows, 14 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1120 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1046 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1013 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1003 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 963 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 912 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 862 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 763 strengthened rows, 0 substitutions
Cgl0004I processed model has 1198 rows, 235 columns (235 integer (234 of which binary)) and 14040 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 235 objects (234 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 110 integers unsatisfied sum - 9.77717
Cbc0038I Pass   1: suminf.    1.10000 (6) obj. 7 iterations 385
Cbc0038I Pass   2: suminf.    0.40000 (2) obj. 8 iterations 52
Cbc0038I Pass   3: suminf.    0.40000 (2) obj. 8 iterations 49
Cbc0038I Pass   4: suminf.    3.86364 (11) obj. 7.27273 iterations 151
Cbc0038I Pass   5: suminf.    0.60000 (2) obj. 7 iterations 98
Cbc0038I Pass   6: suminf.    0.60000 (2) obj. 7 iterations 12
Cbc0038I Pass   7: suminf.    0.60000 (2) obj. 7 iterations 44
Cbc0038I Pass   8: suminf.    0.60000 (2) obj. 7 iterations 18
Cbc0038I Pass   9: suminf.    1.63333 (5) obj. 7 iterations 126
Cbc0038I Pass  10: suminf.    0.74444 (3) obj. 7 iterations 63
Cbc0038I Pass  11: suminf.    0.44444 (2) obj. 7 iterations 19
Cbc0038I Pass  12: suminf.    0.44444 (2) obj. 7 iterations 44
Cbc0038I Pass  13: suminf.    3.50000 (12) obj. 7.75 iterations 122
Cbc0038I Pass  14: suminf.    0.42500 (2) obj. 7 iterations 73
Cbc0038I Pass  15: suminf.    0.25000 (2) obj. 7 iterations 9
Cbc0038I Pass  16: suminf.    0.25000 (2) obj. 7 iterations 2
Cbc0038I Pass  17: suminf.    0.60000 (2) obj. 7 iterations 12
Cbc0038I Pass  18: suminf.    3.41667 (16) obj. 7.125 iterations 93
Cbc0038I Pass  19: suminf.    1.29444 (6) obj. 7 iterations 61
Cbc0038I Pass  20: suminf.    0.60000 (2) obj. 7 iterations 34
Cbc0038I Pass  21: suminf.    0.60000 (2) obj. 7 iterations 26
Cbc0038I Pass  22: suminf.    2.06667 (16) obj. 8 iterations 171
Cbc0038I Pass  23: suminf.    0.20000 (1) obj. 8 iterations 77
Cbc0038I Solution found of 8
Cbc0038I Cleaned solution of 8
Cbc0038I Rounding solution of 7 is better than previous of 8

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1198 rows 235 columns, reduced to 966 rows 117 columns - 1 fixed gives 539, 77 - ok now
Cbc0038I Full problem 1198 rows 235 columns, reduced to 538 rows 77 columns
Cbc0038I Mini branch and bound did not improve solution (1.66 seconds)
Cbc0038I Round again with cutoff of 5.48247
Cbc0038I Pass  24: suminf.    3.00714 (10) obj. 5 iterations 2
Cbc0038I Pass  25: suminf.    2.83824 (11) obj. 5.48247 iterations 27
Cbc0038I Pass  26: suminf.    2.83824 (11) obj. 5.48247 iterations 3
Cbc0038I Pass  27: suminf.    3.04429 (13) obj. 5.48247 iterations 63
Cbc0038I Pass  28: suminf.    2.52559 (8) obj. 5.48247 iterations 25
Cbc0038I Pass  29: suminf.    1.94446 (7) obj. 5.48247 iterations 43
Cbc0038I Pass  30: suminf.    1.69810 (7) obj. 5.48247 iterations 4
Cbc0038I Pass  31: suminf.    3.26855 (9) obj. 5.48247 iterations 42
Cbc0038I Pass  32: suminf.    2.66492 (10) obj. 5.48247 iterations 36
Cbc0038I Pass  33: suminf.    2.39033 (10) obj. 5.48247 iterations 3
Cbc0038I Pass  34: suminf.    3.01261 (13) obj. 5.48247 iterations 51
Cbc0038I Pass  35: suminf.    2.19299 (10) obj. 5.48247 iterations 23
Cbc0038I Pass  36: suminf.    3.15739 (8) obj. 5.48247 iterations 28
Cbc0038I Pass  37: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  38: suminf.    3.26855 (9) obj. 5.48247 iterations 40
Cbc0038I Pass  39: suminf.    2.66492 (10) obj. 5.48247 iterations 50
Cbc0038I Pass  40: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  41: suminf.    3.01261 (13) obj. 5.48247 iterations 64
Cbc0038I Pass  42: suminf.    2.19299 (10) obj. 5.48247 iterations 37
Cbc0038I Pass  43: suminf.    3.15739 (8) obj. 5.48247 iterations 27
Cbc0038I Pass  44: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  45: suminf.    3.26855 (9) obj. 5.48247 iterations 40
Cbc0038I Pass  46: suminf.    2.66492 (10) obj. 5.48247 iterations 41
Cbc0038I Pass  47: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  48: suminf.    3.01261 (13) obj. 5.48247 iterations 62
Cbc0038I Pass  49: suminf.    2.19299 (10) obj. 5.48247 iterations 27
Cbc0038I Pass  50: suminf.    3.15739 (8) obj. 5.48247 iterations 29
Cbc0038I Pass  51: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  52: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass  53: suminf.    2.66492 (10) obj. 5.48247 iterations 44
Cbc0038I Pass  54: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  55: suminf.    3.01261 (13) obj. 5.48247 iterations 48
Cbc0038I Pass  56: suminf.    2.19299 (10) obj. 5.48247 iterations 26
Cbc0038I Pass  57: suminf.    3.15739 (8) obj. 5.48247 iterations 28
Cbc0038I Pass  58: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  59: suminf.    3.26855 (9) obj. 5.48247 iterations 28
Cbc0038I Pass  60: suminf.    2.66492 (10) obj. 5.48247 iterations 36
Cbc0038I Pass  61: suminf.    2.39033 (10) obj. 5.48247 iterations 3
Cbc0038I Pass  62: suminf.    3.01261 (13) obj. 5.48247 iterations 42
Cbc0038I Pass  63: suminf.    2.19299 (10) obj. 5.48247 iterations 29
Cbc0038I Pass  64: suminf.    3.15739 (8) obj. 5.48247 iterations 27
Cbc0038I Pass  65: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  66: suminf.    3.26855 (9) obj. 5.48247 iterations 27
Cbc0038I Pass  67: suminf.    2.66492 (10) obj. 5.48247 iterations 27
Cbc0038I Pass  68: suminf.    2.39033 (10) obj. 5.48247 iterations 3
Cbc0038I Pass  69: suminf.    3.01261 (13) obj. 5.48247 iterations 49
Cbc0038I Pass  70: suminf.    2.19299 (10) obj. 5.48247 iterations 25
Cbc0038I Pass  71: suminf.    3.15739 (8) obj. 5.48247 iterations 25
Cbc0038I Pass  72: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  73: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass  74: suminf.    2.66492 (10) obj. 5.48247 iterations 41
Cbc0038I Pass  75: suminf.    2.39033 (10) obj. 5.48247 iterations 2
Cbc0038I Pass  76: suminf.    3.01261 (13) obj. 5.48247 iterations 62
Cbc0038I Pass  77: suminf.    2.19299 (10) obj. 5.48247 iterations 21
Cbc0038I Pass  78: suminf.    3.15739 (8) obj. 5.48247 iterations 22
Cbc0038I Pass  79: suminf.    2.30727 (7) obj. 5.48247 iterations 7
Cbc0038I Pass  80: suminf.    3.26855 (9) obj. 5.48247 iterations 29
Cbc0038I Pass  81: suminf.    2.66492 (10) obj. 5.48247 iterations 20
Cbc0038I Pass  82: suminf.    2.39033 (10) obj. 5.48247 iterations 2
Cbc0038I Pass  83: suminf.    3.01261 (13) obj. 5.48247 iterations 48
Cbc0038I Pass  84: suminf.    2.19299 (10) obj. 5.48247 iterations 14
Cbc0038I Pass  85: suminf.    3.15739 (8) obj. 5.48247 iterations 23
Cbc0038I Pass  86: suminf.    2.30727 (7) obj. 5.48247 iterations 9
Cbc0038I Pass  87: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass  88: suminf.    2.66492 (10) obj. 5.48247 iterations 31
Cbc0038I Pass  89: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  90: suminf.    3.01261 (13) obj. 5.48247 iterations 52
Cbc0038I Pass  91: suminf.    2.19299 (10) obj. 5.48247 iterations 12
Cbc0038I Pass  92: suminf.    3.15739 (8) obj. 5.48247 iterations 22
Cbc0038I Pass  93: suminf.    2.30727 (7) obj. 5.48247 iterations 7
Cbc0038I Pass  94: suminf.    3.26855 (9) obj. 5.48247 iterations 32
Cbc0038I Pass  95: suminf.    2.66492 (10) obj. 5.48247 iterations 28
Cbc0038I Pass  96: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  97: suminf.    3.01261 (13) obj. 5.48247 iterations 61
Cbc0038I Pass  98: suminf.    2.19299 (10) obj. 5.48247 iterations 30
Cbc0038I Pass  99: suminf.    3.15739 (8) obj. 5.48247 iterations 25
Cbc0038I Pass 100: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 101: suminf.    3.26855 (9) obj. 5.48247 iterations 36
Cbc0038I Pass 102: suminf.    2.66492 (10) obj. 5.48247 iterations 52
Cbc0038I Pass 103: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass 104: suminf.    3.01261 (13) obj. 5.48247 iterations 56
Cbc0038I Pass 105: suminf.    2.19299 (10) obj. 5.48247 iterations 37
Cbc0038I Pass 106: suminf.    3.15739 (8) obj. 5.48247 iterations 26
Cbc0038I Pass 107: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 108: suminf.    3.26855 (9) obj. 5.48247 iterations 41
Cbc0038I Pass 109: suminf.    2.66492 (10) obj. 5.48247 iterations 42
Cbc0038I Pass 110: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass 111: suminf.    3.01261 (13) obj. 5.48247 iterations 48
Cbc0038I Pass 112: suminf.    2.19299 (10) obj. 5.48247 iterations 25
Cbc0038I Pass 113: suminf.    3.15739 (8) obj. 5.48247 iterations 25
Cbc0038I Pass 114: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 115: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass 116: suminf.    2.66492 (10) obj. 5.48247 iterations 35
Cbc0038I Pass 117: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass 118: suminf.    3.01261 (13) obj. 5.48247 iterations 51
Cbc0038I Pass 119: suminf.    2.19299 (10) obj. 5.48247 iterations 20
Cbc0038I Pass 120: suminf.    3.15739 (8) obj. 5.48247 iterations 28
Cbc0038I Pass 121: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 122: suminf.    3.26855 (9) obj. 5.48247 iterations 32
Cbc0038I Pass 123: suminf.    7.13785 (21) obj. 5.48247 iterations 104
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 110 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1198 rows 235 columns, reduced to 940 rows 109 columns - 1 fixed gives 784, 93 - still too large
Cbc0038I Full problem 1198 rows 235 columns, reduced to 784 rows 93 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.59 seconds)
Cbc0038I After 2.59 seconds - Feasibility pump exiting with objective of 7 - took 1.20 seconds
Cbc0012I Integer solution of 7 found by feasibility pump after 0 iterations and 0 nodes (2.60 seconds)
Cbc0038I Full problem 1198 rows 235 columns, reduced to 915 rows 100 columns - 2 fixed gives 799, 84 - still too large
Cbc0038I Full problem 1198 rows 235 columns, reduced to 777 rows 84 columns - too large
Cbc0012I Integer solution of 6 found by DiveCoefficient after 3314 iterations and 0 nodes (3.81 seconds)
Cbc0031I 25 added rows had average density of 11.48
Cbc0013I At root node, 25 cuts changed objective from 0.82375526 to 3.7191283 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 2223 row cuts average 8.8 elements, 4 column cuts (4 active)  in 0.194 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 30 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 448 row cuts average 64.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 122 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 6 best solution, best possible 4 (3.85 seconds)
Cbc0012I Integer solution of 5 found by DiveCoefficient after 3875 iterations and 2 nodes (3.90 seconds)
Cbc0001I Search completed - best objective 5, took 3876 iterations and 2 nodes (3.90 seconds)
Cbc0032I Strong branching done 2 times (61 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Cuts at root node changed objective from 0.823755 to 4
Probing was tried 29 times and created 2245 cuts of which 0 were active after adding rounds of cuts (0.196 seconds)
Gomory was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
Knapsack was tried 27 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Clique was tried 28 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
MixedIntegerRounding2 was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
FlowCover was tried 27 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 28 times and created 463 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
ZeroHalf was tried 28 times and created 145 cuts of which 0 were active after adding rounds of cuts (0.111 seconds)
ImplicationCuts was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                5.00000000
Enumerated nodes:               2
Total iterations:               3876
Time (CPU seconds):             3.89
Time (Wallclock seconds):       3.97

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.92   (Wallclock seconds):       4.00

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bill

Time slot  1
install_toilet_b  on object  0 ( room )  with  -
install_toilet_b  on object  0 ( room )  with  Tina
install_kitchen  on object  2 ( room )  with  -
install_kitchen  on object  2 ( room )  with  Sandy
install_kitchen  on object  2 ( room )  with  Kay

Time slot  2

Time slot  3
install_shower_t  on object  0 ( room )  with  -
install_shower_t  on object  0 ( room )  with  Sandy

Time slot  4
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob

Time slot  5
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/0c2859fb2e9041b5b1538629e32baa9d-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/0c2859fb2e9041b5b1538629e32baa9d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 4991 COLUMNS
At line 37188 RHS
At line 42175 BOUNDS
At line 43563 ENDATA
Problem MODEL has 4986 rows, 1387 columns and 27936 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.02 seconds
Cgl0003I 30 fixed, 0 tightened bounds, 1276 strengthened rows, 235 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 907 strengthened rows, 14 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1120 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1046 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1013 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1003 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 963 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 912 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 862 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 763 strengthened rows, 0 substitutions
Cgl0004I processed model has 1198 rows, 235 columns (235 integer (234 of which binary)) and 14040 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 235 objects (234 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 110 integers unsatisfied sum - 9.77717
Cbc0038I Pass   1: suminf.    1.10000 (6) obj. 7 iterations 385
Cbc0038I Pass   2: suminf.    0.40000 (2) obj. 8 iterations 52
Cbc0038I Pass   3: suminf.    0.40000 (2) obj. 8 iterations 49
Cbc0038I Pass   4: suminf.    3.86364 (11) obj. 7.27273 iterations 151
Cbc0038I Pass   5: suminf.    0.60000 (2) obj. 7 iterations 98
Cbc0038I Pass   6: suminf.    0.60000 (2) obj. 7 iterations 12
Cbc0038I Pass   7: suminf.    0.60000 (2) obj. 7 iterations 44
Cbc0038I Pass   8: suminf.    0.60000 (2) obj. 7 iterations 18
Cbc0038I Pass   9: suminf.    1.63333 (5) obj. 7 iterations 126
Cbc0038I Pass  10: suminf.    0.74444 (3) obj. 7 iterations 63
Cbc0038I Pass  11: suminf.    0.44444 (2) obj. 7 iterations 19
Cbc0038I Pass  12: suminf.    0.44444 (2) obj. 7 iterations 44
Cbc0038I Pass  13: suminf.    3.50000 (12) obj. 7.75 iterations 122
Cbc0038I Pass  14: suminf.    0.42500 (2) obj. 7 iterations 73
Cbc0038I Pass  15: suminf.    0.25000 (2) obj. 7 iterations 9
Cbc0038I Pass  16: suminf.    0.25000 (2) obj. 7 iterations 2
Cbc0038I Pass  17: suminf.    0.60000 (2) obj. 7 iterations 12
Cbc0038I Pass  18: suminf.    3.41667 (16) obj. 7.125 iterations 93
Cbc0038I Pass  19: suminf.    1.29444 (6) obj. 7 iterations 61
Cbc0038I Pass  20: suminf.    0.60000 (2) obj. 7 iterations 34
Cbc0038I Pass  21: suminf.    0.60000 (2) obj. 7 iterations 26
Cbc0038I Pass  22: suminf.    2.06667 (16) obj. 8 iterations 171
Cbc0038I Pass  23: suminf.    0.20000 (1) obj. 8 iterations 77
Cbc0038I Solution found of 8
Cbc0038I Cleaned solution of 8
Cbc0038I Rounding solution of 7 is better than previous of 8

Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1198 rows 235 columns, reduced to 966 rows 117 columns - 1 fixed gives 539, 77 - ok now
Cbc0038I Full problem 1198 rows 235 columns, reduced to 538 rows 77 columns
Cbc0038I Mini branch and bound did not improve solution (1.66 seconds)
Cbc0038I Round again with cutoff of 5.48247
Cbc0038I Pass  24: suminf.    3.00714 (10) obj. 5 iterations 2
Cbc0038I Pass  25: suminf.    2.83824 (11) obj. 5.48247 iterations 27
Cbc0038I Pass  26: suminf.    2.83824 (11) obj. 5.48247 iterations 3
Cbc0038I Pass  27: suminf.    3.04429 (13) obj. 5.48247 iterations 63
Cbc0038I Pass  28: suminf.    2.52559 (8) obj. 5.48247 iterations 25
Cbc0038I Pass  29: suminf.    1.94446 (7) obj. 5.48247 iterations 43
Cbc0038I Pass  30: suminf.    1.69810 (7) obj. 5.48247 iterations 4
Cbc0038I Pass  31: suminf.    3.26855 (9) obj. 5.48247 iterations 42
Cbc0038I Pass  32: suminf.    2.66492 (10) obj. 5.48247 iterations 36
Cbc0038I Pass  33: suminf.    2.39033 (10) obj. 5.48247 iterations 3
Cbc0038I Pass  34: suminf.    3.01261 (13) obj. 5.48247 iterations 51
Cbc0038I Pass  35: suminf.    2.19299 (10) obj. 5.48247 iterations 23
Cbc0038I Pass  36: suminf.    3.15739 (8) obj. 5.48247 iterations 28
Cbc0038I Pass  37: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  38: suminf.    3.26855 (9) obj. 5.48247 iterations 40
Cbc0038I Pass  39: suminf.    2.66492 (10) obj. 5.48247 iterations 50
Cbc0038I Pass  40: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  41: suminf.    3.01261 (13) obj. 5.48247 iterations 64
Cbc0038I Pass  42: suminf.    2.19299 (10) obj. 5.48247 iterations 37
Cbc0038I Pass  43: suminf.    3.15739 (8) obj. 5.48247 iterations 27
Cbc0038I Pass  44: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  45: suminf.    3.26855 (9) obj. 5.48247 iterations 40
Cbc0038I Pass  46: suminf.    2.66492 (10) obj. 5.48247 iterations 41
Cbc0038I Pass  47: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  48: suminf.    3.01261 (13) obj. 5.48247 iterations 62
Cbc0038I Pass  49: suminf.    2.19299 (10) obj. 5.48247 iterations 27
Cbc0038I Pass  50: suminf.    3.15739 (8) obj. 5.48247 iterations 29
Cbc0038I Pass  51: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  52: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass  53: suminf.    2.66492 (10) obj. 5.48247 iterations 44
Cbc0038I Pass  54: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  55: suminf.    3.01261 (13) obj. 5.48247 iterations 48
Cbc0038I Pass  56: suminf.    2.19299 (10) obj. 5.48247 iterations 26
Cbc0038I Pass  57: suminf.    3.15739 (8) obj. 5.48247 iterations 28
Cbc0038I Pass  58: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  59: suminf.    3.26855 (9) obj. 5.48247 iterations 28
Cbc0038I Pass  60: suminf.    2.66492 (10) obj. 5.48247 iterations 36
Cbc0038I Pass  61: suminf.    2.39033 (10) obj. 5.48247 iterations 3
Cbc0038I Pass  62: suminf.    3.01261 (13) obj. 5.48247 iterations 42
Cbc0038I Pass  63: suminf.    2.19299 (10) obj. 5.48247 iterations 29
Cbc0038I Pass  64: suminf.    3.15739 (8) obj. 5.48247 iterations 27
Cbc0038I Pass  65: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  66: suminf.    3.26855 (9) obj. 5.48247 iterations 27
Cbc0038I Pass  67: suminf.    2.66492 (10) obj. 5.48247 iterations 27
Cbc0038I Pass  68: suminf.    2.39033 (10) obj. 5.48247 iterations 3
Cbc0038I Pass  69: suminf.    3.01261 (13) obj. 5.48247 iterations 49
Cbc0038I Pass  70: suminf.    2.19299 (10) obj. 5.48247 iterations 25
Cbc0038I Pass  71: suminf.    3.15739 (8) obj. 5.48247 iterations 25
Cbc0038I Pass  72: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass  73: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass  74: suminf.    2.66492 (10) obj. 5.48247 iterations 41
Cbc0038I Pass  75: suminf.    2.39033 (10) obj. 5.48247 iterations 2
Cbc0038I Pass  76: suminf.    3.01261 (13) obj. 5.48247 iterations 62
Cbc0038I Pass  77: suminf.    2.19299 (10) obj. 5.48247 iterations 21
Cbc0038I Pass  78: suminf.    3.15739 (8) obj. 5.48247 iterations 22
Cbc0038I Pass  79: suminf.    2.30727 (7) obj. 5.48247 iterations 7
Cbc0038I Pass  80: suminf.    3.26855 (9) obj. 5.48247 iterations 29
Cbc0038I Pass  81: suminf.    2.66492 (10) obj. 5.48247 iterations 20
Cbc0038I Pass  82: suminf.    2.39033 (10) obj. 5.48247 iterations 2
Cbc0038I Pass  83: suminf.    3.01261 (13) obj. 5.48247 iterations 48
Cbc0038I Pass  84: suminf.    2.19299 (10) obj. 5.48247 iterations 14
Cbc0038I Pass  85: suminf.    3.15739 (8) obj. 5.48247 iterations 23
Cbc0038I Pass  86: suminf.    2.30727 (7) obj. 5.48247 iterations 9
Cbc0038I Pass  87: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass  88: suminf.    2.66492 (10) obj. 5.48247 iterations 31
Cbc0038I Pass  89: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  90: suminf.    3.01261 (13) obj. 5.48247 iterations 52
Cbc0038I Pass  91: suminf.    2.19299 (10) obj. 5.48247 iterations 12
Cbc0038I Pass  92: suminf.    3.15739 (8) obj. 5.48247 iterations 22
Cbc0038I Pass  93: suminf.    2.30727 (7) obj. 5.48247 iterations 7
Cbc0038I Pass  94: suminf.    3.26855 (9) obj. 5.48247 iterations 32
Cbc0038I Pass  95: suminf.    2.66492 (10) obj. 5.48247 iterations 28
Cbc0038I Pass  96: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass  97: suminf.    3.01261 (13) obj. 5.48247 iterations 61
Cbc0038I Pass  98: suminf.    2.19299 (10) obj. 5.48247 iterations 30
Cbc0038I Pass  99: suminf.    3.15739 (8) obj. 5.48247 iterations 25
Cbc0038I Pass 100: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 101: suminf.    3.26855 (9) obj. 5.48247 iterations 36
Cbc0038I Pass 102: suminf.    2.66492 (10) obj. 5.48247 iterations 52
Cbc0038I Pass 103: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass 104: suminf.    3.01261 (13) obj. 5.48247 iterations 56
Cbc0038I Pass 105: suminf.    2.19299 (10) obj. 5.48247 iterations 37
Cbc0038I Pass 106: suminf.    3.15739 (8) obj. 5.48247 iterations 26
Cbc0038I Pass 107: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 108: suminf.    3.26855 (9) obj. 5.48247 iterations 41
Cbc0038I Pass 109: suminf.    2.66492 (10) obj. 5.48247 iterations 42
Cbc0038I Pass 110: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass 111: suminf.    3.01261 (13) obj. 5.48247 iterations 48
Cbc0038I Pass 112: suminf.    2.19299 (10) obj. 5.48247 iterations 25
Cbc0038I Pass 113: suminf.    3.15739 (8) obj. 5.48247 iterations 25
Cbc0038I Pass 114: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 115: suminf.    3.26855 (9) obj. 5.48247 iterations 33
Cbc0038I Pass 116: suminf.    2.66492 (10) obj. 5.48247 iterations 35
Cbc0038I Pass 117: suminf.    2.39033 (10) obj. 5.48247 iterations 4
Cbc0038I Pass 118: suminf.    3.01261 (13) obj. 5.48247 iterations 51
Cbc0038I Pass 119: suminf.    2.19299 (10) obj. 5.48247 iterations 20
Cbc0038I Pass 120: suminf.    3.15739 (8) obj. 5.48247 iterations 28
Cbc0038I Pass 121: suminf.    2.30727 (7) obj. 5.48247 iterations 6
Cbc0038I Pass 122: suminf.    3.26855 (9) obj. 5.48247 iterations 32
Cbc0038I Pass 123: suminf.    7.13785 (21) obj. 5.48247 iterations 104
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 110 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1198 rows 235 columns, reduced to 940 rows 109 columns - 1 fixed gives 784, 93 - still too large
Cbc0038I Full problem 1198 rows 235 columns, reduced to 784 rows 93 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.65 seconds)
Cbc0038I After 2.65 seconds - Feasibility pump exiting with objective of 7 - took 1.26 seconds
Cbc0012I Integer solution of 7 found by feasibility pump after 0 iterations and 0 nodes (2.65 seconds)
Cbc0038I Full problem 1198 rows 235 columns, reduced to 915 rows 100 columns - 2 fixed gives 799, 84 - still too large
Cbc0038I Full problem 1198 rows 235 columns, reduced to 777 rows 84 columns - too large
Cbc0012I Integer solution of 6 found by DiveCoefficient after 3314 iterations and 0 nodes (3.89 seconds)
Cbc0031I 25 added rows had average density of 11.48
Cbc0013I At root node, 25 cuts changed objective from 0.82375526 to 3.7191283 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 2223 row cuts average 8.8 elements, 4 column cuts (4 active)  in 0.199 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 30 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 448 row cuts average 64.7 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 122 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 6 best solution, best possible 4 (3.93 seconds)
Cbc0012I Integer solution of 5 found by DiveCoefficient after 3875 iterations and 2 nodes (3.98 seconds)
Cbc0001I Search completed - best objective 5, took 3876 iterations and 2 nodes (3.98 seconds)
Cbc0032I Strong branching done 2 times (61 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Cuts at root node changed objective from 0.823755 to 4
Probing was tried 29 times and created 2245 cuts of which 0 were active after adding rounds of cuts (0.201 seconds)
Gomory was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
Knapsack was tried 27 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Clique was tried 28 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
MixedIntegerRounding2 was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
FlowCover was tried 27 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 28 times and created 463 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
ZeroHalf was tried 28 times and created 145 cuts of which 0 were active after adding rounds of cuts (0.117 seconds)
ImplicationCuts was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                5.00000000
Enumerated nodes:               2
Total iterations:               3876
Time (CPU seconds):             3.95
Time (Wallclock seconds):       4.05

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.98   (Wallclock seconds):       4.08

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bill

Time slot  1
install_toilet_b  on object  0 ( room )  with  -
install_toilet_b  on object  0 ( room )  with  Tina
install_kitchen  on object  2 ( room )  with  -
install_kitchen  on object  2 ( room )  with  Sandy
install_kitchen  on object  2 ( room )  with  Kay

Time slot  2

Time slot  3
install_shower_t  on object  0 ( room )  with  -
install_shower_t  on object  0 ( room )  with  Sandy

Time slot  4
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob

Time slot  5
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
