Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/7c66e646a4574445ac7d9dbefa4f739c-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/7c66e646a4574445ac7d9dbefa4f739c-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 4613 COLUMNS
At line 30384 RHS
At line 34993 BOUNDS
At line 36381 ENDATA
Problem MODEL has 4608 rows, 1387 columns and 21510 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.02 seconds
Cgl0003I 27 fixed, 0 tightened bounds, 801 strengthened rows, 237 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 553 strengthened rows, 18 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 704 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 648 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 593 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 561 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 527 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 490 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 459 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 402 strengthened rows, 0 substitutions
Cgl0004I processed model has 826 rows, 243 columns (243 integer (242 of which binary)) and 9376 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 243 objects (242 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 78 integers unsatisfied sum - 8.73051
Cbc0038I Pass   1: suminf.    6.88362 (36) obj. 2.30915 iterations 255
Cbc0038I Pass   2: suminf.    2.33333 (7) obj. 7 iterations 98
Cbc0038I Pass   3: suminf.    2.33333 (7) obj. 7 iterations 12
Cbc0038I Pass   4: suminf.    2.19444 (9) obj. 6.66667 iterations 37
Cbc0038I Pass   5: suminf.    1.67593 (7) obj. 6.66667 iterations 8
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 10 iterations 32
Cbc0038I Solution found of 10
Cbc0038I Cleaned solution of 10
Cbc0038I Before mini branch and bound, 145 integers at bound fixed and 0 continuous
Cbc0038I Full problem 826 rows 243 columns, reduced to 596 rows 79 columns - 4 fixed gives 227, 33 - ok now
Cbc0038I Full problem 826 rows 243 columns, reduced to 227 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 10 to 8 (1.09 seconds)
Cbc0038I Round again with cutoff of 6.40861
Cbc0038I Pass   7: suminf.    6.88362 (36) obj. 2.30915 iterations 0
Cbc0038I Pass   8: suminf.    3.17885 (13) obj. 6.40861 iterations 133
Cbc0038I Pass   9: suminf.    2.43460 (7) obj. 6.40861 iterations 29
Cbc0038I Pass  10: suminf.    1.83818 (9) obj. 6.40861 iterations 10
Cbc0038I Pass  11: suminf.    2.57644 (11) obj. 6.40861 iterations 36
Cbc0038I Pass  12: suminf.    1.33333 (7) obj. 5.88235 iterations 21
Cbc0038I Pass  13: suminf.    2.13314 (7) obj. 6.40861 iterations 32
Cbc0038I Pass  14: suminf.    1.00000 (4) obj. 4 iterations 32
Cbc0038I Pass  15: suminf.    1.00000 (4) obj. 4 iterations 6
Cbc0038I Pass  16: suminf.    1.01587 (4) obj. 4 iterations 11
Cbc0038I Pass  17: suminf.    8.31068 (32) obj. 3.96117 iterations 101
Cbc0038I Pass  18: suminf.    1.57758 (6) obj. 6.40861 iterations 65
Cbc0038I Pass  19: suminf.    1.57758 (6) obj. 6.40861 iterations 3
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 5 iterations 13
Cbc0038I Solution found of 5
Cbc0038I Cleaned solution of 5
Cbc0038I Before mini branch and bound, 133 integers at bound fixed and 0 continuous
Cbc0038I Full problem 826 rows 243 columns, reduced to 633 rows 95 columns - 1 fixed gives 531, 78 - still too large
Cbc0038I Full problem 826 rows 243 columns, reduced to 531 rows 78 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.19 seconds)
Cbc0038I Round again with cutoff of 3.41712
Cbc0038I Pass  21: suminf.    6.88362 (36) obj. 2.30915 iterations 0
Cbc0038I Pass  22: suminf.    6.02185 (17) obj. 3.41712 iterations 85
Cbc0038I Pass  23: suminf.    4.59466 (14) obj. 3.41712 iterations 39
Cbc0038I Pass  24: suminf.    4.55295 (14) obj. 3.41712 iterations 32
Cbc0038I Pass  25: suminf.    4.26257 (16) obj. 3.41712 iterations 23
Cbc0038I Pass  26: suminf.    4.98065 (19) obj. 3.41712 iterations 47
Cbc0038I Pass  27: suminf.    4.82246 (16) obj. 3.41712 iterations 24
Cbc0038I Pass  28: suminf.    2.58288 (12) obj. 3.41712 iterations 38
Cbc0038I Pass  29: suminf.    2.58288 (14) obj. 3.41712 iterations 15
Cbc0038I Pass  30: suminf.    5.07541 (18) obj. 3.41712 iterations 71
Cbc0038I Pass  31: suminf.    8.18924 (37) obj. 3.41712 iterations 80
Cbc0038I Pass  32: suminf.    4.62667 (18) obj. 3 iterations 78
Cbc0038I Pass  33: suminf.    6.81713 (18) obj. 3.41712 iterations 49
Cbc0038I Pass  34: suminf.    4.20000 (15) obj. 3.41712 iterations 33
Cbc0038I Pass  35: suminf.    4.20000 (15) obj. 3.41712 iterations 0
Cbc0038I Pass  36: suminf.    4.53790 (14) obj. 3.41712 iterations 36
Cbc0038I Pass  37: suminf.    3.94973 (14) obj. 3.41712 iterations 31
Cbc0038I Pass  38: suminf.    5.07541 (18) obj. 3.41712 iterations 54
Cbc0038I Pass  39: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  40: suminf.    5.41392 (15) obj. 3.41712 iterations 46
Cbc0038I Pass  41: suminf.    2.58288 (14) obj. 3.41712 iterations 46
Cbc0038I Pass  42: suminf.    2.58288 (14) obj. 3.41712 iterations 2
Cbc0038I Pass  43: suminf.    5.07541 (18) obj. 3.41712 iterations 83
Cbc0038I Pass  44: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  45: suminf.    5.41392 (15) obj. 3.41712 iterations 47
Cbc0038I Pass  46: suminf.    2.58288 (14) obj. 3.41712 iterations 32
Cbc0038I Pass  47: suminf.    2.58288 (14) obj. 3.41712 iterations 11
Cbc0038I Pass  48: suminf.    5.07541 (18) obj. 3.41712 iterations 83
Cbc0038I Pass  49: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  50: suminf.    5.41392 (15) obj. 3.41712 iterations 39
Cbc0038I Pass  51: suminf.    2.58288 (14) obj. 3.41712 iterations 39
Cbc0038I Pass  52: suminf.    2.58288 (14) obj. 3.41712 iterations 18
Cbc0038I Pass  53: suminf.    5.07541 (18) obj. 3.41712 iterations 89
Cbc0038I Pass  54: suminf.    4.82246 (16) obj. 3.41712 iterations 21
Cbc0038I Pass  55: suminf.    5.41392 (15) obj. 3.41712 iterations 47
Cbc0038I Pass  56: suminf.    2.58288 (14) obj. 3.41712 iterations 38
Cbc0038I Pass  57: suminf.    2.58288 (14) obj. 3.41712 iterations 10
Cbc0038I Pass  58: suminf.    5.07541 (18) obj. 3.41712 iterations 87
Cbc0038I Pass  59: suminf.    4.82246 (16) obj. 3.41712 iterations 18
Cbc0038I Pass  60: suminf.    5.37595 (14) obj. 3.41712 iterations 51
Cbc0038I Pass  61: suminf.    2.58288 (14) obj. 3.41712 iterations 31
Cbc0038I Pass  62: suminf.    2.58288 (14) obj. 3.41712 iterations 21
Cbc0038I Pass  63: suminf.    5.07541 (18) obj. 3.41712 iterations 99
Cbc0038I Pass  64: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  65: suminf.    5.41392 (15) obj. 3.41712 iterations 44
Cbc0038I Pass  66: suminf.    2.58288 (14) obj. 3.41712 iterations 39
Cbc0038I Pass  67: suminf.    2.58288 (14) obj. 3.41712 iterations 14
Cbc0038I Pass  68: suminf.    5.03968 (17) obj. 3.41712 iterations 59
Cbc0038I Pass  69: suminf.    4.82246 (16) obj. 3.41712 iterations 19
Cbc0038I Pass  70: suminf.    5.41392 (15) obj. 3.41712 iterations 49
Cbc0038I Pass  71: suminf.    2.58288 (14) obj. 3.41712 iterations 35
Cbc0038I Pass  72: suminf.    2.58288 (14) obj. 3.41712 iterations 23
Cbc0038I Pass  73: suminf.    5.07541 (18) obj. 3.41712 iterations 93
Cbc0038I Pass  74: suminf.    4.82246 (16) obj. 3.41712 iterations 18
Cbc0038I Pass  75: suminf.    5.41392 (15) obj. 3.41712 iterations 42
Cbc0038I Pass  76: suminf.    2.58288 (14) obj. 3.41712 iterations 37
Cbc0038I Pass  77: suminf.    2.58288 (14) obj. 3.41712 iterations 4
Cbc0038I Pass  78: suminf.    5.07541 (18) obj. 3.41712 iterations 73
Cbc0038I Pass  79: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  80: suminf.    5.41392 (15) obj. 3.41712 iterations 54
Cbc0038I Pass  81: suminf.    2.58288 (14) obj. 3.41712 iterations 34
Cbc0038I Pass  82: suminf.    2.58288 (14) obj. 3.41712 iterations 17
Cbc0038I Pass  83: suminf.    5.07541 (18) obj. 3.41712 iterations 102
Cbc0038I Pass  84: suminf.    4.82246 (16) obj. 3.41712 iterations 19
Cbc0038I Pass  85: suminf.    5.41392 (15) obj. 3.41712 iterations 37
Cbc0038I Pass  86: suminf.    2.58288 (14) obj. 3.41712 iterations 35
Cbc0038I Pass  87: suminf.    2.58288 (14) obj. 3.41712 iterations 10
Cbc0038I Pass  88: suminf.    5.07541 (18) obj. 3.41712 iterations 66
Cbc0038I Pass  89: suminf.    4.82246 (16) obj. 3.41712 iterations 21
Cbc0038I Pass  90: suminf.    5.41392 (15) obj. 3.41712 iterations 42
Cbc0038I Pass  91: suminf.    2.58288 (14) obj. 3.41712 iterations 35
Cbc0038I Pass  92: suminf.    2.58288 (14) obj. 3.41712 iterations 3
Cbc0038I Pass  93: suminf.    5.07541 (18) obj. 3.41712 iterations 82
Cbc0038I Pass  94: suminf.    4.82246 (16) obj. 3.41712 iterations 16
Cbc0038I Pass  95: suminf.    2.60802 (12) obj. 3.41712 iterations 55
Cbc0038I Pass  96: suminf.    7.81268 (31) obj. 3.41712 iterations 123
Cbc0038I Pass  97: suminf.    4.39572 (13) obj. 3.41712 iterations 67
Cbc0038I Pass  98: suminf.    3.15081 (12) obj. 3.41712 iterations 28
Cbc0038I Pass  99: suminf.    2.91608 (14) obj. 2.51748 iterations 25
Cbc0038I Pass 100: suminf.    3.78397 (12) obj. 3.41712 iterations 39
Cbc0038I Pass 101: suminf.    2.19429 (10) obj. 3.41712 iterations 51
Cbc0038I Pass 102: suminf.    2.19429 (10) obj. 3.41712 iterations 14
Cbc0038I Pass 103: suminf.    3.17442 (11) obj. 3.41712 iterations 40
Cbc0038I Pass 104: suminf.    2.91608 (14) obj. 2.51748 iterations 25
Cbc0038I Pass 105: suminf.    3.78397 (12) obj. 3.41712 iterations 37
Cbc0038I Pass 106: suminf.    2.19429 (10) obj. 3.41712 iterations 47
Cbc0038I Pass 107: suminf.    2.19429 (10) obj. 3.41712 iterations 27
Cbc0038I Pass 108: suminf.    3.17442 (11) obj. 3.41712 iterations 46
Cbc0038I Pass 109: suminf.    2.91608 (14) obj. 2.51748 iterations 27
Cbc0038I Pass 110: suminf.    3.78397 (12) obj. 3.41712 iterations 43
Cbc0038I Pass 111: suminf.    2.19429 (10) obj. 3.41712 iterations 47
Cbc0038I Pass 112: suminf.    2.19429 (10) obj. 3.41712 iterations 24
Cbc0038I Pass 113: suminf.    3.17442 (11) obj. 3.41712 iterations 46
Cbc0038I Pass 114: suminf.    2.91608 (14) obj. 2.51748 iterations 29
Cbc0038I Pass 115: suminf.    3.78397 (12) obj. 3.41712 iterations 37
Cbc0038I Pass 116: suminf.    2.19429 (10) obj. 3.41712 iterations 48
Cbc0038I Pass 117: suminf.    2.19429 (10) obj. 3.41712 iterations 24
Cbc0038I Pass 118: suminf.    3.17442 (11) obj. 3.41712 iterations 42
Cbc0038I Pass 119: suminf.    2.91608 (14) obj. 2.51748 iterations 28
Cbc0038I Pass 120: suminf.    6.06942 (24) obj. 3.41712 iterations 95
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 109 integers at bound fixed and 0 continuous
Cbc0038I Full problem 826 rows 243 columns, reduced to 685 rows 117 columns - 1 fixed gives 579, 92 - still too large
Cbc0038I Full problem 826 rows 243 columns, reduced to 579 rows 92 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.38 seconds)
Cbc0038I After 3.38 seconds - Feasibility pump exiting with objective of 5 - took 2.38 seconds
Cbc0012I Integer solution of 5 found by feasibility pump after 0 iterations and 0 nodes (3.38 seconds)
Cbc0038I Full problem 826 rows 243 columns, reduced to 540 rows 68 columns - 1 fixed gives 235, 36 - ok now
Cbc0038I Full problem 826 rows 243 columns, reduced to 75 rows 15 columns
Cbc0012I Integer solution of 4 found by DiveCoefficient after 154 iterations and 0 nodes (3.47 seconds)
Cbc0031I 1 added rows had average density of 19
Cbc0013I At root node, 1 cuts changed objective from 1.0851946 to 4 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 56 row cuts average 10.0 elements, 26 column cuts (26 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 14 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective 4, took 154 iterations and 0 nodes (3.47 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Cuts at root node changed objective from 1.08519 to 4
Probing was tried 4 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 4 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                4.00000000
Enumerated nodes:               0
Total iterations:               154
Time (CPU seconds):             3.45
Time (Wallclock seconds):       3.50

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.47   (Wallclock seconds):       3.53

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bill
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob

Time slot  1
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bill
install_toilet_b  on object  1 ( room )  with  -
install_toilet_b  on object  1 ( room )  with  Tina
install_kitchen  on object  0 ( room )  with  -
install_kitchen  on object  0 ( room )  with  Sandy
install_kitchen  on object  0 ( room )  with  Kay

Time slot  2

Time slot  3
install_shower_t  on object  1 ( room )  with  -
install_shower_t  on object  1 ( room )  with  Sandy

Time slot  4
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -

Time slot  5

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/a1c507c77524492a8ecbaffdbc007c52-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/a1c507c77524492a8ecbaffdbc007c52-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 4613 COLUMNS
At line 30384 RHS
At line 34993 BOUNDS
At line 36381 ENDATA
Problem MODEL has 4608 rows, 1387 columns and 21510 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.01 seconds
Cgl0003I 27 fixed, 0 tightened bounds, 801 strengthened rows, 237 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 553 strengthened rows, 18 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 704 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 648 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 593 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 561 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 527 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 490 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 459 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 402 strengthened rows, 0 substitutions
Cgl0004I processed model has 826 rows, 243 columns (243 integer (242 of which binary)) and 9376 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 243 objects (242 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 78 integers unsatisfied sum - 8.73051
Cbc0038I Pass   1: suminf.    6.88362 (36) obj. 2.30915 iterations 255
Cbc0038I Pass   2: suminf.    2.33333 (7) obj. 7 iterations 98
Cbc0038I Pass   3: suminf.    2.33333 (7) obj. 7 iterations 12
Cbc0038I Pass   4: suminf.    2.19444 (9) obj. 6.66667 iterations 37
Cbc0038I Pass   5: suminf.    1.67593 (7) obj. 6.66667 iterations 8
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 10 iterations 32
Cbc0038I Solution found of 10
Cbc0038I Cleaned solution of 10
Cbc0038I Before mini branch and bound, 145 integers at bound fixed and 0 continuous
Cbc0038I Full problem 826 rows 243 columns, reduced to 596 rows 79 columns - 4 fixed gives 227, 33 - ok now
Cbc0038I Full problem 826 rows 243 columns, reduced to 227 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 10 to 8 (1.07 seconds)
Cbc0038I Round again with cutoff of 6.40861
Cbc0038I Pass   7: suminf.    6.88362 (36) obj. 2.30915 iterations 0
Cbc0038I Pass   8: suminf.    3.17885 (13) obj. 6.40861 iterations 133
Cbc0038I Pass   9: suminf.    2.43460 (7) obj. 6.40861 iterations 29
Cbc0038I Pass  10: suminf.    1.83818 (9) obj. 6.40861 iterations 10
Cbc0038I Pass  11: suminf.    2.57644 (11) obj. 6.40861 iterations 36
Cbc0038I Pass  12: suminf.    1.33333 (7) obj. 5.88235 iterations 21
Cbc0038I Pass  13: suminf.    2.13314 (7) obj. 6.40861 iterations 32
Cbc0038I Pass  14: suminf.    1.00000 (4) obj. 4 iterations 32
Cbc0038I Pass  15: suminf.    1.00000 (4) obj. 4 iterations 6
Cbc0038I Pass  16: suminf.    1.01587 (4) obj. 4 iterations 11
Cbc0038I Pass  17: suminf.    8.31068 (32) obj. 3.96117 iterations 101
Cbc0038I Pass  18: suminf.    1.57758 (6) obj. 6.40861 iterations 65
Cbc0038I Pass  19: suminf.    1.57758 (6) obj. 6.40861 iterations 3
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 5 iterations 13
Cbc0038I Solution found of 5
Cbc0038I Cleaned solution of 5
Cbc0038I Before mini branch and bound, 133 integers at bound fixed and 0 continuous
Cbc0038I Full problem 826 rows 243 columns, reduced to 633 rows 95 columns - 1 fixed gives 531, 78 - still too large
Cbc0038I Full problem 826 rows 243 columns, reduced to 531 rows 78 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.17 seconds)
Cbc0038I Round again with cutoff of 3.41712
Cbc0038I Pass  21: suminf.    6.88362 (36) obj. 2.30915 iterations 0
Cbc0038I Pass  22: suminf.    6.02185 (17) obj. 3.41712 iterations 85
Cbc0038I Pass  23: suminf.    4.59466 (14) obj. 3.41712 iterations 39
Cbc0038I Pass  24: suminf.    4.55295 (14) obj. 3.41712 iterations 32
Cbc0038I Pass  25: suminf.    4.26257 (16) obj. 3.41712 iterations 23
Cbc0038I Pass  26: suminf.    4.98065 (19) obj. 3.41712 iterations 47
Cbc0038I Pass  27: suminf.    4.82246 (16) obj. 3.41712 iterations 24
Cbc0038I Pass  28: suminf.    2.58288 (12) obj. 3.41712 iterations 38
Cbc0038I Pass  29: suminf.    2.58288 (14) obj. 3.41712 iterations 15
Cbc0038I Pass  30: suminf.    5.07541 (18) obj. 3.41712 iterations 71
Cbc0038I Pass  31: suminf.    8.18924 (37) obj. 3.41712 iterations 80
Cbc0038I Pass  32: suminf.    4.62667 (18) obj. 3 iterations 78
Cbc0038I Pass  33: suminf.    6.81713 (18) obj. 3.41712 iterations 49
Cbc0038I Pass  34: suminf.    4.20000 (15) obj. 3.41712 iterations 33
Cbc0038I Pass  35: suminf.    4.20000 (15) obj. 3.41712 iterations 0
Cbc0038I Pass  36: suminf.    4.53790 (14) obj. 3.41712 iterations 36
Cbc0038I Pass  37: suminf.    3.94973 (14) obj. 3.41712 iterations 31
Cbc0038I Pass  38: suminf.    5.07541 (18) obj. 3.41712 iterations 54
Cbc0038I Pass  39: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  40: suminf.    5.41392 (15) obj. 3.41712 iterations 46
Cbc0038I Pass  41: suminf.    2.58288 (14) obj. 3.41712 iterations 46
Cbc0038I Pass  42: suminf.    2.58288 (14) obj. 3.41712 iterations 2
Cbc0038I Pass  43: suminf.    5.07541 (18) obj. 3.41712 iterations 83
Cbc0038I Pass  44: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  45: suminf.    5.41392 (15) obj. 3.41712 iterations 47
Cbc0038I Pass  46: suminf.    2.58288 (14) obj. 3.41712 iterations 32
Cbc0038I Pass  47: suminf.    2.58288 (14) obj. 3.41712 iterations 11
Cbc0038I Pass  48: suminf.    5.07541 (18) obj. 3.41712 iterations 83
Cbc0038I Pass  49: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  50: suminf.    5.41392 (15) obj. 3.41712 iterations 39
Cbc0038I Pass  51: suminf.    2.58288 (14) obj. 3.41712 iterations 39
Cbc0038I Pass  52: suminf.    2.58288 (14) obj. 3.41712 iterations 18
Cbc0038I Pass  53: suminf.    5.07541 (18) obj. 3.41712 iterations 89
Cbc0038I Pass  54: suminf.    4.82246 (16) obj. 3.41712 iterations 21
Cbc0038I Pass  55: suminf.    5.41392 (15) obj. 3.41712 iterations 47
Cbc0038I Pass  56: suminf.    2.58288 (14) obj. 3.41712 iterations 38
Cbc0038I Pass  57: suminf.    2.58288 (14) obj. 3.41712 iterations 10
Cbc0038I Pass  58: suminf.    5.07541 (18) obj. 3.41712 iterations 87
Cbc0038I Pass  59: suminf.    4.82246 (16) obj. 3.41712 iterations 18
Cbc0038I Pass  60: suminf.    5.37595 (14) obj. 3.41712 iterations 51
Cbc0038I Pass  61: suminf.    2.58288 (14) obj. 3.41712 iterations 31
Cbc0038I Pass  62: suminf.    2.58288 (14) obj. 3.41712 iterations 21
Cbc0038I Pass  63: suminf.    5.07541 (18) obj. 3.41712 iterations 99
Cbc0038I Pass  64: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  65: suminf.    5.41392 (15) obj. 3.41712 iterations 44
Cbc0038I Pass  66: suminf.    2.58288 (14) obj. 3.41712 iterations 39
Cbc0038I Pass  67: suminf.    2.58288 (14) obj. 3.41712 iterations 14
Cbc0038I Pass  68: suminf.    5.03968 (17) obj. 3.41712 iterations 59
Cbc0038I Pass  69: suminf.    4.82246 (16) obj. 3.41712 iterations 19
Cbc0038I Pass  70: suminf.    5.41392 (15) obj. 3.41712 iterations 49
Cbc0038I Pass  71: suminf.    2.58288 (14) obj. 3.41712 iterations 35
Cbc0038I Pass  72: suminf.    2.58288 (14) obj. 3.41712 iterations 23
Cbc0038I Pass  73: suminf.    5.07541 (18) obj. 3.41712 iterations 93
Cbc0038I Pass  74: suminf.    4.82246 (16) obj. 3.41712 iterations 18
Cbc0038I Pass  75: suminf.    5.41392 (15) obj. 3.41712 iterations 42
Cbc0038I Pass  76: suminf.    2.58288 (14) obj. 3.41712 iterations 37
Cbc0038I Pass  77: suminf.    2.58288 (14) obj. 3.41712 iterations 4
Cbc0038I Pass  78: suminf.    5.07541 (18) obj. 3.41712 iterations 73
Cbc0038I Pass  79: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  80: suminf.    5.41392 (15) obj. 3.41712 iterations 54
Cbc0038I Pass  81: suminf.    2.58288 (14) obj. 3.41712 iterations 34
Cbc0038I Pass  82: suminf.    2.58288 (14) obj. 3.41712 iterations 17
Cbc0038I Pass  83: suminf.    5.07541 (18) obj. 3.41712 iterations 102
Cbc0038I Pass  84: suminf.    4.82246 (16) obj. 3.41712 iterations 19
Cbc0038I Pass  85: suminf.    5.41392 (15) obj. 3.41712 iterations 37
Cbc0038I Pass  86: suminf.    2.58288 (14) obj. 3.41712 iterations 35
Cbc0038I Pass  87: suminf.    2.58288 (14) obj. 3.41712 iterations 10
Cbc0038I Pass  88: suminf.    5.07541 (18) obj. 3.41712 iterations 66
Cbc0038I Pass  89: suminf.    4.82246 (16) obj. 3.41712 iterations 21
Cbc0038I Pass  90: suminf.    5.41392 (15) obj. 3.41712 iterations 42
Cbc0038I Pass  91: suminf.    2.58288 (14) obj. 3.41712 iterations 35
Cbc0038I Pass  92: suminf.    2.58288 (14) obj. 3.41712 iterations 3
Cbc0038I Pass  93: suminf.    5.07541 (18) obj. 3.41712 iterations 82
Cbc0038I Pass  94: suminf.    4.82246 (16) obj. 3.41712 iterations 16
Cbc0038I Pass  95: suminf.    2.60802 (12) obj. 3.41712 iterations 55
Cbc0038I Pass  96: suminf.    7.81268 (31) obj. 3.41712 iterations 123
Cbc0038I Pass  97: suminf.    4.39572 (13) obj. 3.41712 iterations 67
Cbc0038I Pass  98: suminf.    3.15081 (12) obj. 3.41712 iterations 28
Cbc0038I Pass  99: suminf.    2.91608 (14) obj. 2.51748 iterations 25
Cbc0038I Pass 100: suminf.    3.78397 (12) obj. 3.41712 iterations 39
Cbc0038I Pass 101: suminf.    2.19429 (10) obj. 3.41712 iterations 51
Cbc0038I Pass 102: suminf.    2.19429 (10) obj. 3.41712 iterations 14
Cbc0038I Pass 103: suminf.    3.17442 (11) obj. 3.41712 iterations 40
Cbc0038I Pass 104: suminf.    2.91608 (14) obj. 2.51748 iterations 25
Cbc0038I Pass 105: suminf.    3.78397 (12) obj. 3.41712 iterations 37
Cbc0038I Pass 106: suminf.    2.19429 (10) obj. 3.41712 iterations 47
Cbc0038I Pass 107: suminf.    2.19429 (10) obj. 3.41712 iterations 27
Cbc0038I Pass 108: suminf.    3.17442 (11) obj. 3.41712 iterations 46
Cbc0038I Pass 109: suminf.    2.91608 (14) obj. 2.51748 iterations 27
Cbc0038I Pass 110: suminf.    3.78397 (12) obj. 3.41712 iterations 43
Cbc0038I Pass 111: suminf.    2.19429 (10) obj. 3.41712 iterations 47
Cbc0038I Pass 112: suminf.    2.19429 (10) obj. 3.41712 iterations 24
Cbc0038I Pass 113: suminf.    3.17442 (11) obj. 3.41712 iterations 46
Cbc0038I Pass 114: suminf.    2.91608 (14) obj. 2.51748 iterations 29
Cbc0038I Pass 115: suminf.    3.78397 (12) obj. 3.41712 iterations 37
Cbc0038I Pass 116: suminf.    2.19429 (10) obj. 3.41712 iterations 48
Cbc0038I Pass 117: suminf.    2.19429 (10) obj. 3.41712 iterations 24
Cbc0038I Pass 118: suminf.    3.17442 (11) obj. 3.41712 iterations 42
Cbc0038I Pass 119: suminf.    2.91608 (14) obj. 2.51748 iterations 28
Cbc0038I Pass 120: suminf.    6.06942 (24) obj. 3.41712 iterations 95
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 109 integers at bound fixed and 0 continuous
Cbc0038I Full problem 826 rows 243 columns, reduced to 685 rows 117 columns - 1 fixed gives 579, 92 - still too large
Cbc0038I Full problem 826 rows 243 columns, reduced to 579 rows 92 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.36 seconds)
Cbc0038I After 3.36 seconds - Feasibility pump exiting with objective of 5 - took 2.38 seconds
Cbc0012I Integer solution of 5 found by feasibility pump after 0 iterations and 0 nodes (3.36 seconds)
Cbc0038I Full problem 826 rows 243 columns, reduced to 540 rows 68 columns - 1 fixed gives 235, 36 - ok now
Cbc0038I Full problem 826 rows 243 columns, reduced to 75 rows 15 columns
Cbc0012I Integer solution of 4 found by DiveCoefficient after 154 iterations and 0 nodes (3.45 seconds)
Cbc0031I 1 added rows had average density of 19
Cbc0013I At root node, 1 cuts changed objective from 1.0851946 to 4 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 56 row cuts average 10.0 elements, 26 column cuts (26 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 14 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective 4, took 154 iterations and 0 nodes (3.45 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Cuts at root node changed objective from 1.08519 to 4
Probing was tried 4 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 4 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                4.00000000
Enumerated nodes:               0
Total iterations:               154
Time (CPU seconds):             3.45
Time (Wallclock seconds):       3.49

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.47   (Wallclock seconds):       3.51

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bill
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob

Time slot  1
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bill
install_toilet_b  on object  1 ( room )  with  -
install_toilet_b  on object  1 ( room )  with  Tina
install_kitchen  on object  0 ( room )  with  -
install_kitchen  on object  0 ( room )  with  Sandy
install_kitchen  on object  0 ( room )  with  Kay

Time slot  2

Time slot  3
install_shower_t  on object  1 ( room )  with  -
install_shower_t  on object  1 ( room )  with  Sandy

Time slot  4
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -

Time slot  5

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/314bfc2182264118b484564015d63156-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/314bfc2182264118b484564015d63156-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 4613 COLUMNS
At line 30384 RHS
At line 34993 BOUNDS
At line 36381 ENDATA
Problem MODEL has 4608 rows, 1387 columns and 21510 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.02 seconds
Cgl0003I 27 fixed, 0 tightened bounds, 801 strengthened rows, 237 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 553 strengthened rows, 18 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 704 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 648 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 593 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 561 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 527 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 490 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 459 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 402 strengthened rows, 0 substitutions
Cgl0004I processed model has 826 rows, 243 columns (243 integer (242 of which binary)) and 9376 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 243 objects (242 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 78 integers unsatisfied sum - 8.73051
Cbc0038I Pass   1: suminf.    6.88362 (36) obj. 2.30915 iterations 255
Cbc0038I Pass   2: suminf.    2.33333 (7) obj. 7 iterations 98
Cbc0038I Pass   3: suminf.    2.33333 (7) obj. 7 iterations 12
Cbc0038I Pass   4: suminf.    2.19444 (9) obj. 6.66667 iterations 37
Cbc0038I Pass   5: suminf.    1.67593 (7) obj. 6.66667 iterations 8
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 10 iterations 32
Cbc0038I Solution found of 10
Cbc0038I Cleaned solution of 10
Cbc0038I Before mini branch and bound, 145 integers at bound fixed and 0 continuous
Cbc0038I Full problem 826 rows 243 columns, reduced to 596 rows 79 columns - 4 fixed gives 227, 33 - ok now
Cbc0038I Full problem 826 rows 243 columns, reduced to 227 rows 33 columns
Cbc0038I Mini branch and bound improved solution from 10 to 8 (1.07 seconds)
Cbc0038I Round again with cutoff of 6.40861
Cbc0038I Pass   7: suminf.    6.88362 (36) obj. 2.30915 iterations 0
Cbc0038I Pass   8: suminf.    3.17885 (13) obj. 6.40861 iterations 133
Cbc0038I Pass   9: suminf.    2.43460 (7) obj. 6.40861 iterations 29
Cbc0038I Pass  10: suminf.    1.83818 (9) obj. 6.40861 iterations 10
Cbc0038I Pass  11: suminf.    2.57644 (11) obj. 6.40861 iterations 36
Cbc0038I Pass  12: suminf.    1.33333 (7) obj. 5.88235 iterations 21
Cbc0038I Pass  13: suminf.    2.13314 (7) obj. 6.40861 iterations 32
Cbc0038I Pass  14: suminf.    1.00000 (4) obj. 4 iterations 32
Cbc0038I Pass  15: suminf.    1.00000 (4) obj. 4 iterations 6
Cbc0038I Pass  16: suminf.    1.01587 (4) obj. 4 iterations 11
Cbc0038I Pass  17: suminf.    8.31068 (32) obj. 3.96117 iterations 101
Cbc0038I Pass  18: suminf.    1.57758 (6) obj. 6.40861 iterations 65
Cbc0038I Pass  19: suminf.    1.57758 (6) obj. 6.40861 iterations 3
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 5 iterations 13
Cbc0038I Solution found of 5
Cbc0038I Cleaned solution of 5
Cbc0038I Before mini branch and bound, 133 integers at bound fixed and 0 continuous
Cbc0038I Full problem 826 rows 243 columns, reduced to 633 rows 95 columns - 1 fixed gives 531, 78 - still too large
Cbc0038I Full problem 826 rows 243 columns, reduced to 531 rows 78 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.17 seconds)
Cbc0038I Round again with cutoff of 3.41712
Cbc0038I Pass  21: suminf.    6.88362 (36) obj. 2.30915 iterations 0
Cbc0038I Pass  22: suminf.    6.02185 (17) obj. 3.41712 iterations 85
Cbc0038I Pass  23: suminf.    4.59466 (14) obj. 3.41712 iterations 39
Cbc0038I Pass  24: suminf.    4.55295 (14) obj. 3.41712 iterations 32
Cbc0038I Pass  25: suminf.    4.26257 (16) obj. 3.41712 iterations 23
Cbc0038I Pass  26: suminf.    4.98065 (19) obj. 3.41712 iterations 47
Cbc0038I Pass  27: suminf.    4.82246 (16) obj. 3.41712 iterations 24
Cbc0038I Pass  28: suminf.    2.58288 (12) obj. 3.41712 iterations 38
Cbc0038I Pass  29: suminf.    2.58288 (14) obj. 3.41712 iterations 15
Cbc0038I Pass  30: suminf.    5.07541 (18) obj. 3.41712 iterations 71
Cbc0038I Pass  31: suminf.    8.18924 (37) obj. 3.41712 iterations 80
Cbc0038I Pass  32: suminf.    4.62667 (18) obj. 3 iterations 78
Cbc0038I Pass  33: suminf.    6.81713 (18) obj. 3.41712 iterations 49
Cbc0038I Pass  34: suminf.    4.20000 (15) obj. 3.41712 iterations 33
Cbc0038I Pass  35: suminf.    4.20000 (15) obj. 3.41712 iterations 0
Cbc0038I Pass  36: suminf.    4.53790 (14) obj. 3.41712 iterations 36
Cbc0038I Pass  37: suminf.    3.94973 (14) obj. 3.41712 iterations 31
Cbc0038I Pass  38: suminf.    5.07541 (18) obj. 3.41712 iterations 54
Cbc0038I Pass  39: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  40: suminf.    5.41392 (15) obj. 3.41712 iterations 46
Cbc0038I Pass  41: suminf.    2.58288 (14) obj. 3.41712 iterations 46
Cbc0038I Pass  42: suminf.    2.58288 (14) obj. 3.41712 iterations 2
Cbc0038I Pass  43: suminf.    5.07541 (18) obj. 3.41712 iterations 83
Cbc0038I Pass  44: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  45: suminf.    5.41392 (15) obj. 3.41712 iterations 47
Cbc0038I Pass  46: suminf.    2.58288 (14) obj. 3.41712 iterations 32
Cbc0038I Pass  47: suminf.    2.58288 (14) obj. 3.41712 iterations 11
Cbc0038I Pass  48: suminf.    5.07541 (18) obj. 3.41712 iterations 83
Cbc0038I Pass  49: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  50: suminf.    5.41392 (15) obj. 3.41712 iterations 39
Cbc0038I Pass  51: suminf.    2.58288 (14) obj. 3.41712 iterations 39
Cbc0038I Pass  52: suminf.    2.58288 (14) obj. 3.41712 iterations 18
Cbc0038I Pass  53: suminf.    5.07541 (18) obj. 3.41712 iterations 89
Cbc0038I Pass  54: suminf.    4.82246 (16) obj. 3.41712 iterations 21
Cbc0038I Pass  55: suminf.    5.41392 (15) obj. 3.41712 iterations 47
Cbc0038I Pass  56: suminf.    2.58288 (14) obj. 3.41712 iterations 38
Cbc0038I Pass  57: suminf.    2.58288 (14) obj. 3.41712 iterations 10
Cbc0038I Pass  58: suminf.    5.07541 (18) obj. 3.41712 iterations 87
Cbc0038I Pass  59: suminf.    4.82246 (16) obj. 3.41712 iterations 18
Cbc0038I Pass  60: suminf.    5.37595 (14) obj. 3.41712 iterations 51
Cbc0038I Pass  61: suminf.    2.58288 (14) obj. 3.41712 iterations 31
Cbc0038I Pass  62: suminf.    2.58288 (14) obj. 3.41712 iterations 21
Cbc0038I Pass  63: suminf.    5.07541 (18) obj. 3.41712 iterations 99
Cbc0038I Pass  64: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  65: suminf.    5.41392 (15) obj. 3.41712 iterations 44
Cbc0038I Pass  66: suminf.    2.58288 (14) obj. 3.41712 iterations 39
Cbc0038I Pass  67: suminf.    2.58288 (14) obj. 3.41712 iterations 14
Cbc0038I Pass  68: suminf.    5.03968 (17) obj. 3.41712 iterations 59
Cbc0038I Pass  69: suminf.    4.82246 (16) obj. 3.41712 iterations 19
Cbc0038I Pass  70: suminf.    5.41392 (15) obj. 3.41712 iterations 49
Cbc0038I Pass  71: suminf.    2.58288 (14) obj. 3.41712 iterations 35
Cbc0038I Pass  72: suminf.    2.58288 (14) obj. 3.41712 iterations 23
Cbc0038I Pass  73: suminf.    5.07541 (18) obj. 3.41712 iterations 93
Cbc0038I Pass  74: suminf.    4.82246 (16) obj. 3.41712 iterations 18
Cbc0038I Pass  75: suminf.    5.41392 (15) obj. 3.41712 iterations 42
Cbc0038I Pass  76: suminf.    2.58288 (14) obj. 3.41712 iterations 37
Cbc0038I Pass  77: suminf.    2.58288 (14) obj. 3.41712 iterations 4
Cbc0038I Pass  78: suminf.    5.07541 (18) obj. 3.41712 iterations 73
Cbc0038I Pass  79: suminf.    4.82246 (16) obj. 3.41712 iterations 20
Cbc0038I Pass  80: suminf.    5.41392 (15) obj. 3.41712 iterations 54
Cbc0038I Pass  81: suminf.    2.58288 (14) obj. 3.41712 iterations 34
Cbc0038I Pass  82: suminf.    2.58288 (14) obj. 3.41712 iterations 17
Cbc0038I Pass  83: suminf.    5.07541 (18) obj. 3.41712 iterations 102
Cbc0038I Pass  84: suminf.    4.82246 (16) obj. 3.41712 iterations 19
Cbc0038I Pass  85: suminf.    5.41392 (15) obj. 3.41712 iterations 37
Cbc0038I Pass  86: suminf.    2.58288 (14) obj. 3.41712 iterations 35
Cbc0038I Pass  87: suminf.    2.58288 (14) obj. 3.41712 iterations 10
Cbc0038I Pass  88: suminf.    5.07541 (18) obj. 3.41712 iterations 66
Cbc0038I Pass  89: suminf.    4.82246 (16) obj. 3.41712 iterations 21
Cbc0038I Pass  90: suminf.    5.41392 (15) obj. 3.41712 iterations 42
Cbc0038I Pass  91: suminf.    2.58288 (14) obj. 3.41712 iterations 35
Cbc0038I Pass  92: suminf.    2.58288 (14) obj. 3.41712 iterations 3
Cbc0038I Pass  93: suminf.    5.07541 (18) obj. 3.41712 iterations 82
Cbc0038I Pass  94: suminf.    4.82246 (16) obj. 3.41712 iterations 16
Cbc0038I Pass  95: suminf.    2.60802 (12) obj. 3.41712 iterations 55
Cbc0038I Pass  96: suminf.    7.81268 (31) obj. 3.41712 iterations 123
Cbc0038I Pass  97: suminf.    4.39572 (13) obj. 3.41712 iterations 67
Cbc0038I Pass  98: suminf.    3.15081 (12) obj. 3.41712 iterations 28
Cbc0038I Pass  99: suminf.    2.91608 (14) obj. 2.51748 iterations 25
Cbc0038I Pass 100: suminf.    3.78397 (12) obj. 3.41712 iterations 39
Cbc0038I Pass 101: suminf.    2.19429 (10) obj. 3.41712 iterations 51
Cbc0038I Pass 102: suminf.    2.19429 (10) obj. 3.41712 iterations 14
Cbc0038I Pass 103: suminf.    3.17442 (11) obj. 3.41712 iterations 40
Cbc0038I Pass 104: suminf.    2.91608 (14) obj. 2.51748 iterations 25
Cbc0038I Pass 105: suminf.    3.78397 (12) obj. 3.41712 iterations 37
Cbc0038I Pass 106: suminf.    2.19429 (10) obj. 3.41712 iterations 47
Cbc0038I Pass 107: suminf.    2.19429 (10) obj. 3.41712 iterations 27
Cbc0038I Pass 108: suminf.    3.17442 (11) obj. 3.41712 iterations 46
Cbc0038I Pass 109: suminf.    2.91608 (14) obj. 2.51748 iterations 27
Cbc0038I Pass 110: suminf.    3.78397 (12) obj. 3.41712 iterations 43
Cbc0038I Pass 111: suminf.    2.19429 (10) obj. 3.41712 iterations 47
Cbc0038I Pass 112: suminf.    2.19429 (10) obj. 3.41712 iterations 24
Cbc0038I Pass 113: suminf.    3.17442 (11) obj. 3.41712 iterations 46
Cbc0038I Pass 114: suminf.    2.91608 (14) obj. 2.51748 iterations 29
Cbc0038I Pass 115: suminf.    3.78397 (12) obj. 3.41712 iterations 37
Cbc0038I Pass 116: suminf.    2.19429 (10) obj. 3.41712 iterations 48
Cbc0038I Pass 117: suminf.    2.19429 (10) obj. 3.41712 iterations 24
Cbc0038I Pass 118: suminf.    3.17442 (11) obj. 3.41712 iterations 42
Cbc0038I Pass 119: suminf.    2.91608 (14) obj. 2.51748 iterations 28
Cbc0038I Pass 120: suminf.    6.06942 (24) obj. 3.41712 iterations 95
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 109 integers at bound fixed and 0 continuous
Cbc0038I Full problem 826 rows 243 columns, reduced to 685 rows 117 columns - 1 fixed gives 579, 92 - still too large
Cbc0038I Full problem 826 rows 243 columns, reduced to 579 rows 92 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.38 seconds)
Cbc0038I After 3.38 seconds - Feasibility pump exiting with objective of 5 - took 2.39 seconds
Cbc0012I Integer solution of 5 found by feasibility pump after 0 iterations and 0 nodes (3.38 seconds)
Cbc0038I Full problem 826 rows 243 columns, reduced to 540 rows 68 columns - 1 fixed gives 235, 36 - ok now
Cbc0038I Full problem 826 rows 243 columns, reduced to 75 rows 15 columns
Cbc0012I Integer solution of 4 found by DiveCoefficient after 154 iterations and 0 nodes (3.47 seconds)
Cbc0031I 1 added rows had average density of 19
Cbc0013I At root node, 1 cuts changed objective from 1.0851946 to 4 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 56 row cuts average 10.0 elements, 26 column cuts (26 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 14 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective 4, took 154 iterations and 0 nodes (3.47 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Cuts at root node changed objective from 1.08519 to 4
Probing was tried 4 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Gomory was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 4 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                4.00000000
Enumerated nodes:               0
Total iterations:               154
Time (CPU seconds):             3.46
Time (Wallclock seconds):       3.51

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.48   (Wallclock seconds):       3.53

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bill
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob

Time slot  1
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bill
install_toilet_b  on object  1 ( room )  with  -
install_toilet_b  on object  1 ( room )  with  Tina
install_kitchen  on object  0 ( room )  with  -
install_kitchen  on object  0 ( room )  with  Sandy
install_kitchen  on object  0 ( room )  with  Kay

Time slot  2

Time slot  3
install_shower_t  on object  1 ( room )  with  -
install_shower_t  on object  1 ( room )  with  Sandy

Time slot  4
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -

Time slot  5

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
