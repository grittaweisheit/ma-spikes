Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ad3c76aeba124ee8a5d1af49b1622359-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/ad3c76aeba124ee8a5d1af49b1622359-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 3988 COLUMNS
At line 26012 RHS
At line 29996 BOUNDS
At line 31153 ENDATA
Problem MODEL has 3983 rows, 1156 columns and 18456 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.01 seconds
Cgl0003I 27 fixed, 0 tightened bounds, 742 strengthened rows, 238 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 555 strengthened rows, 13 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 645 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 624 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 581 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 543 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 505 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 451 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 385 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 286 strengthened rows, 0 substitutions
Cgl0004I processed model has 703 rows, 178 columns (178 integer (177 of which binary)) and 8443 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 178 objects (178 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 55 integers unsatisfied sum - 5.89388
Cbc0038I Pass   1: suminf.    4.50794 (20) obj. 2.77778 iterations 203
Cbc0038I Pass   2: suminf.    3.80000 (11) obj. 4 iterations 20
Cbc0038I Pass   3: suminf.    2.33333 (7) obj. 6.66667 iterations 42
Cbc0038I Pass   4: suminf.    1.50000 (3) obj. 5 iterations 28
Cbc0038I Pass   5: suminf.    1.00000 (2) obj. 5 iterations 18
Cbc0038I Pass   6: suminf.    1.00000 (2) obj. 5 iterations 3
Cbc0038I Pass   7: suminf.    1.00000 (2) obj. 5 iterations 17
Cbc0038I Pass   8: suminf.    2.91429 (12) obj. 5.14286 iterations 93
Cbc0038I Pass   9: suminf.    2.04167 (8) obj. 6.25 iterations 44
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 10 iterations 23
Cbc0038I Solution found of 10
Cbc0038I Cleaned solution of 10
Cbc0038I Before mini branch and bound, 108 integers at bound fixed and 0 continuous
Cbc0038I Full problem 703 rows 178 columns, reduced to 532 rows 70 columns - 1 fixed gives 342, 48 - ok now
Cbc0038I Full problem 703 rows 178 columns, reduced to 317 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 10 to 6 (0.80 seconds)
Cbc0038I Round again with cutoff of 4.62055
Cbc0038I Pass  11: suminf.    4.50794 (20) obj. 2.77778 iterations 0
Cbc0038I Pass  12: suminf.    3.80000 (11) obj. 4 iterations 41
Cbc0038I Pass  13: suminf.    4.42763 (14) obj. 4.62055 iterations 46
Cbc0038I Pass  14: suminf.    2.68600 (9) obj. 4.62055 iterations 29
Cbc0038I Pass  15: suminf.    2.30228 (8) obj. 4.62055 iterations 6
Cbc0038I Pass  16: suminf.    2.03614 (10) obj. 4.62055 iterations 51
Cbc0038I Pass  17: suminf.    1.83479 (10) obj. 4.62055 iterations 22
Cbc0038I Pass  18: suminf.    3.86711 (13) obj. 4.62055 iterations 40
Cbc0038I Pass  19: suminf.    2.87803 (14) obj. 4.62055 iterations 33
Cbc0038I Pass  20: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  21: suminf.    3.35312 (10) obj. 4.62055 iterations 26
Cbc0038I Pass  22: suminf.    2.30228 (8) obj. 4.62055 iterations 17
Cbc0038I Pass  23: suminf.    2.33970 (8) obj. 4.62055 iterations 32
Cbc0038I Pass  24: suminf.    1.94863 (10) obj. 4.62055 iterations 31
Cbc0038I Pass  25: suminf.    3.37423 (15) obj. 4.62055 iterations 62
Cbc0038I Pass  26: suminf.    2.87803 (14) obj. 4.62055 iterations 33
Cbc0038I Pass  27: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  28: suminf.    3.35312 (10) obj. 4.62055 iterations 31
Cbc0038I Pass  29: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  30: suminf.    2.33970 (8) obj. 4.62055 iterations 42
Cbc0038I Pass  31: suminf.    1.94863 (10) obj. 4.62055 iterations 36
Cbc0038I Pass  32: suminf.    3.37423 (15) obj. 4.62055 iterations 74
Cbc0038I Pass  33: suminf.    2.87803 (14) obj. 4.62055 iterations 30
Cbc0038I Pass  34: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  35: suminf.    3.35312 (10) obj. 4.62055 iterations 29
Cbc0038I Pass  36: suminf.    2.30228 (8) obj. 4.62055 iterations 19
Cbc0038I Pass  37: suminf.    2.33970 (8) obj. 4.62055 iterations 35
Cbc0038I Pass  38: suminf.    1.94863 (10) obj. 4.62055 iterations 34
Cbc0038I Pass  39: suminf.    3.37423 (15) obj. 4.62055 iterations 74
Cbc0038I Pass  40: suminf.    2.87803 (14) obj. 4.62055 iterations 31
Cbc0038I Pass  41: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  42: suminf.    3.35312 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  43: suminf.    2.30228 (8) obj. 4.62055 iterations 19
Cbc0038I Pass  44: suminf.    2.33970 (8) obj. 4.62055 iterations 41
Cbc0038I Pass  45: suminf.    1.94863 (10) obj. 4.62055 iterations 33
Cbc0038I Pass  46: suminf.    3.37423 (15) obj. 4.62055 iterations 67
Cbc0038I Pass  47: suminf.    2.87803 (14) obj. 4.62055 iterations 25
Cbc0038I Pass  48: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  49: suminf.    3.35312 (10) obj. 4.62055 iterations 28
Cbc0038I Pass  50: suminf.    2.30228 (8) obj. 4.62055 iterations 20
Cbc0038I Pass  51: suminf.    2.33970 (8) obj. 4.62055 iterations 41
Cbc0038I Pass  52: suminf.    1.94863 (10) obj. 4.62055 iterations 36
Cbc0038I Pass  53: suminf.    3.37423 (15) obj. 4.62055 iterations 66
Cbc0038I Pass  54: suminf.    2.87803 (14) obj. 4.62055 iterations 29
Cbc0038I Pass  55: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  56: suminf.    3.35312 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  57: suminf.    2.30228 (8) obj. 4.62055 iterations 19
Cbc0038I Pass  58: suminf.    2.33970 (8) obj. 4.62055 iterations 34
Cbc0038I Pass  59: suminf.    1.94863 (10) obj. 4.62055 iterations 40
Cbc0038I Pass  60: suminf.    3.37423 (15) obj. 4.62055 iterations 51
Cbc0038I Pass  61: suminf.    2.87803 (14) obj. 4.62055 iterations 34
Cbc0038I Pass  62: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  63: suminf.    3.45994 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  64: suminf.    2.30228 (8) obj. 4.62055 iterations 30
Cbc0038I Pass  65: suminf.    2.03614 (10) obj. 4.62055 iterations 43
Cbc0038I Pass  66: suminf.    1.83479 (10) obj. 4.62055 iterations 22
Cbc0038I Pass  67: suminf.    3.86711 (13) obj. 4.62055 iterations 44
Cbc0038I Pass  68: suminf.    2.87803 (14) obj. 4.62055 iterations 33
Cbc0038I Pass  69: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  70: suminf.    3.35312 (10) obj. 4.62055 iterations 32
Cbc0038I Pass  71: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  72: suminf.    2.33970 (8) obj. 4.62055 iterations 38
Cbc0038I Pass  73: suminf.    1.94863 (10) obj. 4.62055 iterations 44
Cbc0038I Pass  74: suminf.    3.37423 (15) obj. 4.62055 iterations 54
Cbc0038I Pass  75: suminf.    2.87803 (14) obj. 4.62055 iterations 26
Cbc0038I Pass  76: suminf.    2.47834 (12) obj. 4.62055 iterations 8
Cbc0038I Pass  77: suminf.    3.35312 (10) obj. 4.62055 iterations 28
Cbc0038I Pass  78: suminf.    2.30228 (8) obj. 4.62055 iterations 18
Cbc0038I Pass  79: suminf.    2.33970 (8) obj. 4.62055 iterations 38
Cbc0038I Pass  80: suminf.    1.94863 (10) obj. 4.62055 iterations 33
Cbc0038I Pass  81: suminf.    3.37423 (15) obj. 4.62055 iterations 59
Cbc0038I Pass  82: suminf.    2.87803 (14) obj. 4.62055 iterations 27
Cbc0038I Pass  83: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  84: suminf.    3.35312 (10) obj. 4.62055 iterations 34
Cbc0038I Pass  85: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  86: suminf.    2.33970 (8) obj. 4.62055 iterations 32
Cbc0038I Pass  87: suminf.    1.94863 (10) obj. 4.62055 iterations 31
Cbc0038I Pass  88: suminf.    3.37423 (15) obj. 4.62055 iterations 54
Cbc0038I Pass  89: suminf.    2.87803 (14) obj. 4.62055 iterations 27
Cbc0038I Pass  90: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  91: suminf.    3.35312 (10) obj. 4.62055 iterations 29
Cbc0038I Pass  92: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  93: suminf.    2.33970 (8) obj. 4.62055 iterations 48
Cbc0038I Pass  94: suminf.    1.94863 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  95: suminf.    3.37423 (15) obj. 4.62055 iterations 61
Cbc0038I Pass  96: suminf.    2.87803 (14) obj. 4.62055 iterations 35
Cbc0038I Pass  97: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  98: suminf.    3.35312 (10) obj. 4.62055 iterations 30
Cbc0038I Pass  99: suminf.    2.30228 (8) obj. 4.62055 iterations 18
Cbc0038I Pass 100: suminf.    2.33970 (8) obj. 4.62055 iterations 37
Cbc0038I Pass 101: suminf.    1.94863 (10) obj. 4.62055 iterations 35
Cbc0038I Pass 102: suminf.    3.37423 (15) obj. 4.62055 iterations 57
Cbc0038I Pass 103: suminf.    2.87803 (14) obj. 4.62055 iterations 28
Cbc0038I Pass 104: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass 105: suminf.    3.35312 (10) obj. 4.62055 iterations 32
Cbc0038I Pass 106: suminf.    2.30228 (8) obj. 4.62055 iterations 18
Cbc0038I Pass 107: suminf.    2.33970 (8) obj. 4.62055 iterations 37
Cbc0038I Pass 108: suminf.    1.94863 (10) obj. 4.62055 iterations 25
Cbc0038I Pass 109: suminf.    3.37423 (15) obj. 4.62055 iterations 65
Cbc0038I Pass 110: suminf.    5.28521 (22) obj. 4.62055 iterations 51
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 703 rows 178 columns, reduced to 555 rows 76 columns - 2 fixed gives 233, 31 - ok now
Cbc0038I Full problem 703 rows 178 columns, reduced to 136 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (2.05 seconds)
Cbc0038I After 2.05 seconds - Feasibility pump exiting with objective of 6 - took 1.33 seconds
Cbc0012I Integer solution of 6 found by feasibility pump after 0 iterations and 0 nodes (2.05 seconds)
Cbc0038I Full problem 703 rows 178 columns, reduced to 486 rows 59 columns - 4 fixed gives 23, 7 - ok now
Cbc0031I 12 added rows had average density of 9
Cbc0013I At root node, 12 cuts changed objective from 1.2045831 to 3 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 411 row cuts average 10.1 elements, 5 column cuts (5 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 278 row cuts average 54.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 62 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 6 best solution, best possible 3 (2.41 seconds)
Cbc0012I Integer solution of 4 found by rounding after 1223 iterations and 2 nodes (2.43 seconds)
Cbc0001I Search completed - best objective 4, took 1223 iterations and 2 nodes (2.43 seconds)
Cbc0032I Strong branching done 2 times (48 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.20458 to 3
Probing was tried 19 times and created 434 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
Gomory was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Knapsack was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 17 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
FlowCover was tried 17 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 18 times and created 278 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
ZeroHalf was tried 18 times and created 62 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)

Result - Optimal solution found

Objective value:                4.00000000
Enumerated nodes:               2
Total iterations:               1223
Time (CPU seconds):             2.42
Time (Wallclock seconds):       2.46

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.44   (Wallclock seconds):       2.49

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob

Time slot  1
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob
install_kitchen  on object  1 ( room )  with  -
install_kitchen  on object  1 ( room )  with  Sandy
install_kitchen  on object  1 ( room )  with  Kay

Time slot  2
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
install_toilet_b  on object  2 ( room )  with  -
install_toilet_b  on object  2 ( room )  with  Tina

Time slot  3
install_shower_t  on object  2 ( room )  with  -
install_shower_t  on object  2 ( room )  with  Sandy

Time slot  4
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -

Time slot  5

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/ad07e24118c64cbd9b269ff825c6d70d-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/ad07e24118c64cbd9b269ff825c6d70d-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 3988 COLUMNS
At line 26012 RHS
At line 29996 BOUNDS
At line 31153 ENDATA
Problem MODEL has 3983 rows, 1156 columns and 18456 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.01 seconds
Cgl0003I 27 fixed, 0 tightened bounds, 742 strengthened rows, 238 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 555 strengthened rows, 13 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 645 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 624 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 581 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 543 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 505 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 451 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 385 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 286 strengthened rows, 0 substitutions
Cgl0004I processed model has 703 rows, 178 columns (178 integer (177 of which binary)) and 8443 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 178 objects (178 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 55 integers unsatisfied sum - 5.89388
Cbc0038I Pass   1: suminf.    4.50794 (20) obj. 2.77778 iterations 203
Cbc0038I Pass   2: suminf.    3.80000 (11) obj. 4 iterations 20
Cbc0038I Pass   3: suminf.    2.33333 (7) obj. 6.66667 iterations 42
Cbc0038I Pass   4: suminf.    1.50000 (3) obj. 5 iterations 28
Cbc0038I Pass   5: suminf.    1.00000 (2) obj. 5 iterations 18
Cbc0038I Pass   6: suminf.    1.00000 (2) obj. 5 iterations 3
Cbc0038I Pass   7: suminf.    1.00000 (2) obj. 5 iterations 17
Cbc0038I Pass   8: suminf.    2.91429 (12) obj. 5.14286 iterations 93
Cbc0038I Pass   9: suminf.    2.04167 (8) obj. 6.25 iterations 44
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 10 iterations 23
Cbc0038I Solution found of 10
Cbc0038I Cleaned solution of 10
Cbc0038I Before mini branch and bound, 108 integers at bound fixed and 0 continuous
Cbc0038I Full problem 703 rows 178 columns, reduced to 532 rows 70 columns - 1 fixed gives 342, 48 - ok now
Cbc0038I Full problem 703 rows 178 columns, reduced to 317 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 10 to 6 (0.82 seconds)
Cbc0038I Round again with cutoff of 4.62055
Cbc0038I Pass  11: suminf.    4.50794 (20) obj. 2.77778 iterations 0
Cbc0038I Pass  12: suminf.    3.80000 (11) obj. 4 iterations 41
Cbc0038I Pass  13: suminf.    4.42763 (14) obj. 4.62055 iterations 46
Cbc0038I Pass  14: suminf.    2.68600 (9) obj. 4.62055 iterations 29
Cbc0038I Pass  15: suminf.    2.30228 (8) obj. 4.62055 iterations 6
Cbc0038I Pass  16: suminf.    2.03614 (10) obj. 4.62055 iterations 51
Cbc0038I Pass  17: suminf.    1.83479 (10) obj. 4.62055 iterations 22
Cbc0038I Pass  18: suminf.    3.86711 (13) obj. 4.62055 iterations 40
Cbc0038I Pass  19: suminf.    2.87803 (14) obj. 4.62055 iterations 33
Cbc0038I Pass  20: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  21: suminf.    3.35312 (10) obj. 4.62055 iterations 26
Cbc0038I Pass  22: suminf.    2.30228 (8) obj. 4.62055 iterations 17
Cbc0038I Pass  23: suminf.    2.33970 (8) obj. 4.62055 iterations 32
Cbc0038I Pass  24: suminf.    1.94863 (10) obj. 4.62055 iterations 31
Cbc0038I Pass  25: suminf.    3.37423 (15) obj. 4.62055 iterations 62
Cbc0038I Pass  26: suminf.    2.87803 (14) obj. 4.62055 iterations 33
Cbc0038I Pass  27: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  28: suminf.    3.35312 (10) obj. 4.62055 iterations 31
Cbc0038I Pass  29: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  30: suminf.    2.33970 (8) obj. 4.62055 iterations 42
Cbc0038I Pass  31: suminf.    1.94863 (10) obj. 4.62055 iterations 36
Cbc0038I Pass  32: suminf.    3.37423 (15) obj. 4.62055 iterations 74
Cbc0038I Pass  33: suminf.    2.87803 (14) obj. 4.62055 iterations 30
Cbc0038I Pass  34: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  35: suminf.    3.35312 (10) obj. 4.62055 iterations 29
Cbc0038I Pass  36: suminf.    2.30228 (8) obj. 4.62055 iterations 19
Cbc0038I Pass  37: suminf.    2.33970 (8) obj. 4.62055 iterations 35
Cbc0038I Pass  38: suminf.    1.94863 (10) obj. 4.62055 iterations 34
Cbc0038I Pass  39: suminf.    3.37423 (15) obj. 4.62055 iterations 74
Cbc0038I Pass  40: suminf.    2.87803 (14) obj. 4.62055 iterations 31
Cbc0038I Pass  41: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  42: suminf.    3.35312 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  43: suminf.    2.30228 (8) obj. 4.62055 iterations 19
Cbc0038I Pass  44: suminf.    2.33970 (8) obj. 4.62055 iterations 41
Cbc0038I Pass  45: suminf.    1.94863 (10) obj. 4.62055 iterations 33
Cbc0038I Pass  46: suminf.    3.37423 (15) obj. 4.62055 iterations 67
Cbc0038I Pass  47: suminf.    2.87803 (14) obj. 4.62055 iterations 25
Cbc0038I Pass  48: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  49: suminf.    3.35312 (10) obj. 4.62055 iterations 28
Cbc0038I Pass  50: suminf.    2.30228 (8) obj. 4.62055 iterations 20
Cbc0038I Pass  51: suminf.    2.33970 (8) obj. 4.62055 iterations 41
Cbc0038I Pass  52: suminf.    1.94863 (10) obj. 4.62055 iterations 36
Cbc0038I Pass  53: suminf.    3.37423 (15) obj. 4.62055 iterations 66
Cbc0038I Pass  54: suminf.    2.87803 (14) obj. 4.62055 iterations 29
Cbc0038I Pass  55: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  56: suminf.    3.35312 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  57: suminf.    2.30228 (8) obj. 4.62055 iterations 19
Cbc0038I Pass  58: suminf.    2.33970 (8) obj. 4.62055 iterations 34
Cbc0038I Pass  59: suminf.    1.94863 (10) obj. 4.62055 iterations 40
Cbc0038I Pass  60: suminf.    3.37423 (15) obj. 4.62055 iterations 51
Cbc0038I Pass  61: suminf.    2.87803 (14) obj. 4.62055 iterations 34
Cbc0038I Pass  62: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  63: suminf.    3.45994 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  64: suminf.    2.30228 (8) obj. 4.62055 iterations 30
Cbc0038I Pass  65: suminf.    2.03614 (10) obj. 4.62055 iterations 43
Cbc0038I Pass  66: suminf.    1.83479 (10) obj. 4.62055 iterations 22
Cbc0038I Pass  67: suminf.    3.86711 (13) obj. 4.62055 iterations 44
Cbc0038I Pass  68: suminf.    2.87803 (14) obj. 4.62055 iterations 33
Cbc0038I Pass  69: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  70: suminf.    3.35312 (10) obj. 4.62055 iterations 32
Cbc0038I Pass  71: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  72: suminf.    2.33970 (8) obj. 4.62055 iterations 38
Cbc0038I Pass  73: suminf.    1.94863 (10) obj. 4.62055 iterations 44
Cbc0038I Pass  74: suminf.    3.37423 (15) obj. 4.62055 iterations 54
Cbc0038I Pass  75: suminf.    2.87803 (14) obj. 4.62055 iterations 26
Cbc0038I Pass  76: suminf.    2.47834 (12) obj. 4.62055 iterations 8
Cbc0038I Pass  77: suminf.    3.35312 (10) obj. 4.62055 iterations 28
Cbc0038I Pass  78: suminf.    2.30228 (8) obj. 4.62055 iterations 18
Cbc0038I Pass  79: suminf.    2.33970 (8) obj. 4.62055 iterations 38
Cbc0038I Pass  80: suminf.    1.94863 (10) obj. 4.62055 iterations 33
Cbc0038I Pass  81: suminf.    3.37423 (15) obj. 4.62055 iterations 59
Cbc0038I Pass  82: suminf.    2.87803 (14) obj. 4.62055 iterations 27
Cbc0038I Pass  83: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  84: suminf.    3.35312 (10) obj. 4.62055 iterations 34
Cbc0038I Pass  85: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  86: suminf.    2.33970 (8) obj. 4.62055 iterations 32
Cbc0038I Pass  87: suminf.    1.94863 (10) obj. 4.62055 iterations 31
Cbc0038I Pass  88: suminf.    3.37423 (15) obj. 4.62055 iterations 54
Cbc0038I Pass  89: suminf.    2.87803 (14) obj. 4.62055 iterations 27
Cbc0038I Pass  90: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  91: suminf.    3.35312 (10) obj. 4.62055 iterations 29
Cbc0038I Pass  92: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  93: suminf.    2.33970 (8) obj. 4.62055 iterations 48
Cbc0038I Pass  94: suminf.    1.94863 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  95: suminf.    3.37423 (15) obj. 4.62055 iterations 61
Cbc0038I Pass  96: suminf.    2.87803 (14) obj. 4.62055 iterations 35
Cbc0038I Pass  97: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  98: suminf.    3.35312 (10) obj. 4.62055 iterations 30
Cbc0038I Pass  99: suminf.    2.30228 (8) obj. 4.62055 iterations 18
Cbc0038I Pass 100: suminf.    2.33970 (8) obj. 4.62055 iterations 37
Cbc0038I Pass 101: suminf.    1.94863 (10) obj. 4.62055 iterations 35
Cbc0038I Pass 102: suminf.    3.37423 (15) obj. 4.62055 iterations 57
Cbc0038I Pass 103: suminf.    2.87803 (14) obj. 4.62055 iterations 28
Cbc0038I Pass 104: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass 105: suminf.    3.35312 (10) obj. 4.62055 iterations 32
Cbc0038I Pass 106: suminf.    2.30228 (8) obj. 4.62055 iterations 18
Cbc0038I Pass 107: suminf.    2.33970 (8) obj. 4.62055 iterations 37
Cbc0038I Pass 108: suminf.    1.94863 (10) obj. 4.62055 iterations 25
Cbc0038I Pass 109: suminf.    3.37423 (15) obj. 4.62055 iterations 65
Cbc0038I Pass 110: suminf.    5.28521 (22) obj. 4.62055 iterations 51
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 703 rows 178 columns, reduced to 555 rows 76 columns - 2 fixed gives 233, 31 - ok now
Cbc0038I Full problem 703 rows 178 columns, reduced to 136 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (2.08 seconds)
Cbc0038I After 2.08 seconds - Feasibility pump exiting with objective of 6 - took 1.36 seconds
Cbc0012I Integer solution of 6 found by feasibility pump after 0 iterations and 0 nodes (2.08 seconds)
Cbc0038I Full problem 703 rows 178 columns, reduced to 486 rows 59 columns - 4 fixed gives 23, 7 - ok now
Cbc0031I 12 added rows had average density of 9
Cbc0013I At root node, 12 cuts changed objective from 1.2045831 to 3 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 411 row cuts average 10.1 elements, 5 column cuts (5 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 278 row cuts average 54.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 62 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 6 best solution, best possible 3 (2.44 seconds)
Cbc0012I Integer solution of 4 found by rounding after 1223 iterations and 2 nodes (2.46 seconds)
Cbc0001I Search completed - best objective 4, took 1223 iterations and 2 nodes (2.46 seconds)
Cbc0032I Strong branching done 2 times (48 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.20458 to 3
Probing was tried 19 times and created 434 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
Gomory was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Knapsack was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 17 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
FlowCover was tried 17 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 18 times and created 278 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
ZeroHalf was tried 18 times and created 62 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)

Result - Optimal solution found

Objective value:                4.00000000
Enumerated nodes:               2
Total iterations:               1223
Time (CPU seconds):             2.42
Time (Wallclock seconds):       2.49

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.45   (Wallclock seconds):       2.51

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob

Time slot  1
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob
install_kitchen  on object  1 ( room )  with  -
install_kitchen  on object  1 ( room )  with  Sandy
install_kitchen  on object  1 ( room )  with  Kay

Time slot  2
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
install_toilet_b  on object  2 ( room )  with  -
install_toilet_b  on object  2 ( room )  with  Tina

Time slot  3
install_shower_t  on object  2 ( room )  with  -
install_shower_t  on object  2 ( room )  with  Sandy

Time slot  4
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -

Time slot  5

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/e76094e870bc40c9bdcea6583340da57-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/e76094e870bc40c9bdcea6583340da57-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 3988 COLUMNS
At line 26012 RHS
At line 29996 BOUNDS
At line 31153 ENDATA
Problem MODEL has 3983 rows, 1156 columns and 18456 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.242191 - 0.02 seconds
Cgl0003I 27 fixed, 0 tightened bounds, 742 strengthened rows, 238 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 555 strengthened rows, 13 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 645 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 624 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 581 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 543 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 505 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 451 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 385 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 286 strengthened rows, 0 substitutions
Cgl0004I processed model has 703 rows, 178 columns (178 integer (177 of which binary)) and 8443 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 178 objects (178 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 55 integers unsatisfied sum - 5.89388
Cbc0038I Pass   1: suminf.    4.50794 (20) obj. 2.77778 iterations 203
Cbc0038I Pass   2: suminf.    3.80000 (11) obj. 4 iterations 20
Cbc0038I Pass   3: suminf.    2.33333 (7) obj. 6.66667 iterations 42
Cbc0038I Pass   4: suminf.    1.50000 (3) obj. 5 iterations 28
Cbc0038I Pass   5: suminf.    1.00000 (2) obj. 5 iterations 18
Cbc0038I Pass   6: suminf.    1.00000 (2) obj. 5 iterations 3
Cbc0038I Pass   7: suminf.    1.00000 (2) obj. 5 iterations 17
Cbc0038I Pass   8: suminf.    2.91429 (12) obj. 5.14286 iterations 93
Cbc0038I Pass   9: suminf.    2.04167 (8) obj. 6.25 iterations 44
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 10 iterations 23
Cbc0038I Solution found of 10
Cbc0038I Cleaned solution of 10
Cbc0038I Before mini branch and bound, 108 integers at bound fixed and 0 continuous
Cbc0038I Full problem 703 rows 178 columns, reduced to 532 rows 70 columns - 1 fixed gives 342, 48 - ok now
Cbc0038I Full problem 703 rows 178 columns, reduced to 317 rows 44 columns
Cbc0038I Mini branch and bound improved solution from 10 to 6 (0.81 seconds)
Cbc0038I Round again with cutoff of 4.62055
Cbc0038I Pass  11: suminf.    4.50794 (20) obj. 2.77778 iterations 0
Cbc0038I Pass  12: suminf.    3.80000 (11) obj. 4 iterations 41
Cbc0038I Pass  13: suminf.    4.42763 (14) obj. 4.62055 iterations 46
Cbc0038I Pass  14: suminf.    2.68600 (9) obj. 4.62055 iterations 29
Cbc0038I Pass  15: suminf.    2.30228 (8) obj. 4.62055 iterations 6
Cbc0038I Pass  16: suminf.    2.03614 (10) obj. 4.62055 iterations 51
Cbc0038I Pass  17: suminf.    1.83479 (10) obj. 4.62055 iterations 22
Cbc0038I Pass  18: suminf.    3.86711 (13) obj. 4.62055 iterations 40
Cbc0038I Pass  19: suminf.    2.87803 (14) obj. 4.62055 iterations 33
Cbc0038I Pass  20: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  21: suminf.    3.35312 (10) obj. 4.62055 iterations 26
Cbc0038I Pass  22: suminf.    2.30228 (8) obj. 4.62055 iterations 17
Cbc0038I Pass  23: suminf.    2.33970 (8) obj. 4.62055 iterations 32
Cbc0038I Pass  24: suminf.    1.94863 (10) obj. 4.62055 iterations 31
Cbc0038I Pass  25: suminf.    3.37423 (15) obj. 4.62055 iterations 62
Cbc0038I Pass  26: suminf.    2.87803 (14) obj. 4.62055 iterations 33
Cbc0038I Pass  27: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  28: suminf.    3.35312 (10) obj. 4.62055 iterations 31
Cbc0038I Pass  29: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  30: suminf.    2.33970 (8) obj. 4.62055 iterations 42
Cbc0038I Pass  31: suminf.    1.94863 (10) obj. 4.62055 iterations 36
Cbc0038I Pass  32: suminf.    3.37423 (15) obj. 4.62055 iterations 74
Cbc0038I Pass  33: suminf.    2.87803 (14) obj. 4.62055 iterations 30
Cbc0038I Pass  34: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  35: suminf.    3.35312 (10) obj. 4.62055 iterations 29
Cbc0038I Pass  36: suminf.    2.30228 (8) obj. 4.62055 iterations 19
Cbc0038I Pass  37: suminf.    2.33970 (8) obj. 4.62055 iterations 35
Cbc0038I Pass  38: suminf.    1.94863 (10) obj. 4.62055 iterations 34
Cbc0038I Pass  39: suminf.    3.37423 (15) obj. 4.62055 iterations 74
Cbc0038I Pass  40: suminf.    2.87803 (14) obj. 4.62055 iterations 31
Cbc0038I Pass  41: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  42: suminf.    3.35312 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  43: suminf.    2.30228 (8) obj. 4.62055 iterations 19
Cbc0038I Pass  44: suminf.    2.33970 (8) obj. 4.62055 iterations 41
Cbc0038I Pass  45: suminf.    1.94863 (10) obj. 4.62055 iterations 33
Cbc0038I Pass  46: suminf.    3.37423 (15) obj. 4.62055 iterations 67
Cbc0038I Pass  47: suminf.    2.87803 (14) obj. 4.62055 iterations 25
Cbc0038I Pass  48: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  49: suminf.    3.35312 (10) obj. 4.62055 iterations 28
Cbc0038I Pass  50: suminf.    2.30228 (8) obj. 4.62055 iterations 20
Cbc0038I Pass  51: suminf.    2.33970 (8) obj. 4.62055 iterations 41
Cbc0038I Pass  52: suminf.    1.94863 (10) obj. 4.62055 iterations 36
Cbc0038I Pass  53: suminf.    3.37423 (15) obj. 4.62055 iterations 66
Cbc0038I Pass  54: suminf.    2.87803 (14) obj. 4.62055 iterations 29
Cbc0038I Pass  55: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  56: suminf.    3.35312 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  57: suminf.    2.30228 (8) obj. 4.62055 iterations 19
Cbc0038I Pass  58: suminf.    2.33970 (8) obj. 4.62055 iterations 34
Cbc0038I Pass  59: suminf.    1.94863 (10) obj. 4.62055 iterations 40
Cbc0038I Pass  60: suminf.    3.37423 (15) obj. 4.62055 iterations 51
Cbc0038I Pass  61: suminf.    2.87803 (14) obj. 4.62055 iterations 34
Cbc0038I Pass  62: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  63: suminf.    3.45994 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  64: suminf.    2.30228 (8) obj. 4.62055 iterations 30
Cbc0038I Pass  65: suminf.    2.03614 (10) obj. 4.62055 iterations 43
Cbc0038I Pass  66: suminf.    1.83479 (10) obj. 4.62055 iterations 22
Cbc0038I Pass  67: suminf.    3.86711 (13) obj. 4.62055 iterations 44
Cbc0038I Pass  68: suminf.    2.87803 (14) obj. 4.62055 iterations 33
Cbc0038I Pass  69: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  70: suminf.    3.35312 (10) obj. 4.62055 iterations 32
Cbc0038I Pass  71: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  72: suminf.    2.33970 (8) obj. 4.62055 iterations 38
Cbc0038I Pass  73: suminf.    1.94863 (10) obj. 4.62055 iterations 44
Cbc0038I Pass  74: suminf.    3.37423 (15) obj. 4.62055 iterations 54
Cbc0038I Pass  75: suminf.    2.87803 (14) obj. 4.62055 iterations 26
Cbc0038I Pass  76: suminf.    2.47834 (12) obj. 4.62055 iterations 8
Cbc0038I Pass  77: suminf.    3.35312 (10) obj. 4.62055 iterations 28
Cbc0038I Pass  78: suminf.    2.30228 (8) obj. 4.62055 iterations 18
Cbc0038I Pass  79: suminf.    2.33970 (8) obj. 4.62055 iterations 38
Cbc0038I Pass  80: suminf.    1.94863 (10) obj. 4.62055 iterations 33
Cbc0038I Pass  81: suminf.    3.37423 (15) obj. 4.62055 iterations 59
Cbc0038I Pass  82: suminf.    2.87803 (14) obj. 4.62055 iterations 27
Cbc0038I Pass  83: suminf.    2.47834 (12) obj. 4.62055 iterations 6
Cbc0038I Pass  84: suminf.    3.35312 (10) obj. 4.62055 iterations 34
Cbc0038I Pass  85: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  86: suminf.    2.33970 (8) obj. 4.62055 iterations 32
Cbc0038I Pass  87: suminf.    1.94863 (10) obj. 4.62055 iterations 31
Cbc0038I Pass  88: suminf.    3.37423 (15) obj. 4.62055 iterations 54
Cbc0038I Pass  89: suminf.    2.87803 (14) obj. 4.62055 iterations 27
Cbc0038I Pass  90: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  91: suminf.    3.35312 (10) obj. 4.62055 iterations 29
Cbc0038I Pass  92: suminf.    2.30228 (8) obj. 4.62055 iterations 21
Cbc0038I Pass  93: suminf.    2.33970 (8) obj. 4.62055 iterations 48
Cbc0038I Pass  94: suminf.    1.94863 (10) obj. 4.62055 iterations 35
Cbc0038I Pass  95: suminf.    3.37423 (15) obj. 4.62055 iterations 61
Cbc0038I Pass  96: suminf.    2.87803 (14) obj. 4.62055 iterations 35
Cbc0038I Pass  97: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass  98: suminf.    3.35312 (10) obj. 4.62055 iterations 30
Cbc0038I Pass  99: suminf.    2.30228 (8) obj. 4.62055 iterations 18
Cbc0038I Pass 100: suminf.    2.33970 (8) obj. 4.62055 iterations 37
Cbc0038I Pass 101: suminf.    1.94863 (10) obj. 4.62055 iterations 35
Cbc0038I Pass 102: suminf.    3.37423 (15) obj. 4.62055 iterations 57
Cbc0038I Pass 103: suminf.    2.87803 (14) obj. 4.62055 iterations 28
Cbc0038I Pass 104: suminf.    2.47834 (12) obj. 4.62055 iterations 7
Cbc0038I Pass 105: suminf.    3.35312 (10) obj. 4.62055 iterations 32
Cbc0038I Pass 106: suminf.    2.30228 (8) obj. 4.62055 iterations 18
Cbc0038I Pass 107: suminf.    2.33970 (8) obj. 4.62055 iterations 37
Cbc0038I Pass 108: suminf.    1.94863 (10) obj. 4.62055 iterations 25
Cbc0038I Pass 109: suminf.    3.37423 (15) obj. 4.62055 iterations 65
Cbc0038I Pass 110: suminf.    5.28521 (22) obj. 4.62055 iterations 51
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 703 rows 178 columns, reduced to 555 rows 76 columns - 2 fixed gives 233, 31 - ok now
Cbc0038I Full problem 703 rows 178 columns, reduced to 136 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (2.06 seconds)
Cbc0038I After 2.06 seconds - Feasibility pump exiting with objective of 6 - took 1.34 seconds
Cbc0012I Integer solution of 6 found by feasibility pump after 0 iterations and 0 nodes (2.06 seconds)
Cbc0038I Full problem 703 rows 178 columns, reduced to 486 rows 59 columns - 4 fixed gives 23, 7 - ok now
Cbc0031I 12 added rows had average density of 9
Cbc0013I At root node, 12 cuts changed objective from 1.2045831 to 3 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 411 row cuts average 10.1 elements, 5 column cuts (5 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 278 row cuts average 54.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 62 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 6 best solution, best possible 3 (2.41 seconds)
Cbc0012I Integer solution of 4 found by rounding after 1223 iterations and 2 nodes (2.43 seconds)
Cbc0001I Search completed - best objective 4, took 1223 iterations and 2 nodes (2.43 seconds)
Cbc0032I Strong branching done 2 times (48 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.20458 to 3
Probing was tried 19 times and created 434 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
Gomory was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Knapsack was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 17 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
FlowCover was tried 17 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 18 times and created 278 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
ZeroHalf was tried 18 times and created 62 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)

Result - Optimal solution found

Objective value:                4.00000000
Enumerated nodes:               2
Total iterations:               1223
Time (CPU seconds):             2.44
Time (Wallclock seconds):       2.46

Option for printingOptions changed from normal to all
Total time (CPU seconds):       2.46   (Wallclock seconds):       2.48

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob

Time slot  1
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob
install_kitchen  on object  1 ( room )  with  -
install_kitchen  on object  1 ( room )  with  Sandy
install_kitchen  on object  1 ( room )  with  Kay

Time slot  2
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
install_toilet_b  on object  2 ( room )  with  -
install_toilet_b  on object  2 ( room )  with  Tina

Time slot  3
install_shower_t  on object  2 ( room )  with  -
install_shower_t  on object  2 ( room )  with  Sandy

Time slot  4
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -

Time slot  5

Time slot  6

Time slot  7

Time slot  8

Time slot  9

Time slot  10
