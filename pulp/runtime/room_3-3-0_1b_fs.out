Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/a1164dcc4afd435a89b6cba6d782f1cf-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/a1164dcc4afd435a89b6cba6d782f1cf-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 6949 COLUMNS
At line 54857 RHS
At line 61802 BOUNDS
At line 64114 ENDATA
Problem MODEL has 6944 rows, 2311 columns and 40776 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.313141 - 0.04 seconds
Cgl0003I 50 fixed, 0 tightened bounds, 1361 strengthened rows, 688 substitutions
Cgl0003I 4 fixed, 0 tightened bounds, 930 strengthened rows, 44 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 865 strengthened rows, 50 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1114 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1071 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 981 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 924 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 840 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 694 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 542 strengthened rows, 0 substitutions
Cgl0004I processed model has 1270 rows, 336 columns (336 integer (335 of which binary)) and 16716 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 336 objects (336 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 161 integers unsatisfied sum - 14.0079
Cbc0038I Pass   1: suminf.   10.47110 (69) obj. 1.89195 iterations 517
Cbc0038I Pass   2: suminf.    8.19365 (38) obj. 3 iterations 168
Cbc0038I Pass   3: suminf.    6.85714 (14) obj. 5 iterations 123
Cbc0038I Pass   4: suminf.    3.51613 (18) obj. 8.14516 iterations 242
Cbc0038I Pass   5: suminf.    2.96182 (10) obj. 8 iterations 25
Cbc0038I Pass   6: suminf.    1.46984 (12) obj. 8 iterations 145
Cbc0038I Pass   7: suminf.    1.13333 (7) obj. 8 iterations 55
Cbc0038I Pass   8: suminf.    1.02222 (6) obj. 8 iterations 62
Cbc0038I Pass   9: suminf.    1.02222 (6) obj. 8 iterations 71
Cbc0038I Pass  10: suminf.    9.97218 (38) obj. 7.78952 iterations 197
Cbc0038I Pass  11: suminf.    2.00000 (10) obj. 8 iterations 160
Cbc0038I Pass  12: suminf.    1.60000 (8) obj. 8 iterations 147
Cbc0038I Pass  13: suminf.    1.20000 (6) obj. 8 iterations 60
Cbc0038I Pass  14: suminf.    1.24000 (7) obj. 8 iterations 62
Cbc0038I Pass  15: suminf.    1.20000 (6) obj. 8 iterations 42
Cbc0038I Pass  16: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  17: suminf.    1.20000 (6) obj. 8 iterations 74
Cbc0038I Pass  18: suminf.    1.20000 (6) obj. 8 iterations 23
Cbc0038I Pass  19: suminf.    1.20000 (6) obj. 8 iterations 56
Cbc0038I Pass  20: suminf.    1.24000 (7) obj. 8 iterations 86
Cbc0038I Pass  21: suminf.    1.20000 (6) obj. 8 iterations 33
Cbc0038I Pass  22: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  23: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  24: suminf.    1.20000 (6) obj. 8 iterations 37
Cbc0038I Pass  25: suminf.    1.20000 (6) obj. 8 iterations 75
Cbc0038I Pass  26: suminf.    1.24000 (7) obj. 8 iterations 101
Cbc0038I Pass  27: suminf.    1.20000 (6) obj. 8 iterations 37
Cbc0038I Pass  28: suminf.    1.20000 (6) obj. 8 iterations 52
Cbc0038I Pass  29: suminf.    1.20000 (6) obj. 8 iterations 81
Cbc0038I Pass  30: suminf.    1.20000 (6) obj. 8 iterations 23
Cbc0038I Pass  31: suminf.    1.20000 (6) obj. 8 iterations 79
Cbc0038I Pass  32: suminf.    1.24000 (7) obj. 8 iterations 89
Cbc0038I Pass  33: suminf.    1.20000 (6) obj. 8 iterations 34
Cbc0038I Pass  34: suminf.    1.20000 (6) obj. 8 iterations 70
Cbc0038I Pass  35: suminf.    1.20000 (6) obj. 8 iterations 103
Cbc0038I Pass  36: suminf.    1.20000 (6) obj. 8 iterations 15
Cbc0038I Pass  37: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  38: suminf.    1.24000 (7) obj. 8 iterations 88
Cbc0038I Pass  39: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  40: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  41: suminf.    1.20000 (6) obj. 8 iterations 96
Cbc0038I Pass  42: suminf.    1.20000 (6) obj. 8 iterations 14
Cbc0038I Pass  43: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  44: suminf.    1.24000 (7) obj. 8 iterations 100
Cbc0038I Pass  45: suminf.    1.20000 (6) obj. 8 iterations 32
Cbc0038I Pass  46: suminf.    1.20000 (6) obj. 8 iterations 77
Cbc0038I Pass  47: suminf.    1.20000 (6) obj. 8 iterations 68
Cbc0038I Pass  48: suminf.    1.20000 (6) obj. 8 iterations 36
Cbc0038I Pass  49: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  50: suminf.    1.24000 (7) obj. 8 iterations 100
Cbc0038I Pass  51: suminf.    1.20000 (6) obj. 8 iterations 43
Cbc0038I Pass  52: suminf.    1.20000 (6) obj. 8 iterations 49
Cbc0038I Pass  53: suminf.    1.20000 (6) obj. 8 iterations 90
Cbc0038I Pass  54: suminf.    1.20000 (6) obj. 8 iterations 36
Cbc0038I Pass  55: suminf.    1.20000 (6) obj. 8 iterations 60
Cbc0038I Pass  56: suminf.    1.24000 (7) obj. 8 iterations 82
Cbc0038I Pass  57: suminf.    1.20000 (6) obj. 8 iterations 41
Cbc0038I Pass  58: suminf.    1.20000 (6) obj. 8 iterations 135
Cbc0038I Pass  59: suminf.    1.20000 (6) obj. 8 iterations 100
Cbc0038I Pass  60: suminf.    1.20000 (6) obj. 8 iterations 24
Cbc0038I Pass  61: suminf.    1.20000 (6) obj. 8 iterations 57
Cbc0038I Pass  62: suminf.    1.24000 (7) obj. 8 iterations 98
Cbc0038I Pass  63: suminf.    1.20000 (6) obj. 8 iterations 45
Cbc0038I Pass  64: suminf.    1.20000 (6) obj. 8 iterations 69
Cbc0038I Pass  65: suminf.    1.20000 (6) obj. 8 iterations 81
Cbc0038I Pass  66: suminf.    1.20000 (6) obj. 8 iterations 38
Cbc0038I Pass  67: suminf.    1.20000 (6) obj. 8 iterations 74
Cbc0038I Pass  68: suminf.    1.24000 (7) obj. 8 iterations 91
Cbc0038I Pass  69: suminf.    1.20000 (6) obj. 8 iterations 45
Cbc0038I Pass  70: suminf.    1.20000 (6) obj. 8 iterations 75
Cbc0038I Pass  71: suminf.    1.20000 (6) obj. 8 iterations 93
Cbc0038I Pass  72: suminf.    1.20000 (6) obj. 8 iterations 19
Cbc0038I Pass  73: suminf.    1.20000 (6) obj. 8 iterations 110
Cbc0038I Pass  74: suminf.    1.24000 (7) obj. 8 iterations 88
Cbc0038I Pass  75: suminf.    1.20000 (6) obj. 8 iterations 32
Cbc0038I Pass  76: suminf.    1.20000 (6) obj. 8 iterations 61
Cbc0038I Pass  77: suminf.    1.20000 (6) obj. 8 iterations 62
Cbc0038I Pass  78: suminf.    1.20000 (6) obj. 8 iterations 22
Cbc0038I Pass  79: suminf.    1.20000 (6) obj. 8 iterations 64
Cbc0038I Pass  80: suminf.    1.24000 (7) obj. 8 iterations 106
Cbc0038I Pass  81: suminf.    1.20000 (6) obj. 8 iterations 36
Cbc0038I Pass  82: suminf.    1.20000 (6) obj. 8 iterations 85
Cbc0038I Pass  83: suminf.    1.20000 (6) obj. 8 iterations 97
Cbc0038I Pass  84: suminf.    1.20000 (6) obj. 8 iterations 29
Cbc0038I Pass  85: suminf.    1.20000 (6) obj. 8 iterations 59
Cbc0038I Pass  86: suminf.    1.24000 (7) obj. 8 iterations 95
Cbc0038I Pass  87: suminf.    1.20000 (6) obj. 8 iterations 37
Cbc0038I Pass  88: suminf.    1.20000 (6) obj. 8 iterations 84
Cbc0038I Pass  89: suminf.    1.20000 (6) obj. 8 iterations 99
Cbc0038I Pass  90: suminf.    1.20000 (6) obj. 8 iterations 27
Cbc0038I Pass  91: suminf.    1.20000 (6) obj. 8 iterations 52
Cbc0038I Pass  92: suminf.    1.24000 (7) obj. 8 iterations 66
Cbc0038I Pass  93: suminf.    1.20000 (6) obj. 8 iterations 35
Cbc0038I Pass  94: suminf.    1.20000 (6) obj. 8 iterations 62
Cbc0038I Pass  95: suminf.    1.20000 (6) obj. 8 iterations 70
Cbc0038I Pass  96: suminf.    1.20000 (6) obj. 8 iterations 13
Cbc0038I Pass  97: suminf.    1.20000 (6) obj. 8 iterations 68
Cbc0038I Pass  98: suminf.    1.24000 (7) obj. 8 iterations 100
Cbc0038I Pass  99: suminf.    1.20000 (6) obj. 8 iterations 40
Cbc0038I Pass 100: suminf.    4.55335 (29) obj. 7.6412 iterations 269
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 132 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1270 rows 336 columns, reduced to 1125 rows 204 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.79 seconds)
Cbc0038I After 3.79 seconds - Feasibility pump exiting - took 1.31 seconds
Cbc0012I Integer solution of 10 found by DiveCoefficient after 44785 iterations and 0 nodes (16.55 seconds)
Cbc0031I 44 added rows had average density of 14.068182
Cbc0013I At root node, 44 cuts changed objective from 1.3163618 to 8.6837607 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9867 row cuts average 8.4 elements, 27 column cuts (27 active)  in 1.342 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1023 row cuts average 162.1 elements, 0 column cuts (0 active)  in 0.471 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 207 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.194 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1160 row cuts average 70.7 elements, 0 column cuts (0 active)  in 0.244 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 791 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.671 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 10 best solution, best possible 9 (17.03 seconds)
Cbc0038I Full problem 1270 rows 336 columns, reduced to 228 rows 52 columns
Cbc0001I Search completed - best objective 10, took 49168 iterations and 8 nodes (19.43 seconds)
Cbc0032I Strong branching done 174 times (8542 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.31636 to 9
Probing was tried 115 times and created 9898 cuts of which 0 were active after adding rounds of cuts (1.375 seconds)
Gomory was tried 115 times and created 1024 cuts of which 0 were active after adding rounds of cuts (0.489 seconds)
Knapsack was tried 115 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.123 seconds)
Clique was tried 115 times and created 213 cuts of which 0 were active after adding rounds of cuts (0.079 seconds)
MixedIntegerRounding2 was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.194 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.117 seconds)
TwoMirCuts was tried 115 times and created 1252 cuts of which 0 were active after adding rounds of cuts (0.294 seconds)
ZeroHalf was tried 115 times and created 893 cuts of which 0 were active after adding rounds of cuts (0.725 seconds)
ImplicationCuts was tried 15 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                10.00000000
Enumerated nodes:               8
Total iterations:               49168
Time (CPU seconds):             19.43
Time (Wallclock seconds):       19.57

Option for printingOptions changed from normal to all
Total time (CPU seconds):       19.47   (Wallclock seconds):       19.62

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  5 ( room )  with  -
build_room  on object  5 ( room )  with  Bob

Time slot  1
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob
install_shower_b  on object  5 ( room )  with  -
install_shower_b  on object  5 ( room )  with  Sandy

Time slot  2
build_room  on object  3 ( room )  with  -
build_room  on object  3 ( room )  with  Bob

Time slot  3
build_room  on object  4 ( room )  with  -
build_room  on object  4 ( room )  with  Bob
install_kitchen  on object  1 ( room )  with  -
install_kitchen  on object  1 ( room )  with  Sandy
install_kitchen  on object  1 ( room )  with  Kay

Time slot  4
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob

Time slot  5
install_shower_b  on object  4 ( room )  with  -
install_shower_b  on object  4 ( room )  with  Sandy
install_toilet_b  on object  2 ( room )  with  -
install_toilet_b  on object  2 ( room )  with  Tina

Time slot  6
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
install_shower_t  on object  2 ( room )  with  -
install_shower_t  on object  2 ( room )  with  Sandy
install_toilet_s  on object  5 ( room )  with  -
install_toilet_s  on object  5 ( room )  with  Tina

Time slot  7
install_toilet_s  on object  4 ( room )  with  -
install_toilet_s  on object  4 ( room )  with  Tina
install_kitchen  on object  3 ( room )  with  -
install_kitchen  on object  3 ( room )  with  Sandy
install_kitchen  on object  3 ( room )  with  Kay

Time slot  8

Time slot  9
install_kitchen  on object  0 ( room )  with  -
install_kitchen  on object  0 ( room )  with  Sandy
install_kitchen  on object  0 ( room )  with  Kay

Time slot  10
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -
finish  on object  3 ( room )  with  -
finish  on object  4 ( room )  with  -
finish  on object  5 ( room )  with  -
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/be9520906b514b1da303dea8e2fce129-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/be9520906b514b1da303dea8e2fce129-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 6949 COLUMNS
At line 54857 RHS
At line 61802 BOUNDS
At line 64114 ENDATA
Problem MODEL has 6944 rows, 2311 columns and 40776 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.313141 - 0.04 seconds
Cgl0003I 50 fixed, 0 tightened bounds, 1361 strengthened rows, 688 substitutions
Cgl0003I 4 fixed, 0 tightened bounds, 930 strengthened rows, 44 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 865 strengthened rows, 50 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1114 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1071 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 981 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 924 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 840 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 694 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 542 strengthened rows, 0 substitutions
Cgl0004I processed model has 1270 rows, 336 columns (336 integer (335 of which binary)) and 16716 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 336 objects (336 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 161 integers unsatisfied sum - 14.0079
Cbc0038I Pass   1: suminf.   10.47110 (69) obj. 1.89195 iterations 517
Cbc0038I Pass   2: suminf.    8.19365 (38) obj. 3 iterations 168
Cbc0038I Pass   3: suminf.    6.85714 (14) obj. 5 iterations 123
Cbc0038I Pass   4: suminf.    3.51613 (18) obj. 8.14516 iterations 242
Cbc0038I Pass   5: suminf.    2.96182 (10) obj. 8 iterations 25
Cbc0038I Pass   6: suminf.    1.46984 (12) obj. 8 iterations 145
Cbc0038I Pass   7: suminf.    1.13333 (7) obj. 8 iterations 55
Cbc0038I Pass   8: suminf.    1.02222 (6) obj. 8 iterations 62
Cbc0038I Pass   9: suminf.    1.02222 (6) obj. 8 iterations 71
Cbc0038I Pass  10: suminf.    9.97218 (38) obj. 7.78952 iterations 197
Cbc0038I Pass  11: suminf.    2.00000 (10) obj. 8 iterations 160
Cbc0038I Pass  12: suminf.    1.60000 (8) obj. 8 iterations 147
Cbc0038I Pass  13: suminf.    1.20000 (6) obj. 8 iterations 60
Cbc0038I Pass  14: suminf.    1.24000 (7) obj. 8 iterations 62
Cbc0038I Pass  15: suminf.    1.20000 (6) obj. 8 iterations 42
Cbc0038I Pass  16: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  17: suminf.    1.20000 (6) obj. 8 iterations 74
Cbc0038I Pass  18: suminf.    1.20000 (6) obj. 8 iterations 23
Cbc0038I Pass  19: suminf.    1.20000 (6) obj. 8 iterations 56
Cbc0038I Pass  20: suminf.    1.24000 (7) obj. 8 iterations 86
Cbc0038I Pass  21: suminf.    1.20000 (6) obj. 8 iterations 33
Cbc0038I Pass  22: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  23: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  24: suminf.    1.20000 (6) obj. 8 iterations 37
Cbc0038I Pass  25: suminf.    1.20000 (6) obj. 8 iterations 75
Cbc0038I Pass  26: suminf.    1.24000 (7) obj. 8 iterations 101
Cbc0038I Pass  27: suminf.    1.20000 (6) obj. 8 iterations 37
Cbc0038I Pass  28: suminf.    1.20000 (6) obj. 8 iterations 52
Cbc0038I Pass  29: suminf.    1.20000 (6) obj. 8 iterations 81
Cbc0038I Pass  30: suminf.    1.20000 (6) obj. 8 iterations 23
Cbc0038I Pass  31: suminf.    1.20000 (6) obj. 8 iterations 79
Cbc0038I Pass  32: suminf.    1.24000 (7) obj. 8 iterations 89
Cbc0038I Pass  33: suminf.    1.20000 (6) obj. 8 iterations 34
Cbc0038I Pass  34: suminf.    1.20000 (6) obj. 8 iterations 70
Cbc0038I Pass  35: suminf.    1.20000 (6) obj. 8 iterations 103
Cbc0038I Pass  36: suminf.    1.20000 (6) obj. 8 iterations 15
Cbc0038I Pass  37: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  38: suminf.    1.24000 (7) obj. 8 iterations 88
Cbc0038I Pass  39: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  40: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  41: suminf.    1.20000 (6) obj. 8 iterations 96
Cbc0038I Pass  42: suminf.    1.20000 (6) obj. 8 iterations 14
Cbc0038I Pass  43: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  44: suminf.    1.24000 (7) obj. 8 iterations 100
Cbc0038I Pass  45: suminf.    1.20000 (6) obj. 8 iterations 32
Cbc0038I Pass  46: suminf.    1.20000 (6) obj. 8 iterations 77
Cbc0038I Pass  47: suminf.    1.20000 (6) obj. 8 iterations 68
Cbc0038I Pass  48: suminf.    1.20000 (6) obj. 8 iterations 36
Cbc0038I Pass  49: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  50: suminf.    1.24000 (7) obj. 8 iterations 100
Cbc0038I Pass  51: suminf.    1.20000 (6) obj. 8 iterations 43
Cbc0038I Pass  52: suminf.    1.20000 (6) obj. 8 iterations 49
Cbc0038I Pass  53: suminf.    1.20000 (6) obj. 8 iterations 90
Cbc0038I Pass  54: suminf.    1.20000 (6) obj. 8 iterations 36
Cbc0038I Pass  55: suminf.    1.20000 (6) obj. 8 iterations 60
Cbc0038I Pass  56: suminf.    1.24000 (7) obj. 8 iterations 82
Cbc0038I Pass  57: suminf.    1.20000 (6) obj. 8 iterations 41
Cbc0038I Pass  58: suminf.    1.20000 (6) obj. 8 iterations 135
Cbc0038I Pass  59: suminf.    1.20000 (6) obj. 8 iterations 100
Cbc0038I Pass  60: suminf.    1.20000 (6) obj. 8 iterations 24
Cbc0038I Pass  61: suminf.    1.20000 (6) obj. 8 iterations 57
Cbc0038I Pass  62: suminf.    1.24000 (7) obj. 8 iterations 98
Cbc0038I Pass  63: suminf.    1.20000 (6) obj. 8 iterations 45
Cbc0038I Pass  64: suminf.    1.20000 (6) obj. 8 iterations 69
Cbc0038I Pass  65: suminf.    1.20000 (6) obj. 8 iterations 81
Cbc0038I Pass  66: suminf.    1.20000 (6) obj. 8 iterations 38
Cbc0038I Pass  67: suminf.    1.20000 (6) obj. 8 iterations 74
Cbc0038I Pass  68: suminf.    1.24000 (7) obj. 8 iterations 91
Cbc0038I Pass  69: suminf.    1.20000 (6) obj. 8 iterations 45
Cbc0038I Pass  70: suminf.    1.20000 (6) obj. 8 iterations 75
Cbc0038I Pass  71: suminf.    1.20000 (6) obj. 8 iterations 93
Cbc0038I Pass  72: suminf.    1.20000 (6) obj. 8 iterations 19
Cbc0038I Pass  73: suminf.    1.20000 (6) obj. 8 iterations 110
Cbc0038I Pass  74: suminf.    1.24000 (7) obj. 8 iterations 88
Cbc0038I Pass  75: suminf.    1.20000 (6) obj. 8 iterations 32
Cbc0038I Pass  76: suminf.    1.20000 (6) obj. 8 iterations 61
Cbc0038I Pass  77: suminf.    1.20000 (6) obj. 8 iterations 62
Cbc0038I Pass  78: suminf.    1.20000 (6) obj. 8 iterations 22
Cbc0038I Pass  79: suminf.    1.20000 (6) obj. 8 iterations 64
Cbc0038I Pass  80: suminf.    1.24000 (7) obj. 8 iterations 106
Cbc0038I Pass  81: suminf.    1.20000 (6) obj. 8 iterations 36
Cbc0038I Pass  82: suminf.    1.20000 (6) obj. 8 iterations 85
Cbc0038I Pass  83: suminf.    1.20000 (6) obj. 8 iterations 97
Cbc0038I Pass  84: suminf.    1.20000 (6) obj. 8 iterations 29
Cbc0038I Pass  85: suminf.    1.20000 (6) obj. 8 iterations 59
Cbc0038I Pass  86: suminf.    1.24000 (7) obj. 8 iterations 95
Cbc0038I Pass  87: suminf.    1.20000 (6) obj. 8 iterations 37
Cbc0038I Pass  88: suminf.    1.20000 (6) obj. 8 iterations 84
Cbc0038I Pass  89: suminf.    1.20000 (6) obj. 8 iterations 99
Cbc0038I Pass  90: suminf.    1.20000 (6) obj. 8 iterations 27
Cbc0038I Pass  91: suminf.    1.20000 (6) obj. 8 iterations 52
Cbc0038I Pass  92: suminf.    1.24000 (7) obj. 8 iterations 66
Cbc0038I Pass  93: suminf.    1.20000 (6) obj. 8 iterations 35
Cbc0038I Pass  94: suminf.    1.20000 (6) obj. 8 iterations 62
Cbc0038I Pass  95: suminf.    1.20000 (6) obj. 8 iterations 70
Cbc0038I Pass  96: suminf.    1.20000 (6) obj. 8 iterations 13
Cbc0038I Pass  97: suminf.    1.20000 (6) obj. 8 iterations 68
Cbc0038I Pass  98: suminf.    1.24000 (7) obj. 8 iterations 100
Cbc0038I Pass  99: suminf.    1.20000 (6) obj. 8 iterations 40
Cbc0038I Pass 100: suminf.    4.55335 (29) obj. 7.6412 iterations 269
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 132 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1270 rows 336 columns, reduced to 1125 rows 204 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.81 seconds)
Cbc0038I After 3.81 seconds - Feasibility pump exiting - took 1.31 seconds
Cbc0012I Integer solution of 10 found by DiveCoefficient after 44785 iterations and 0 nodes (16.56 seconds)
Cbc0031I 44 added rows had average density of 14.068182
Cbc0013I At root node, 44 cuts changed objective from 1.3163618 to 8.6837607 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9867 row cuts average 8.4 elements, 27 column cuts (27 active)  in 1.336 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1023 row cuts average 162.1 elements, 0 column cuts (0 active)  in 0.464 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 207 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.192 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1160 row cuts average 70.7 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 791 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.668 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 10 best solution, best possible 9 (17.01 seconds)
Cbc0038I Full problem 1270 rows 336 columns, reduced to 228 rows 52 columns
Cbc0001I Search completed - best objective 10, took 49168 iterations and 8 nodes (19.30 seconds)
Cbc0032I Strong branching done 174 times (8542 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.31636 to 9
Probing was tried 115 times and created 9898 cuts of which 0 were active after adding rounds of cuts (1.367 seconds)
Gomory was tried 115 times and created 1024 cuts of which 0 were active after adding rounds of cuts (0.481 seconds)
Knapsack was tried 115 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.121 seconds)
Clique was tried 115 times and created 213 cuts of which 0 were active after adding rounds of cuts (0.079 seconds)
MixedIntegerRounding2 was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.192 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.112 seconds)
TwoMirCuts was tried 115 times and created 1252 cuts of which 0 were active after adding rounds of cuts (0.288 seconds)
ZeroHalf was tried 115 times and created 893 cuts of which 0 were active after adding rounds of cuts (0.724 seconds)
ImplicationCuts was tried 15 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                10.00000000
Enumerated nodes:               8
Total iterations:               49168
Time (CPU seconds):             19.28
Time (Wallclock seconds):       19.43

Option for printingOptions changed from normal to all
Total time (CPU seconds):       19.31   (Wallclock seconds):       19.48

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  5 ( room )  with  -
build_room  on object  5 ( room )  with  Bob

Time slot  1
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob
install_shower_b  on object  5 ( room )  with  -
install_shower_b  on object  5 ( room )  with  Sandy

Time slot  2
build_room  on object  3 ( room )  with  -
build_room  on object  3 ( room )  with  Bob

Time slot  3
build_room  on object  4 ( room )  with  -
build_room  on object  4 ( room )  with  Bob
install_kitchen  on object  1 ( room )  with  -
install_kitchen  on object  1 ( room )  with  Sandy
install_kitchen  on object  1 ( room )  with  Kay

Time slot  4
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob

Time slot  5
install_shower_b  on object  4 ( room )  with  -
install_shower_b  on object  4 ( room )  with  Sandy
install_toilet_b  on object  2 ( room )  with  -
install_toilet_b  on object  2 ( room )  with  Tina

Time slot  6
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
install_shower_t  on object  2 ( room )  with  -
install_shower_t  on object  2 ( room )  with  Sandy
install_toilet_s  on object  5 ( room )  with  -
install_toilet_s  on object  5 ( room )  with  Tina

Time slot  7
install_toilet_s  on object  4 ( room )  with  -
install_toilet_s  on object  4 ( room )  with  Tina
install_kitchen  on object  3 ( room )  with  -
install_kitchen  on object  3 ( room )  with  Sandy
install_kitchen  on object  3 ( room )  with  Kay

Time slot  8

Time slot  9
install_kitchen  on object  0 ( room )  with  -
install_kitchen  on object  0 ( room )  with  Sandy
install_kitchen  on object  0 ( room )  with  Kay

Time slot  10
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -
finish  on object  3 ( room )  with  -
finish  on object  4 ( room )  with  -
finish  on object  5 ( room )  with  -
Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - /home/gweisheit/.local/lib/python3.8/site-packages/pulp/solverdir/cbc/linux/64/cbc /tmp/df879cba6d474fc1a8489d5c69f0e299-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /tmp/df879cba6d474fc1a8489d5c69f0e299-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 6949 COLUMNS
At line 54857 RHS
At line 61802 BOUNDS
At line 64114 ENDATA
Problem MODEL has 6944 rows, 2311 columns and 40776 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.313141 - 0.04 seconds
Cgl0003I 50 fixed, 0 tightened bounds, 1361 strengthened rows, 688 substitutions
Cgl0003I 4 fixed, 0 tightened bounds, 930 strengthened rows, 44 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 865 strengthened rows, 50 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1114 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1071 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 981 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 924 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 840 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 694 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 542 strengthened rows, 0 substitutions
Cgl0004I processed model has 1270 rows, 336 columns (336 integer (335 of which binary)) and 16716 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 336 objects (336 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 161 integers unsatisfied sum - 14.0079
Cbc0038I Pass   1: suminf.   10.47110 (69) obj. 1.89195 iterations 517
Cbc0038I Pass   2: suminf.    8.19365 (38) obj. 3 iterations 168
Cbc0038I Pass   3: suminf.    6.85714 (14) obj. 5 iterations 123
Cbc0038I Pass   4: suminf.    3.51613 (18) obj. 8.14516 iterations 242
Cbc0038I Pass   5: suminf.    2.96182 (10) obj. 8 iterations 25
Cbc0038I Pass   6: suminf.    1.46984 (12) obj. 8 iterations 145
Cbc0038I Pass   7: suminf.    1.13333 (7) obj. 8 iterations 55
Cbc0038I Pass   8: suminf.    1.02222 (6) obj. 8 iterations 62
Cbc0038I Pass   9: suminf.    1.02222 (6) obj. 8 iterations 71
Cbc0038I Pass  10: suminf.    9.97218 (38) obj. 7.78952 iterations 197
Cbc0038I Pass  11: suminf.    2.00000 (10) obj. 8 iterations 160
Cbc0038I Pass  12: suminf.    1.60000 (8) obj. 8 iterations 147
Cbc0038I Pass  13: suminf.    1.20000 (6) obj. 8 iterations 60
Cbc0038I Pass  14: suminf.    1.24000 (7) obj. 8 iterations 62
Cbc0038I Pass  15: suminf.    1.20000 (6) obj. 8 iterations 42
Cbc0038I Pass  16: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  17: suminf.    1.20000 (6) obj. 8 iterations 74
Cbc0038I Pass  18: suminf.    1.20000 (6) obj. 8 iterations 23
Cbc0038I Pass  19: suminf.    1.20000 (6) obj. 8 iterations 56
Cbc0038I Pass  20: suminf.    1.24000 (7) obj. 8 iterations 86
Cbc0038I Pass  21: suminf.    1.20000 (6) obj. 8 iterations 33
Cbc0038I Pass  22: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  23: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  24: suminf.    1.20000 (6) obj. 8 iterations 37
Cbc0038I Pass  25: suminf.    1.20000 (6) obj. 8 iterations 75
Cbc0038I Pass  26: suminf.    1.24000 (7) obj. 8 iterations 101
Cbc0038I Pass  27: suminf.    1.20000 (6) obj. 8 iterations 37
Cbc0038I Pass  28: suminf.    1.20000 (6) obj. 8 iterations 52
Cbc0038I Pass  29: suminf.    1.20000 (6) obj. 8 iterations 81
Cbc0038I Pass  30: suminf.    1.20000 (6) obj. 8 iterations 23
Cbc0038I Pass  31: suminf.    1.20000 (6) obj. 8 iterations 79
Cbc0038I Pass  32: suminf.    1.24000 (7) obj. 8 iterations 89
Cbc0038I Pass  33: suminf.    1.20000 (6) obj. 8 iterations 34
Cbc0038I Pass  34: suminf.    1.20000 (6) obj. 8 iterations 70
Cbc0038I Pass  35: suminf.    1.20000 (6) obj. 8 iterations 103
Cbc0038I Pass  36: suminf.    1.20000 (6) obj. 8 iterations 15
Cbc0038I Pass  37: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  38: suminf.    1.24000 (7) obj. 8 iterations 88
Cbc0038I Pass  39: suminf.    1.20000 (6) obj. 8 iterations 58
Cbc0038I Pass  40: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  41: suminf.    1.20000 (6) obj. 8 iterations 96
Cbc0038I Pass  42: suminf.    1.20000 (6) obj. 8 iterations 14
Cbc0038I Pass  43: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  44: suminf.    1.24000 (7) obj. 8 iterations 100
Cbc0038I Pass  45: suminf.    1.20000 (6) obj. 8 iterations 32
Cbc0038I Pass  46: suminf.    1.20000 (6) obj. 8 iterations 77
Cbc0038I Pass  47: suminf.    1.20000 (6) obj. 8 iterations 68
Cbc0038I Pass  48: suminf.    1.20000 (6) obj. 8 iterations 36
Cbc0038I Pass  49: suminf.    1.20000 (6) obj. 8 iterations 73
Cbc0038I Pass  50: suminf.    1.24000 (7) obj. 8 iterations 100
Cbc0038I Pass  51: suminf.    1.20000 (6) obj. 8 iterations 43
Cbc0038I Pass  52: suminf.    1.20000 (6) obj. 8 iterations 49
Cbc0038I Pass  53: suminf.    1.20000 (6) obj. 8 iterations 90
Cbc0038I Pass  54: suminf.    1.20000 (6) obj. 8 iterations 36
Cbc0038I Pass  55: suminf.    1.20000 (6) obj. 8 iterations 60
Cbc0038I Pass  56: suminf.    1.24000 (7) obj. 8 iterations 82
Cbc0038I Pass  57: suminf.    1.20000 (6) obj. 8 iterations 41
Cbc0038I Pass  58: suminf.    1.20000 (6) obj. 8 iterations 135
Cbc0038I Pass  59: suminf.    1.20000 (6) obj. 8 iterations 100
Cbc0038I Pass  60: suminf.    1.20000 (6) obj. 8 iterations 24
Cbc0038I Pass  61: suminf.    1.20000 (6) obj. 8 iterations 57
Cbc0038I Pass  62: suminf.    1.24000 (7) obj. 8 iterations 98
Cbc0038I Pass  63: suminf.    1.20000 (6) obj. 8 iterations 45
Cbc0038I Pass  64: suminf.    1.20000 (6) obj. 8 iterations 69
Cbc0038I Pass  65: suminf.    1.20000 (6) obj. 8 iterations 81
Cbc0038I Pass  66: suminf.    1.20000 (6) obj. 8 iterations 38
Cbc0038I Pass  67: suminf.    1.20000 (6) obj. 8 iterations 74
Cbc0038I Pass  68: suminf.    1.24000 (7) obj. 8 iterations 91
Cbc0038I Pass  69: suminf.    1.20000 (6) obj. 8 iterations 45
Cbc0038I Pass  70: suminf.    1.20000 (6) obj. 8 iterations 75
Cbc0038I Pass  71: suminf.    1.20000 (6) obj. 8 iterations 93
Cbc0038I Pass  72: suminf.    1.20000 (6) obj. 8 iterations 19
Cbc0038I Pass  73: suminf.    1.20000 (6) obj. 8 iterations 110
Cbc0038I Pass  74: suminf.    1.24000 (7) obj. 8 iterations 88
Cbc0038I Pass  75: suminf.    1.20000 (6) obj. 8 iterations 32
Cbc0038I Pass  76: suminf.    1.20000 (6) obj. 8 iterations 61
Cbc0038I Pass  77: suminf.    1.20000 (6) obj. 8 iterations 62
Cbc0038I Pass  78: suminf.    1.20000 (6) obj. 8 iterations 22
Cbc0038I Pass  79: suminf.    1.20000 (6) obj. 8 iterations 64
Cbc0038I Pass  80: suminf.    1.24000 (7) obj. 8 iterations 106
Cbc0038I Pass  81: suminf.    1.20000 (6) obj. 8 iterations 36
Cbc0038I Pass  82: suminf.    1.20000 (6) obj. 8 iterations 85
Cbc0038I Pass  83: suminf.    1.20000 (6) obj. 8 iterations 97
Cbc0038I Pass  84: suminf.    1.20000 (6) obj. 8 iterations 29
Cbc0038I Pass  85: suminf.    1.20000 (6) obj. 8 iterations 59
Cbc0038I Pass  86: suminf.    1.24000 (7) obj. 8 iterations 95
Cbc0038I Pass  87: suminf.    1.20000 (6) obj. 8 iterations 37
Cbc0038I Pass  88: suminf.    1.20000 (6) obj. 8 iterations 84
Cbc0038I Pass  89: suminf.    1.20000 (6) obj. 8 iterations 99
Cbc0038I Pass  90: suminf.    1.20000 (6) obj. 8 iterations 27
Cbc0038I Pass  91: suminf.    1.20000 (6) obj. 8 iterations 52
Cbc0038I Pass  92: suminf.    1.24000 (7) obj. 8 iterations 66
Cbc0038I Pass  93: suminf.    1.20000 (6) obj. 8 iterations 35
Cbc0038I Pass  94: suminf.    1.20000 (6) obj. 8 iterations 62
Cbc0038I Pass  95: suminf.    1.20000 (6) obj. 8 iterations 70
Cbc0038I Pass  96: suminf.    1.20000 (6) obj. 8 iterations 13
Cbc0038I Pass  97: suminf.    1.20000 (6) obj. 8 iterations 68
Cbc0038I Pass  98: suminf.    1.24000 (7) obj. 8 iterations 100
Cbc0038I Pass  99: suminf.    1.20000 (6) obj. 8 iterations 40
Cbc0038I Pass 100: suminf.    4.55335 (29) obj. 7.6412 iterations 269
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 132 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1270 rows 336 columns, reduced to 1125 rows 204 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4.00 seconds)
Cbc0038I After 4.00 seconds - Feasibility pump exiting - took 1.38 seconds
Cbc0012I Integer solution of 10 found by DiveCoefficient after 44785 iterations and 0 nodes (17.33 seconds)
Cbc0031I 44 added rows had average density of 14.068182
Cbc0013I At root node, 44 cuts changed objective from 1.3163618 to 8.6837607 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9867 row cuts average 8.4 elements, 27 column cuts (27 active)  in 1.370 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1023 row cuts average 162.1 elements, 0 column cuts (0 active)  in 0.485 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 207 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.199 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1160 row cuts average 70.7 elements, 0 column cuts (0 active)  in 0.253 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 791 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.689 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 10 best solution, best possible 9 (17.79 seconds)
Cbc0038I Full problem 1270 rows 336 columns, reduced to 228 rows 52 columns
Cbc0001I Search completed - best objective 10, took 49168 iterations and 8 nodes (20.07 seconds)
Cbc0032I Strong branching done 174 times (8542 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.31636 to 9
Probing was tried 115 times and created 9898 cuts of which 0 were active after adding rounds of cuts (1.401 seconds)
Gomory was tried 115 times and created 1024 cuts of which 0 were active after adding rounds of cuts (0.501 seconds)
Knapsack was tried 115 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.124 seconds)
Clique was tried 115 times and created 213 cuts of which 0 were active after adding rounds of cuts (0.081 seconds)
MixedIntegerRounding2 was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.199 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.115 seconds)
TwoMirCuts was tried 115 times and created 1252 cuts of which 0 were active after adding rounds of cuts (0.302 seconds)
ZeroHalf was tried 115 times and created 893 cuts of which 0 were active after adding rounds of cuts (0.744 seconds)
ImplicationCuts was tried 15 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                10.00000000
Enumerated nodes:               8
Total iterations:               49168
Time (CPU seconds):             19.96
Time (Wallclock seconds):       20.19

Option for printingOptions changed from normal to all
Total time (CPU seconds):       20.00   (Wallclock seconds):       20.24

end constraints done
general activity object constraints done
duration constraints done
resource constraints done
goals done... start solving

Time slot  0
build_room  on object  5 ( room )  with  -
build_room  on object  5 ( room )  with  Bob

Time slot  1
build_room  on object  1 ( room )  with  -
build_room  on object  1 ( room )  with  Bob
install_shower_b  on object  5 ( room )  with  -
install_shower_b  on object  5 ( room )  with  Sandy

Time slot  2
build_room  on object  3 ( room )  with  -
build_room  on object  3 ( room )  with  Bob

Time slot  3
build_room  on object  4 ( room )  with  -
build_room  on object  4 ( room )  with  Bob
install_kitchen  on object  1 ( room )  with  -
install_kitchen  on object  1 ( room )  with  Sandy
install_kitchen  on object  1 ( room )  with  Kay

Time slot  4
build_room  on object  2 ( room )  with  -
build_room  on object  2 ( room )  with  Bob

Time slot  5
install_shower_b  on object  4 ( room )  with  -
install_shower_b  on object  4 ( room )  with  Sandy
install_toilet_b  on object  2 ( room )  with  -
install_toilet_b  on object  2 ( room )  with  Tina

Time slot  6
build_room  on object  0 ( room )  with  -
build_room  on object  0 ( room )  with  Bob
install_shower_t  on object  2 ( room )  with  -
install_shower_t  on object  2 ( room )  with  Sandy
install_toilet_s  on object  5 ( room )  with  -
install_toilet_s  on object  5 ( room )  with  Tina

Time slot  7
install_toilet_s  on object  4 ( room )  with  -
install_toilet_s  on object  4 ( room )  with  Tina
install_kitchen  on object  3 ( room )  with  -
install_kitchen  on object  3 ( room )  with  Sandy
install_kitchen  on object  3 ( room )  with  Kay

Time slot  8

Time slot  9
install_kitchen  on object  0 ( room )  with  -
install_kitchen  on object  0 ( room )  with  Sandy
install_kitchen  on object  0 ( room )  with  Kay

Time slot  10
finish  on object  0 ( room )  with  -
finish  on object  1 ( room )  with  -
finish  on object  2 ( room )  with  -
finish  on object  3 ( room )  with  -
finish  on object  4 ( room )  with  -
finish  on object  5 ( room )  with  -
